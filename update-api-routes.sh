#!/bin/bash
# Auto-generated update script for API route consolidation
# Generated by consolidate-api-routes.py

echo 'Updating API routes for consolidation...'

echo 'Updating error response patterns...'

sed -i '' 's/NextResponse.json(
        { error: '"'"'Missing required fields'"'"' },
        { status: 400 }
      )/errorResponses.badRequest()/g' app/api/feedback/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Invalid feedback type'"'"' },
        { status: 400 }
      )/errorResponses.badRequest()/g' app/api/feedback/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Invalid priority level'"'"' },
        { status: 400 }
      )/errorResponses.badRequest()/g' app/api/feedback/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Failed to save feedback'"'"' },
        { status: 500 }
      )/errorResponses.internalError()/g' app/api/feedback/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Internal server error'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/feedback/route.ts
sed -i '' 's/NextResponse.json(
          { error: '"'"'Failed to fetch feedback'"'"' },
          { status: 500 }
        )/errorResponses.internalError()/g' app/api/feedback/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Internal server error'"'"' },
        { status: 500 }
      )/errorResponses.internalError()/g' app/api/feedback/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Invalid request data'"'"' },
        { status: 400 }
      )/errorResponses.badRequest()/g' app/api/analytics/route.ts
sed -i '' 's/NextResponse.json(
          { error: '"'"'Invalid events array'"'"' },
          { status: 400 }
        )/errorResponses.badRequest()/g' app/api/analytics/route.ts
sed -i '' 's/NextResponse.json(
          { error: '"'"'Invalid event data'"'"' },
          { status: 400 }
        )/errorResponses.badRequest()/g' app/api/analytics/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Invalid request format'"'"' },
      { status: 400 }
    )/errorResponses.badRequest()/g' app/api/analytics/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Missing required fields'"'"' },
        { status: 400 }
      )/errorResponses.badRequest()/g' app/api/reviews/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to create review'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/reviews/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Cron secret not configured'"'"' },
        { status: 500 }
      )/errorResponses.internalError()/g' app/api/cron/cleanup-anonymous/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Unauthorized'"'"' },
        { status: 401 }
      )/errorResponses.unauthorized()/g' app/api/cron/cleanup-anonymous/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Failed to query anonymous users'"'"' },
        { status: 500 }
      )/errorResponses.internalError()/g' app/api/cron/cleanup-anonymous/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/account/link/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Linking failed'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/account/link/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Provider required'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/account/link/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Re-authentication failed'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/account/link/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid action'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/account/link/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Internal server error'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/account/link/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/account/link/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Internal server error'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/account/link/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Unauthorized'"'"' },
        { status: 401 }
      )/errorResponses.unauthorized()/g' app/api/maintenance/cleanup-anonymous/route.ts
sed -i '' 's/NextResponse.json(
          { error: '"'"'Batch size too large'"'"' },
          { status: 400 }
        )/errorResponses.badRequest()/g' app/api/maintenance/cleanup-anonymous/route.ts
sed -i '' 's/NextResponse.json(
          { error: '"'"'Invalid max age'"'"' },
          { status: 400 }
        )/errorResponses.badRequest()/g' app/api/maintenance/cleanup-anonymous/route.ts
sed -i '' 's/NextResponse.json(
          { error: '"'"'Failed to list users'"'"' },
          { status: 500 }
        )/errorResponses.internalError()/g' app/api/maintenance/cleanup-anonymous/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/kosher-places/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/kosher-places/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to fetch kosher places'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/kosher-places/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'CSRF token validation failed'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/bulk/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to perform bulk operation'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/bulk/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Correlation ID is required'"'"' },
        { status: 400 }
      )/errorResponses.badRequest()/g' app/api/admin/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Not found'"'"' }, { status: 404 })/errorResponses.notFound()/g' app/api/admin/bulk/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to get bulk operation status'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to fetch images'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to create image record'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Image ID is required'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid image ID. Must be an integer.'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to update image record'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Image ID is required'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid image ID. Must be an integer.'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to delete image'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/images/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to create restaurant'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Restaurant ID is required'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to update restaurant'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid restaurant ID'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to delete restaurant'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/synagogues/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/synagogues/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to fetch synagogues'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/synagogues/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/promote-user/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/promote-user/route.ts
sed -i '' 's/NextResponse.json({ 
        error: '"'"'Must provide either targetUserId or targetEmail'"'"' 
      }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/promote-user/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'User not found'"'"' }, { status: 404 })/errorResponses.notFound()/g' app/api/admin/promote-user/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Failed to search users'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/admin/promote-user/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'User not found'"'"' }, { status: 404 })/errorResponses.notFound()/g' app/api/admin/promote-user/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'User not found'"'"' }, { status: 404 })/errorResponses.notFound()/g' app/api/admin/promote-user/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/audit/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/audit/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to fetch audit logs'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/audit/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/audit/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/audit/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unsupported format'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/audit/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to export audit logs'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/audit/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to fetch users'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Email already exists'"'"' }, { status: 409 })/errorResponses.createErrorResponse(409, 'message')/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'User with this information already exists'"'"' },
        { status: 409 }
      )/errorResponses.createErrorResponse(409, 'message')/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to create user'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'User ID is required'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions to modify admin roles'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json(
          { error: '"'"'User with this information already exists'"'"' },
          { status: 409 }
        )/errorResponses.createErrorResponse(409, 'message')/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json(
          { error: '"'"'User not found'"'"' },
          { status: 404 }
        )/errorResponses.notFound()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to update user'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'User ID is required'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Cannot delete your own account'"'"' },
        { status: 400 }
      )/errorResponses.badRequest()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'User not found'"'"' },
        { status: 404 }
      )/errorResponses.notFound()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to delete user'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/users/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/reviews/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/reviews/bulk/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to perform bulk operation'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/reviews/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/reviews/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/reviews/export/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to export reviews'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/reviews/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/reviews/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/reviews/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Failed to export reviews'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/admin/reviews/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/reviews/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/reviews/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid review ID'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/reviews/[id]/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to delete review'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/reviews/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/store/metrics/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/store/metrics/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'No vendor assigned to this admin'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/store/metrics/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Multiple vendors assigned. Provide vendorId.'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/store/metrics/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Forbidden: vendor access denied'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/store/metrics/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Vendor mapping unavailable'"'"' }, { status: 503 })/errorResponses.createErrorResponse(503, 'message')/g' app/api/admin/store/metrics/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/submissions/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/submissions/restaurants/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/users/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/users/export/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to export users'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/users/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/users/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/users/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Failed to export users'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/admin/users/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/users/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/users/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid user ID'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/users/[id]/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to delete user'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/users/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/audit/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/audit/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Failed to export audit logs'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/admin/audit/export/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Insufficient permissions for dashboard metrics'"'"' },
        { status: 403 }
      )/errorResponses.forbidden()/g' app/api/admin/dashboard/metrics/route.ts
sed -i '' 's/NextResponse.json(
    { error: '"'"'Method not allowed'"'"' },
    { status: 405 }
  )/errorResponses.createErrorResponse(405, 'message')/g' app/api/admin/dashboard/metrics/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/meta/[entity]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid entity type'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/meta/[entity]/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to fetch entity metadata'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/meta/[entity]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/restaurants/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/restaurants/bulk/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to perform bulk operation'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/restaurants/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/restaurants/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/restaurants/export/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to export restaurants'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/restaurants/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/restaurants/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/restaurants/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Failed to export restaurants'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/admin/restaurants/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/restaurants/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/restaurants/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid restaurant ID'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/restaurants/[id]/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to delete restaurant'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/restaurants/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/restaurants/[id]/reject/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/restaurants/[id]/reject/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid restaurant ID'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/restaurants/[id]/reject/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid JSON body'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/restaurants/[id]/reject/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to reject restaurant'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/restaurants/[id]/reject/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/images/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/images/bulk/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to perform bulk operation'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/images/bulk/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/images/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/images/export/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to export images'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/images/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/images/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/images/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Failed to export images'"'"' }, { status: 500 })/errorResponses.internalError()/g' app/api/admin/images/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/images/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/images/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Invalid image ID'"'"' }, { status: 400 })/errorResponses.badRequest()/g' app/api/admin/images/[id]/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to delete image'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/images/[id]/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/kosher-places/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Insufficient permissions'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/kosher-places/export/route.ts
sed -i '' 's/NextResponse.json(
      { error: '"'"'Failed to export kosher places'"'"' },
      { status: 500 }
    )/errorResponses.internalError()/g' app/api/admin/kosher-places/export/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Not found'"'"' }, { status: 404 })/errorResponses.notFound()/g' app/api/admin/rbac/validate/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Unauthorized'"'"' }, { status: 401 })/errorResponses.unauthorized()/g' app/api/admin/rbac/validate/route.ts
sed -i '' 's/NextResponse.json({ error: '"'"'Forbidden'"'"' }, { status: 403 })/errorResponses.forbidden()/g' app/api/admin/rbac/validate/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Limit must be between 1 and 100'"'"' },
        { status: 400 }
      )/errorResponses.badRequest()/g' app/api/restaurants/fetch-missing-websites/route.ts
sed -i '' 's/NextResponse.json(
        { error: '"'"'Limit must be between 1 and 100'"'"' },
        { status: 400 }
      )/errorResponses.badRequest()/g' app/api/restaurants/fetch-missing-hours/route.ts

echo 'Adding imports for new utilities...'

# This section requires manual review and updates
# Add the following imports to files that need them:
# import { errorResponses } from '@/lib/utils/error-responses';
# import { getBackendUrl, getFrontendUrl } from '@/lib/api-config';

echo 'Update complete! Please review and test changes.'