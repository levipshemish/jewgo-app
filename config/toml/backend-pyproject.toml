[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jewgo-backend"
version = "3.0.0"
description = "JewGo Backend API Server"
authors = [{name = "JewGo Development Team"}]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "Flask>=2.3.3",
    "Flask-CORS>=4.0.0",
    "psycopg2-binary>=2.9.9",
    "SQLAlchemy>=1.4.54",
    "alembic>=1.11.3",
    "python-dotenv>=1.0.0",
    "gunicorn>=21.2.0",
    "Flask-Limiter>=3.5.0",
    "marshmallow>=3.20.1",
    "structlog>=23.2.0",
    "sentry-sdk[flask]>=1.38.0",
    "requests>=2.31.0",
    "playwright>=1.40.0",
    "beautifulsoup4>=4.12.2",
    "lxml>=4.9.3",
    "pytz>=2023.3",
    "python-dateutil>=2.8.2",
    "cloudinary>=1.36.0",
    "Pillow>=10.0.0",
    "python-magic>=0.4.27",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-flask>=1.3.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.5",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv_py311
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
# Inherit from ruff.toml

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "flask.*",
    "flask_cors.*",
    "flask_limiter.*",
    "psycopg2.*",
    "sqlalchemy.*",
    "alembic.*",
    "structlog.*",
    "sentry_sdk.*",
    "playwright.*",
    "bs4.*",
    "lxml.*",
    "cloudinary.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv_py311/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations", "venv_py311"]
skips = ["B101", "B601"] 