services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Production environment matching Vercel
      - NODE_ENV=production
      - CI=true
      - VERCEL=1
      
      # Required environment variables for production build (matching CI workflow)
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL:-https://jewgo-app-oyoh.onrender.com}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-https://jewgo-app.vercel.app}
      - DATABASE_URL=${DATABASE_URL}
      
      # Supabase Configuration
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      
      # Google Maps API
      - NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID=${NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID}
      
      # Admin Configuration
      - NEXT_PUBLIC_ADMIN_EMAIL=${NEXT_PUBLIC_ADMIN_EMAIL:-admin@jewgo.com}
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      
      # Additional production variables
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION}
      - PRISMA_QUERY_ENGINE_TYPE=${PRISMA_QUERY_ENGINE_TYPE:-library}
    networks:
      - frontend-network
    restart: unless-stopped
    # Production health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  frontend-network:
    driver: bridge
