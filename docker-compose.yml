version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.4-alpine
    container_name: jewgo_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-jewgo_db}
      POSTGRES_USER: ${POSTGRES_USER:-jewgo_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password_here}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./enable_postgis.sql:/docker-entrypoint-initdb.d/enable_postgis.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-jewgo_user} -d ${POSTGRES_DB:-jewgo_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: jewgo_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-your_redis_password_here}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: jewgo_backend
    environment:
      # Database - Fixed configuration for remote server
      DATABASE_URL: postgresql://app_user:Jewgo123@129.80.190.110:5432/app_db
      PGHOST: 129.80.190.110
      PGPORT: 5432
      PGDATABASE: app_db
      PGUSER: app_user
      PGPASSWORD: Jewgo123
      
      # Redis - Use memory mode for local development
      REDIS_URL: memory://
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: 
      REDIS_DB: 0
      
      # Application - Local development settings
      NODE_ENV: development
      FLASK_ENV: development
      SECRET_KEY: dev-secret-key-change-in-production
      JWT_SECRET_KEY: dev-jwt-secret-key-change-in-production
      
      # CORS - Local development
      CORS_ORIGINS: http://localhost:3000,http://127.0.0.1:3000,http://localhost:5000,http://127.0.0.1:5000
      
      # Google Maps
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      
      # Email
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      FROM_EMAIL: ${FROM_EMAIL}
      
      # GitHub Webhook
      GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET}
      
      # Sentry Configuration
      SENTRY_DSN: ${SENTRY_DSN}
      
      # AWS S3 Backup Configuration
      # AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      # AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: us-east-1
      S3_BACKUP_BUCKET: jewgo-backups1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ./backend/uploads:/app/uploads
    restart: unless-stopped

  webhook:
    build:
      context: ./scripts/deployment
      dockerfile: Dockerfile.webhook
    container_name: jewgo_webhook
    environment:
      WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET}
    volumes:
      - /home/ubuntu/jewgo-app:/home/ubuntu/jewgo-app
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /app
    ports:
      - "8080:8080"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: jewgo_frontend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_BACKEND_URL: http://backend:5000
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID: ${NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - backend
    ports:
      - "3000:3000"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: jewgo_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: