{
  "name": "jewgo-frontend",
  "version": "0.1.1",
  "private": true,
  "engines": {
    "node": "22.x"
  },
  "scripts": {
    "dev": "next dev",
    "build": "prisma generate && next build --no-lint",
    "export": "next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit --project tsconfig.json",
    "test": "jest",
    "test:watch": "jest --watch",
    "health-check": "echo 'Health check script removed during cleanup - use validate-env instead'",
    "validate-env": "node scripts/validate-env-unified.js",
    "validate-env-build": "node scripts/validate-env-unified.js --build-only",
    "validate-env-runtime": "node scripts/validate-env-unified.js",
    "check-env": "node scripts/check-environment.js",
    "deploy:check": "npm run validate-env && echo 'âœ… Deployment validation complete'",
    "deploy:validate": "node scripts/deploy-validate.js",
    "deploy:setup": "node scripts/deploy-setup.js",
    "deploy:vercel": "node scripts/deploy-vercel.js",
    "deploy:render": "node scripts/deploy-render.js",
    "deploy:docker": "node scripts/deploy-docker.js",
    "deploy:production": "npm run deploy:check && npm run deploy:vercel",
    "deploy:staging": "npm run deploy:check && npm run deploy:render",
    "deploy:local": "npm run deploy:check && npm run deploy:docker",
    "postinstall": "prisma generate",
    "db:migrate:dev": "prisma migrate dev",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:seed": "tsx prisma/seed.ts",
    "db:seed:simple": "tsx prisma/seed-simple.ts",
    "ci:build": "npm ci --omit=dev && npm run build",
    "ci:test": "npm ci --omit=dev && npm run test",
    "ci:lint": "npm ci --omit=dev && npm run lint",
    "ci:type-check": "npm ci --omit=dev && npm run type-check",
    "ci:all": "npm ci --omit=dev && npm run build && npm run test && npm run lint && npm run type-check",
    "optimize": "node scripts/optimize-unified.js",
    "optimize:all": "node scripts/optimize-unified.js all",
    "optimize:build": "node scripts/optimize-unified.js build",
    "optimize:bundles": "node scripts/optimize-unified.js bundles",
    "optimize:images": "node scripts/optimize-unified.js images",
    "optimize:css": "node scripts/optimize-unified.js css",
    "optimize:performance": "node scripts/optimize-unified.js performance",
    "optimize:webpack": "node scripts/optimize-unified.js webpack",
    "optimize:report": "node scripts/optimize-unified.js report",
    "fix": "node scripts/fix-unified.js",
    "fix:all": "node scripts/fix-unified.js all",
    "fix:eslint": "node scripts/fix-unified.js eslint",
    "fix:warnings": "node scripts/fix-unified.js warnings",
    "fix:remaining": "node scripts/fix-unified.js remaining",
    "fix:linting": "node scripts/fix-unified.js linting",
    "fix:cleanup": "node scripts/fix-unified.js cleanup",
    "fix:post-build": "node scripts/fix-unified.js post-build",
    "fix:report": "node scripts/fix-unified.js report",
    "error-handling:apply": "node scripts/apply-error-handling.js",
    "error-handling:test": "node scripts/utils/errorHandler.js",
    "error-handling:report": "node -e \"const { defaultErrorHandler } = require('./scripts/utils/errorHandler'); console.log(JSON.stringify(defaultErrorHandler.generateReport(), null, 2));\"",
    "logging:apply": "node scripts/apply-logging-standards.js",
    "logging:test": "node scripts/utils/logger.js",
    "logging:report": "node -e \"const { defaultLogger } = require('./scripts/utils/logger'); console.log(JSON.stringify(defaultLogger.generateReport(), null, 2));\"",
    "docs:apply": "node scripts/apply-documentation-template.js",
    "docs:test": "node scripts/utils/docTemplate.js",
    "docs:validate": "node -e \"const { defaultDocTemplate } = require('./scripts/utils/docTemplate'); console.log('Documentation template system loaded successfully');\"",
    "performance:monitor": "node scripts/performance-monitor.js --full-test",
    "performance:build": "node scripts/performance-monitor.js --build-test",
    "performance:scripts": "node scripts/performance-monitor.js --script-test",
    "cleanup:schedule": "node scripts/periodic-cleanup-scheduler.js --schedule",
    "cleanup:run": "node scripts/periodic-cleanup-scheduler.js --run-now",
    "cleanup:status": "node scripts/periodic-cleanup-scheduler.js --status",
    "cleanup:monitor": "node scripts/periodic-cleanup-scheduler.js --monitor",
    "validate:test-demo": "node scripts/validate-test-demo-files.js --report",
    "validate:test-demo:strict": "node scripts/validate-test-demo-files.js --strict --report",
    "unused:scan": "node scripts/unused-files-detector.js --scan --report",
    "unused:cleanup": "node scripts/unused-files-detector.js --scan --cleanup",
    "test:scripts": "node scripts/test-framework.js --all --report",
    "test:scripts:coverage": "node scripts/test-framework.js --all --coverage --report",
    "monitor:performance": "node scripts/script-performance-monitor.js --monitor --report --save",
    "monitor:trends": "node scripts/script-performance-monitor.js --trends",
    "monitor:alerts": "node scripts/script-performance-monitor.js --alerts",
    "cicd:monitor": "node scripts/cicd-integration.js --monitor",
    "cicd:report": "node scripts/cicd-integration.js --monitor --report",
    "cicd:validate": "node scripts/cicd-integration.js --validate",
    "cicd:deploy": "node scripts/cicd-integration.js --deploy",
    "cicd:status": "node scripts/cicd-integration.js --status",
    "cicd:cleanup": "node scripts/cicd-integration.js --cleanup",
    "cicd:deploy:staging": "node scripts/cicd-integration.js --deploy --env=staging",
    "cicd:deploy:production": "node scripts/cicd-integration.js --deploy --env=production",
    "admin:verify": "tsx scripts/setup-admin-production.ts verify",
    "admin:list": "tsx scripts/setup-admin-production.ts list",
    "admin:create-super-admin": "tsx scripts/setup-admin-production.ts create-super-admin",
    "admin:assign-role": "tsx scripts/setup-admin-production.ts assign-role",
    "admin:get-role": "tsx scripts/setup-admin-production.ts get-role",
    "admin:create-tables": "tsx scripts/create-admin-tables.ts"
  },
  "dependencies": {
    "@googlemaps/js-api-loader": "^1.16.10",
    "@googlemaps/markerclusterer": "^2.6.2",
    "@heroicons/react": "^2.2.0",
    "@hookform/resolvers": "^5.2.1",
    "@prisma/client": "^5.22.0",
    "@sentry/nextjs": "^10.5.0",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.55.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/ioredis": "^4.28.10",
    "@types/leaflet": "^1.9.20",
    "@types/nodemailer": "^6.4.17",
    "@types/uuid": "^10.0.0",
    "@upstash/ratelimit": "^2.0.6",
    "@upstash/redis": "^1.35.3",
    "bcryptjs": "^2.4.3",
    "clsx": "^2.1.1",
    "dayjs": "^1.11.13",
    "dotenv": "^17.2.1",
    "eslint": "^8.57.0",
    "eslint-config-next": "^15.4.6",
    "framer-motion": "^12.23.12",
    "ioredis": "^5.7.0",
    "ipaddr.js": "^2.2.0",
    "leaflet": "^1.9.4",
    "lucide-react": "^0.536.0",
    "next": "^15.4.5",
    "node-fetch": "^3.3.2",
    "nodemailer": "^6.10.1",
    "otplib": "^12.0.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.62.0",
    "redis": "^5.8.1",
    "swr": "^2.3.6",
    "tailwind-merge": "^3.3.1",
    "uuid": "^11.1.0",
    "web-vitals": "^5.1.0",
    "zod": "^4.0.17"
  },
  "devDependencies": {
    "@babel/plugin-transform-runtime": "^7.28.3",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@netlify/plugin-nextjs": "^5.12.0",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.2.1",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "@typescript-eslint/eslint-plugin": "^8.7.0",
    "@typescript-eslint/parser": "^8.7.0",
    "autoprefixer": "^10.4.21",
    "babel-loader": "^10.0.0",
    "depcheck": "^1.4.7",
    "dependency-cruiser": "^13.0.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-axe": "^10.0.0",
    "jest-environment-jsdom": "^30.0.5",
    "jscpd": "^3.5.10",
    "knip": "^5.0.0",
    "lighthouse": "^12.8.0",
    "madge": "^6.1.0",
    "null-loader": "^4.0.1",
    "postcss": "^8.5.6",
    "postcss-flexbugs-fixes": "^5.0.2",
    "postcss-preset-env": "^10.3.0",
    "prettier": "^3.2.4",
    "prisma": "^5.22.0",
    "puppeteer": "^24.0.0",
    "sharp": "^0.34.3",
    "tailwindcss": "^3.4.17",
    "ts-prune": "^0.10.3",
    "tsx": "^4.20.4",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4"
  },
  "overrides": {
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "eslint": "^8.57.0",
    "rimraf": "^5.0.0",
    "glob": "^10.0.0",
    "@humanwhocodes/config-array": "^0.13.0",
    "@humanwhocodes/object-schema": "^2.0.3",
    "cookie": "^0.7.0"
  },
  "browserslist": [
    "defaults",
    "not ie 11",
    "not ie_mob 11"
  ]
}
