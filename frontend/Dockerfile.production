# Multi-stage build for production optimization
FROM node:22-alpine AS builder

# Install build dependencies
RUN apk add --no-cache curl openssl

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY package-lock.json ./

# Copy Prisma schema before installing dependencies
COPY prisma ./prisma/

# Install all dependencies (including devDependencies for build)
RUN npm ci --frozen-lockfile

# Copy source code
COPY . .

# Set build-time environment variables
ENV NODE_ENV=production
ENV CI=true
ENV DOCKER=true
ENV NEXT_PUBLIC_SUPABASE_REALTIME_ENABLED=false

# Generate Prisma client
RUN npx prisma generate

# Run build-time environment validation
RUN npm run validate-env-build

# Build the application for production
RUN npm run build

# Production stage
FROM node:22-alpine AS production

# Install runtime dependencies
RUN apk add --no-cache curl openssl

# Set working directory
WORKDIR /app

# Create a non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Copy package files for production dependencies
COPY package*.json ./
COPY package-lock.json ./

# Copy Prisma schema
COPY prisma ./prisma/

# Install only production dependencies
RUN npm ci --omit=dev --frozen-lockfile && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/next.config.js ./next.config.js
COPY --from=builder --chown=nextjs:nodejs /app/scripts ./scripts

# Generate Prisma client for production
RUN npx prisma generate

# Create necessary directories and set permissions
RUN mkdir -p /app/logs /app/temp && \
    chown -R nextjs:nodejs /app

# Switch to non-root user
USER nextjs

# Expose port 3000
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000 || exit 1

# Set production environment variables
ENV NODE_ENV=production
ENV DOCKER=true
ENV NEXT_PUBLIC_SUPABASE_REALTIME_ENABLED=false

# Start the application
CMD ["npm", "start"]
