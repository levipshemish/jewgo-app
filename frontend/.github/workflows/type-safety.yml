name: Type Safety Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**/*.{ts,tsx,js,jsx}'
      - 'frontend/package.json'
      - 'frontend/tsconfig.json'
      - 'frontend/.eslintrc.json'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**/*.{ts,tsx,js,jsx}'
      - 'frontend/package.json'
      - 'frontend/tsconfig.json'
      - 'frontend/.eslintrc.json'

jobs:
  type-safety:
    name: Type Safety Validation
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run TypeScript type check
        run: npm run type-check
        
      - name: Run ESLint validation
        run: npm run lint
        
      - name: Run comprehensive type safety check
        run: npm run type-safety-check
        
      - name: Check for any TypeScript errors
        run: |
          echo "üîç Final TypeScript validation..."
          npx tsc --noEmit --project tsconfig.json
          echo "‚úÖ No TypeScript errors found!"
          
      - name: Upload type safety report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: type-safety-report
          path: |
            frontend/coverage/
            frontend/.eslintcache
          retention-days: 7
          
  build-validation:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: type-safety
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Verify build output
        run: |
          if [ -d ".next" ]; then
            echo "‚úÖ Build successful - .next directory created"
            ls -la .next/
          else
            echo "‚ùå Build failed - .next directory not found"
            exit 1
          fi
          
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: frontend/.next/
          retention-days: 1
