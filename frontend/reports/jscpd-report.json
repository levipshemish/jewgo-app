{
  "statistics": {
    "detectionDate": "2025-08-19T05:19:24.306Z",
    "formats": {
      "javascript": {
        "sources": {
          "scripts/utils/scriptUtils.js": {
            "lines": 175,
            "tokens": 1129,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 36,
            "duplicatedTokens": 428,
            "percentage": 20.57,
            "percentageTokens": 37.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/utils/buildUtils.js": {
            "lines": 572,
            "tokens": 3558,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 57,
            "duplicatedTokens": 262,
            "percentage": 9.97,
            "percentageTokens": 7.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/validate-supabase-env.js": {
            "lines": 60,
            "tokens": 461,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/validate-env.js": {
            "lines": 70,
            "tokens": 623,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/validate-css.js": {
            "lines": 134,
            "tokens": 1327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/update-hours-cron.js": {
            "lines": 69,
            "tokens": 459,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/test-prisma-config.js": {
            "lines": 116,
            "tokens": 878,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/test-map-performance.js": {
            "lines": 71,
            "tokens": 699,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/test-font-loading.js": {
            "lines": 148,
            "tokens": 1275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/test-filter-performance.js": {
            "lines": 288,
            "tokens": 2919,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 248,
            "percentage": 4.86,
            "percentageTokens": 8.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/test-email.js": {
            "lines": 76,
            "tokens": 510,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/test-email-service.js": {
            "lines": 23,
            "tokens": 166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/test-api-endpoints.js": {
            "lines": 32,
            "tokens": 234,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/start-with-polyfill.js": {
            "lines": 38,
            "tokens": 244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/setup-monitoring.js": {
            "lines": 451,
            "tokens": 2096,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/setup-env.js": {
            "lines": 58,
            "tokens": 392,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/rotate-logs.js": {
            "lines": 26,
            "tokens": 250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/replace-original-images.js": {
            "lines": 275,
            "tokens": 2225,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 68,
            "duplicatedTokens": 611,
            "percentage": 24.73,
            "percentageTokens": 27.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/remove-console-logs.js": {
            "lines": 141,
            "tokens": 1020,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/post-build-fix.js": {
            "lines": 113,
            "tokens": 872,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/performance-optimization.js": {
            "lines": 154,
            "tokens": 1150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/optimize-images.js": {
            "lines": 305,
            "tokens": 2816,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 47,
            "duplicatedTokens": 400,
            "percentage": 15.41,
            "percentageTokens": 14.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/optimize-css.js": {
            "lines": 156,
            "tokens": 1321,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 79,
            "percentage": 4.49,
            "percentageTokens": 5.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/optimize-bundles.js": {
            "lines": 256,
            "tokens": 2122,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 81,
            "percentage": 5.47,
            "percentageTokens": 3.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/health-monitor.js": {
            "lines": 385,
            "tokens": 2877,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/fix-warnings-safely.js": {
            "lines": 127,
            "tokens": 1120,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 38,
            "duplicatedTokens": 385,
            "percentage": 29.92,
            "percentageTokens": 34.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/fix-remaining-warnings.js": {
            "lines": 154,
            "tokens": 1206,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 130,
            "duplicatedTokens": 1117,
            "percentage": 84.42,
            "percentageTokens": 92.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/fix-linting.js": {
            "lines": 71,
            "tokens": 518,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 79,
            "percentage": 9.86,
            "percentageTokens": 15.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/fix-font-css.js": {
            "lines": 161,
            "tokens": 1079,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/final-warning-cleanup.js": {
            "lines": 152,
            "tokens": 1353,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 110,
            "duplicatedTokens": 943,
            "percentage": 72.37,
            "percentageTokens": 69.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/enhanced-image-optimizer.js": {
            "lines": 356,
            "tokens": 3033,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 101,
            "duplicatedTokens": 891,
            "percentage": 28.37,
            "percentageTokens": 29.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/deploy-validate.js": {
            "lines": 167,
            "tokens": 992,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/deploy-setup.js": {
            "lines": 135,
            "tokens": 839,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 57,
            "duplicatedTokens": 262,
            "percentage": 42.22,
            "percentageTokens": 31.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/clear-cache.js": {
            "lines": 31,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/cleanup-unused-vars.js": {
            "lines": 177,
            "tokens": 940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/cleanup-remaining-vars.js": {
            "lines": 186,
            "tokens": 1549,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 38,
            "duplicatedTokens": 336,
            "percentage": 20.43,
            "percentageTokens": 21.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/check-environment.js": {
            "lines": 64,
            "tokens": 531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/check-auth.js": {
            "lines": 18,
            "tokens": 253,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/aggregate-metrics.js": {
            "lines": 35,
            "tokens": 361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/polyfills/self-polyfill.js": {
            "lines": 20,
            "tokens": 133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/polyfills/global-polyfill.js": {
            "lines": 24,
            "tokens": 140,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useFeatureFlags.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/contexts/NotificationsContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/SubNav.tsx": {
            "lines": 109,
            "tokens": 836,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/MobileCategoryTabs.tsx": {
            "lines": 109,
            "tokens": 778,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/CategoryTabs.tsx": {
            "lines": 121,
            "tokens": 849,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/BottomNavigation.tsx": {
            "lines": 46,
            "tokens": 391,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/__tests__/MapNotification.test.tsx": {
            "lines": 74,
            "tokens": 647,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/__tests__/MapLegend.test.tsx": {
            "lines": 41,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/__tests__/MapControls.test.tsx": {
            "lines": 40,
            "tokens": 446,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/eatery/ui/EateryCard.tsx": {
            "lines": 4,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/eatery/ui/CardSkeleton.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/VirtualList.tsx": {
            "lines": 170,
            "tokens": 1438,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/UnifiedCard.tsx": {
            "lines": 28,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/TouchTestComponent.tsx": {
            "lines": 74,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/Toast.tsx": {
            "lines": 66,
            "tokens": 656,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/StickyCTA.tsx": {
            "lines": 79,
            "tokens": 592,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/StarRating.tsx": {
            "lines": 99,
            "tokens": 642,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/SharePopup.tsx": {
            "lines": 96,
            "tokens": 875,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/RefreshButton.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/PillDropdown.tsx": {
            "lines": 68,
            "tokens": 487,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/PerformanceMonitor.tsx": {
            "lines": 101,
            "tokens": 1023,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/PerformanceDashboard.tsx": {
            "lines": 133,
            "tokens": 1347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/PasswordChangeModal.tsx": {
            "lines": 159,
            "tokens": 1435,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/OptimizedImage.tsx": {
            "lines": 29,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/NotificationPreferences.tsx": {
            "lines": 124,
            "tokens": 1127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/NotificationDemo.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LogoIcon.tsx": {
            "lines": 7,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/Logo.tsx": {
            "lines": 2,
            "tokens": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LoadingStates.tsx": {
            "lines": 158,
            "tokens": 1318,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LoadingState.tsx": {
            "lines": 78,
            "tokens": 516,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LoadingSpinner.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/Loading.tsx": {
            "lines": 171,
            "tokens": 1422,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LazyLoader.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LazyImage.tsx": {
            "lines": 39,
            "tokens": 253,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/ErrorBoundary.tsx": {
            "lines": 151,
            "tokens": 1152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/ConfirmModal.tsx": {
            "lines": 27,
            "tokens": 175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/AnalyticsDashboard.tsx": {
            "lines": 122,
            "tokens": 1303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/specials/SpecialsCard.tsx": {
            "lines": 43,
            "tokens": 456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/SmartSearchRefactored.tsx": {
            "lines": 81,
            "tokens": 546,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/SmartSearch.tsx": {
            "lines": 186,
            "tokens": 1495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/SearchSuggestions.tsx": {
            "lines": 37,
            "tokens": 315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/SearchBar.tsx": {
            "lines": 150,
            "tokens": 1427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/RecentSearches.tsx": {
            "lines": 29,
            "tokens": 223,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/QuickFilters.tsx": {
            "lines": 8,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/FilterBase.tsx": {
            "lines": 87,
            "tokens": 765,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/DietaryFilters.tsx": {
            "lines": 6,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/CategoryFilters.tsx": {
            "lines": 6,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/AgencyFilters.tsx": {
            "lines": 24,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/AdvancedSearchBox.tsx": {
            "lines": 103,
            "tokens": 801,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/AdvancedFiltersRefactored.tsx": {
            "lines": 29,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/AdvancedFilters.tsx": {
            "lines": 301,
            "tokens": 2817,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewsSection.tsx": {
            "lines": 181,
            "tokens": 1462,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 145,
            "duplicatedTokens": 1246,
            "percentage": 80.11,
            "percentageTokens": 85.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewSnippets.tsx": {
            "lines": 105,
            "tokens": 799,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewModeration.tsx": {
            "lines": 288,
            "tokens": 2382,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 49,
            "duplicatedTokens": 369,
            "percentage": 17.01,
            "percentageTokens": 15.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewForm.tsx": {
            "lines": 192,
            "tokens": 1432,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewCard.tsx": {
            "lines": 206,
            "tokens": 1487,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 49,
            "duplicatedTokens": 369,
            "percentage": 23.79,
            "percentageTokens": 24.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/SpecialsSection.tsx": {
            "lines": 6,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/ReviewsModal.tsx": {
            "lines": 357,
            "tokens": 2932,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 145,
            "duplicatedTokens": 1246,
            "percentage": 40.62,
            "percentageTokens": 42.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/Reviews.tsx": {
            "lines": 90,
            "tokens": 717,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/RestaurantGrid.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/RestaurantClaimForm.tsx": {
            "lines": 390,
            "tokens": 3126,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/RestaurantCard.tsx": {
            "lines": 75,
            "tokens": 558,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/OrderForm.tsx": {
            "lines": 262,
            "tokens": 2211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/ImageCarousel.tsx": {
            "lines": 127,
            "tokens": 927,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/HoursStatusBadge.tsx": {
            "lines": 43,
            "tokens": 310,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/HoursDisplay.tsx": {
            "lines": 2,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/EnhancedHoursDisplay.tsx": {
            "lines": 69,
            "tokens": 616,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/products/ProductResults.tsx": {
            "lines": 56,
            "tokens": 486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/pages/SpecialsPageClient.tsx": {
            "lines": 19,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/newsletter/NewsletterSignup.tsx": {
            "lines": 275,
            "tokens": 2191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/monitoring/ApiHealthIndicator.tsx": {
            "lines": 5,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/ProductDetailPage.tsx": {
            "lines": 229,
            "tokens": 1622,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/ProductCard.tsx": {
            "lines": 5,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplaceSearch.tsx": {
            "lines": 23,
            "tokens": 189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplacePageClient.tsx": {
            "lines": 243,
            "tokens": 2072,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplaceListingCard.tsx": {
            "lines": 53,
            "tokens": 395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplaceHeader.tsx": {
            "lines": 25,
            "tokens": 233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplaceFilters.tsx": {
            "lines": 148,
            "tokens": 1106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/CategoryCard.tsx": {
            "lines": 90,
            "tokens": 701,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/UnifiedLiveMapClient.tsx": {
            "lines": 255,
            "tokens": 1850,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/MapNotification.tsx": {
            "lines": 6,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/MapControls.tsx": {
            "lines": 21,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/location/LocationPermissionPrompt.tsx": {
            "lines": 45,
            "tokens": 370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/location/LocationCard.tsx": {
            "lines": 55,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/layout/SearchHeader.tsx": {
            "lines": 35,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/layout/MobileSearchHeader.tsx": {
            "lines": 39,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/layout/MobileActionButtons.tsx": {
            "lines": 39,
            "tokens": 234,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/layout/Header.tsx": {
            "lines": 76,
            "tokens": 490,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/forms/ImageUpload.tsx": {
            "lines": 42,
            "tokens": 224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/filters/BusinessTypeFilter.tsx": {
            "lines": 74,
            "tokens": 499,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/filters/AdvancedFilterSheet.tsx": {
            "lines": 181,
            "tokens": 1564,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/feedback/FeedbackForm.tsx": {
            "lines": 208,
            "tokens": 1634,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/feedback/FeedbackButton.tsx": {
            "lines": 44,
            "tokens": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/AuthStatus.tsx": {
            "lines": 18,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/FeatureFlagManager.tsx": {
            "lines": 191,
            "tokens": 1617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/marketplace/category/[id]/page.tsx": {
            "lines": 151,
            "tokens": 1099,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/restaurant/[id]/page.tsx": {
            "lines": 335,
            "tokens": 2680,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/marketplace/search/page.tsx": {
            "lines": 7,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/supabase-signup/page.tsx": {
            "lines": 94,
            "tokens": 632,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/supabase-signin/page.tsx": {
            "lines": 74,
            "tokens": 501,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 66,
            "duplicatedTokens": 449,
            "percentage": 89.19,
            "percentageTokens": 89.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/signup/page.tsx": {
            "lines": 86,
            "tokens": 589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/signin/page.tsx": {
            "lines": 218,
            "tokens": 1665,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 66,
            "duplicatedTokens": 449,
            "percentage": 30.28,
            "percentageTokens": 26.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/oauth-success/page.tsx": {
            "lines": 33,
            "tokens": 219,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 69,
            "duplicatedTokens": 435,
            "percentage": 209.09,
            "percentageTokens": 198.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/callback/page.tsx": {
            "lines": 14,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/auth-code-error/page.tsx": {
            "lines": 69,
            "tokens": 435,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 69,
            "duplicatedTokens": 435,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/admin/migration-complete/page.tsx": {
            "lines": 233,
            "tokens": 2006,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/admin/migration/page.tsx": {
            "lines": 108,
            "tokens": 900,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/notifications/page.tsx": {
            "lines": 87,
            "tokens": 939,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/marketplace/page.tsx": {
            "lines": 92,
            "tokens": 724,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/live-map/page.tsx": {
            "lines": 2,
            "tokens": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/favorites/page.tsx": {
            "lines": 109,
            "tokens": 810,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/eatery/page.tsx": {
            "lines": 327,
            "tokens": 2580,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/add-eatery/page.tsx": {
            "lines": 424,
            "tokens": 3135,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 370,
            "duplicatedTokens": 2834,
            "percentage": 87.26,
            "percentageTokens": 90.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/page.tsx": {
            "lines": 25,
            "tokens": 129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/layout.tsx": {
            "lines": 82,
            "tokens": 227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/global-error.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/error.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 17148,
          "tokens": 134149,
          "sources": 158,
          "clones": 30,
          "duplicatedLines": 876,
          "duplicatedTokens": 6977,
          "percentage": 5.11,
          "percentageTokens": 5.2,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "typescript": {
        "sources": {
          "scripts/test-auth-systems.ts": {
            "lines": 330,
            "tokens": 2670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/migrate-users.ts": {
            "lines": 182,
            "tokens": 1399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/generate-secret.ts": {
            "lines": 27,
            "tokens": 216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/check-env-setup.ts": {
            "lines": 143,
            "tokens": 1406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/workers/mendel-worker.ts": {
            "lines": 245,
            "tokens": 2596,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 45,
            "duplicatedTokens": 603,
            "percentage": 18.37,
            "percentageTokens": 23.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/validators/review.ts": {
            "lines": 70,
            "tokens": 994,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 150,
            "percentage": 14.29,
            "percentageTokens": 15.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/validation.ts": {
            "lines": 204,
            "tokens": 1627,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/typography.ts": {
            "lines": 252,
            "tokens": 1421,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/touchUtils.ts": {
            "lines": 125,
            "tokens": 1015,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/stringUtils.ts": {
            "lines": 283,
            "tokens": 2001,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/spacing.ts": {
            "lines": 123,
            "tokens": 761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/scrollUtils.ts": {
            "lines": 190,
            "tokens": 1229,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 234,
            "percentage": 11.58,
            "percentageTokens": 19.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/reviewUtils.ts": {
            "lines": 131,
            "tokens": 1003,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/recaptcha.ts": {
            "lines": 62,
            "tokens": 802,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/rateLimiter.ts": {
            "lines": 142,
            "tokens": 1150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/performanceOptimization.ts": {
            "lines": 131,
            "tokens": 1141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/logger.ts": {
            "lines": 186,
            "tokens": 1939,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/kosherCategories.ts": {
            "lines": 26,
            "tokens": 175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/imageValidation.ts": {
            "lines": 197,
            "tokens": 1236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/imageUrlValidator.ts": {
            "lines": 185,
            "tokens": 1281,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/hours.ts": {
            "lines": 293,
            "tokens": 2864,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 602,
            "percentage": 17.75,
            "percentageTokens": 21.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/formValidation.ts": {
            "lines": 384,
            "tokens": 2754,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 166,
            "percentage": 4.17,
            "percentageTokens": 6.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/favorites.ts": {
            "lines": 388,
            "tokens": 3086,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 168,
            "percentage": 2.58,
            "percentageTokens": 5.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/distance.ts": {
            "lines": 105,
            "tokens": 1037,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 11,
            "duplicatedTokens": 262,
            "percentage": 10.48,
            "percentageTokens": 25.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/dateUtils.ts": {
            "lines": 215,
            "tokens": 1723,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/componentUtils.ts": {
            "lines": 409,
            "tokens": 2616,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/commonStyles.ts": {
            "lines": 12,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/colors.ts": {
            "lines": 152,
            "tokens": 1094,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/cn.ts": {
            "lines": 5,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/classNames.ts": {
            "lines": 5,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/apiRouteUtils.ts": {
            "lines": 500,
            "tokens": 3585,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 112,
            "duplicatedTokens": 1002,
            "percentage": 22.4,
            "percentageTokens": 27.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/analytics.ts": {
            "lines": 185,
            "tokens": 1352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/admin.ts": {
            "lines": 9,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/types/review.ts": {
            "lines": 62,
            "tokens": 434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/types/restaurant.ts": {
            "lines": 207,
            "tokens": 1363,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/types/next-auth.d.ts": {
            "lines": 24,
            "tokens": 163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/types/marketplace.ts": {
            "lines": 163,
            "tokens": 1131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/types/index.ts": {
            "lines": 169,
            "tokens": 1156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/types/google-maps.d.ts": {
            "lines": 691,
            "tokens": 5182,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 38,
            "duplicatedTokens": 648,
            "percentage": 5.5,
            "percentageTokens": 12.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/supabase/server.ts": {
            "lines": 54,
            "tokens": 439,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 286,
            "percentage": 74.07,
            "percentageTokens": 65.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/supabase/middleware.ts": {
            "lines": 56,
            "tokens": 457,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 143,
            "percentage": 35.71,
            "percentageTokens": 31.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/supabase/client.ts": {
            "lines": 70,
            "tokens": 421,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 143,
            "percentage": 28.57,
            "percentageTokens": 33.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/maps/loader.ts": {
            "lines": 58,
            "tokens": 511,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/i18n/index.ts": {
            "lines": 813,
            "tokens": 5709,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useTouchFeedback.ts": {
            "lines": 141,
            "tokens": 1094,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 112,
            "percentage": 12.06,
            "percentageTokens": 10.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useSearchSuggestions.ts": {
            "lines": 222,
            "tokens": 3344,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useSearchInput.ts": {
            "lines": 121,
            "tokens": 1021,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useScrollSnapCarousel.ts": {
            "lines": 189,
            "tokens": 1662,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 162,
            "percentage": 12.7,
            "percentageTokens": 9.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useRecentSearches.ts": {
            "lines": 61,
            "tokens": 490,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/usePerformanceOptimization.ts": {
            "lines": 256,
            "tokens": 2221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useOptimizedFilters.ts": {
            "lines": 488,
            "tokens": 4503,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 144,
            "duplicatedTokens": 1534,
            "percentage": 29.51,
            "percentageTokens": 34.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useMobileTouch.ts": {
            "lines": 83,
            "tokens": 613,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 112,
            "percentage": 20.48,
            "percentageTokens": 18.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useLocalFilters.ts": {
            "lines": 110,
            "tokens": 884,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useLazyLoading.ts": {
            "lines": 134,
            "tokens": 880,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useIsMobile.ts": {
            "lines": 21,
            "tokens": 157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useIntersectionObserver.ts": {
            "lines": 64,
            "tokens": 495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useInfiniteScroll.ts": {
            "lines": 52,
            "tokens": 442,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useFilterOptions.ts": {
            "lines": 71,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useDebounce.ts": {
            "lines": 22,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useCssLoader.ts": {
            "lines": 70,
            "tokens": 474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useAdvancedFilters.ts": {
            "lines": 64,
            "tokens": 621,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 47,
            "duplicatedTokens": 401,
            "percentage": 73.44,
            "percentageTokens": 64.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/index.ts": {
            "lines": 4,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/google/places.ts": {
            "lines": 416,
            "tokens": 3829,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 70,
            "duplicatedTokens": 818,
            "percentage": 16.83,
            "percentageTokens": 21.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/filters/urlSync.ts": {
            "lines": 107,
            "tokens": 990,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/filters/serialize.ts": {
            "lines": 50,
            "tokens": 491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/filters/filters.types.ts": {
            "lines": 70,
            "tokens": 561,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 438,
            "percentage": 77.14,
            "percentageTokens": 78.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/db/prisma.ts": {
            "lines": 38,
            "tokens": 256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/backups/websiteBackup.ts": {
            "lines": 147,
            "tokens": 902,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 155,
            "percentage": 14.29,
            "percentageTokens": 17.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/backups/hoursBackup.ts": {
            "lines": 270,
            "tokens": 1988,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 155,
            "percentage": 7.78,
            "percentageTokens": 7.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/user-sync.ts": {
            "lines": 163,
            "tokens": 1226,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 166,
            "percentage": 14.72,
            "percentageTokens": 13.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/transition-manager.ts": {
            "lines": 231,
            "tokens": 1636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/migration-manager.ts": {
            "lines": 251,
            "tokens": 1837,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/mfa-manager.ts": {
            "lines": 163,
            "tokens": 1213,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/cleanup-manager.ts": {
            "lines": 319,
            "tokens": 2482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/admin-token-manager.ts": {
            "lines": 244,
            "tokens": 1878,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/api/specials.ts": {
            "lines": 183,
            "tokens": 1358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/api/restaurants.ts": {
            "lines": 579,
            "tokens": 4626,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/api/mockData.ts": {
            "lines": 63,
            "tokens": 527,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/api/marketplace.ts": {
            "lines": 386,
            "tokens": 3053,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 210,
            "percentage": 7.25,
            "percentageTokens": 6.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/api/health.ts": {
            "lines": 129,
            "tokens": 1074,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/api/adminClient.ts": {
            "lines": 160,
            "tokens": 1610,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 406,
            "percentage": 27.5,
            "percentageTokens": 25.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/analytics/performance.ts": {
            "lines": 353,
            "tokens": 3309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/message-bus.ts": {
            "lines": 81,
            "tokens": 626,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/email.ts": {
            "lines": 139,
            "tokens": 626,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth.ts": {
            "lines": 71,
            "tokens": 516,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth-config.ts": {
            "lines": 61,
            "tokens": 501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/api-config.ts": {
            "lines": 91,
            "tokens": 670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/__tests__/hooks/useMarkerManagement.test.ts": {
            "lines": 227,
            "tokens": 1938,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/shared.ts": {
            "lines": 51,
            "tokens": 406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/index.ts": {
            "lines": 7,
            "tokens": 87,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/hooks.ts": {
            "lines": 28,
            "tokens": 229,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/hooks/useMarkerManagement.ts": {
            "lines": 348,
            "tokens": 3377,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/hooks/useDistanceCircles.ts": {
            "lines": 58,
            "tokens": 476,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/hooks/useDirections.ts": {
            "lines": 75,
            "tokens": 643,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/index.ts": {
            "lines": 13,
            "tokens": 216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/index.ts": {
            "lines": 9,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/index.ts": {
            "lines": 6,
            "tokens": 97,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/index.ts": {
            "lines": 4,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/index.ts": {
            "lines": 3,
            "tokens": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/index.ts": {
            "lines": 4,
            "tokens": 75,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/[id]/reject/route.ts": {
            "lines": 79,
            "tokens": 699,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 125,
            "duplicatedTokens": 1254,
            "percentage": 158.23,
            "percentageTokens": 179.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/[id]/hours/route.ts": {
            "lines": 37,
            "tokens": 387,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 19,
            "duplicatedTokens": 218,
            "percentage": 51.35,
            "percentageTokens": 56.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/[id]/fetch-website/route.ts": {
            "lines": 64,
            "tokens": 576,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 39,
            "duplicatedTokens": 383,
            "percentage": 60.94,
            "percentageTokens": 66.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/[id]/fetch-hours/route.ts": {
            "lines": 60,
            "tokens": 548,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 284,
            "percentage": 48.33,
            "percentageTokens": 51.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/[id]/approve/route.ts": {
            "lines": 75,
            "tokens": 671,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 40,
            "duplicatedTokens": 415,
            "percentage": 53.33,
            "percentageTokens": 61.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/auth.disabled/reset-password/confirm/route.ts": {
            "lines": 74,
            "tokens": 640,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/search/route.ts": {
            "lines": 305,
            "tokens": 3142,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 106,
            "duplicatedTokens": 1432,
            "percentage": 34.75,
            "percentageTokens": 45.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/filtered/route.ts": {
            "lines": 207,
            "tokens": 2191,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 62,
            "duplicatedTokens": 741,
            "percentage": 29.95,
            "percentageTokens": 33.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/filter-options/route.ts": {
            "lines": 126,
            "tokens": 1435,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/fetch-missing-websites/route.ts": {
            "lines": 55,
            "tokens": 348,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 280,
            "percentage": 63.64,
            "percentageTokens": 80.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/fetch-missing-hours/route.ts": {
            "lines": 55,
            "tokens": 348,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 280,
            "percentage": 63.64,
            "percentageTokens": 80.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/business-types/route.ts": {
            "lines": 49,
            "tokens": 314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/[id]/route.ts": {
            "lines": 395,
            "tokens": 3284,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 153,
            "duplicatedTokens": 1334,
            "percentage": 38.73,
            "percentageTokens": 40.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/auth.disabled/verify-email/route.ts": {
            "lines": 101,
            "tokens": 753,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/auth.disabled/sync-user/route.ts": {
            "lines": 101,
            "tokens": 807,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 234,
            "percentage": 25.74,
            "percentageTokens": 29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/auth.disabled/reset-password/route.ts": {
            "lines": 61,
            "tokens": 491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/auth.disabled/register/route.ts": {
            "lines": 81,
            "tokens": 777,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/auth.disabled/[...nextauth]/route.ts": {
            "lines": 6,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/update-database/route.ts": {
            "lines": 45,
            "tokens": 254,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 202,
            "percentage": 71.11,
            "percentageTokens": 79.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/test/route.ts": {
            "lines": 20,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/statistics/route.ts": {
            "lines": 56,
            "tokens": 315,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 100,
            "percentage": 26.79,
            "percentageTokens": 31.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/sentry-example-api/route.ts": {
            "lines": 13,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/reviews/route.ts": {
            "lines": 195,
            "tokens": 1471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants-with-images/route.ts": {
            "lines": 136,
            "tokens": 1207,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 92,
            "duplicatedTokens": 822,
            "percentage": 67.65,
            "percentageTokens": 68.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/restaurants/route.ts": {
            "lines": 483,
            "tokens": 5400,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 156,
            "duplicatedTokens": 1819,
            "percentage": 32.3,
            "percentageTokens": 33.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/remove-duplicates/route.ts": {
            "lines": 45,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 101,
            "percentage": 35.56,
            "percentageTokens": 39.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/migrate/route.ts": {
            "lines": 86,
            "tokens": 458,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 101,
            "percentage": 18.6,
            "percentageTokens": 22.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/kosher-types/route.ts": {
            "lines": 56,
            "tokens": 315,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 100,
            "percentage": 26.79,
            "percentageTokens": 31.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/health-check/route.ts": {
            "lines": 158,
            "tokens": 1271,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/health/route.ts": {
            "lines": 18,
            "tokens": 161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/feedback/route.ts": {
            "lines": 272,
            "tokens": 2383,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/analytics/route.ts": {
            "lines": 34,
            "tokens": 219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/instrumentation.ts": {
            "lines": 9,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/fonts.ts": {
            "lines": 11,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 19602,
          "tokens": 160406,
          "sources": 134,
          "clones": 68,
          "duplicatedLines": 959,
          "duplicatedTokens": 9588,
          "percentage": 4.89,
          "percentageTokens": 5.98,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "bash": {
        "sources": {
          "scripts/deploy-optimized.sh": {
            "lines": 180,
            "tokens": 696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/cleanup-css.sh": {
            "lines": 30,
            "tokens": 102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 210,
          "tokens": 798,
          "sources": 2,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markdown": {
        "sources": {
          "scripts/MONITORING_README.md": {
            "lines": 63,
            "tokens": 370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/backups/README.md": {
            "lines": 20,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/SPECIALS_RESPONSIVE_DESIGN.md": {
            "lines": 106,
            "tokens": 1121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/README.md": {
            "lines": 64,
            "tokens": 431,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/eatery/README.md": {
            "lines": 77,
            "tokens": 675,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 330,
          "tokens": 2818,
          "sources": 5,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "lib/hooks/useFeatureFlags.tsx": {
            "lines": 184,
            "tokens": 1613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/contexts/NotificationsContext.tsx": {
            "lines": 100,
            "tokens": 836,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/SubNav.tsx": {
            "lines": 145,
            "tokens": 1141,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 306,
            "percentage": 26.21,
            "percentageTokens": 26.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/MobileCategoryTabs.tsx": {
            "lines": 130,
            "tokens": 948,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 69,
            "duplicatedTokens": 592,
            "percentage": 53.08,
            "percentageTokens": 62.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/CategoryTabs.tsx": {
            "lines": 142,
            "tokens": 1011,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 45,
            "duplicatedTokens": 372,
            "percentage": 31.69,
            "percentageTokens": 36.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/navigation/ui/BottomNavigation.tsx": {
            "lines": 155,
            "tokens": 1225,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/__tests__/MapNotification.test.tsx": {
            "lines": 86,
            "tokens": 761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/__tests__/MapLegend.test.tsx": {
            "lines": 54,
            "tokens": 544,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 200,
            "percentage": 33.33,
            "percentageTokens": 36.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/__tests__/MapControls.test.tsx": {
            "lines": 85,
            "tokens": 820,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/eatery/ui/EateryCard.tsx": {
            "lines": 45,
            "tokens": 347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/eatery/ui/CardSkeleton.tsx": {
            "lines": 37,
            "tokens": 276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/VirtualList.tsx": {
            "lines": 293,
            "tokens": 2542,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/UnifiedCard.tsx": {
            "lines": 274,
            "tokens": 2309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/TouchTestComponent.tsx": {
            "lines": 175,
            "tokens": 1332,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/Toast.tsx": {
            "lines": 181,
            "tokens": 1775,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 22,
            "duplicatedTokens": 276,
            "percentage": 12.15,
            "percentageTokens": 15.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/StickyCTA.tsx": {
            "lines": 142,
            "tokens": 1085,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/StarRating.tsx": {
            "lines": 143,
            "tokens": 894,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/SharePopup.tsx": {
            "lines": 244,
            "tokens": 1995,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 47,
            "duplicatedTokens": 553,
            "percentage": 19.26,
            "percentageTokens": 27.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/ServiceWorkerRegistration.tsx": {
            "lines": 118,
            "tokens": 915,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/RefreshButton.tsx": {
            "lines": 12,
            "tokens": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/PillDropdown.tsx": {
            "lines": 126,
            "tokens": 972,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/PerformanceMonitor.tsx": {
            "lines": 224,
            "tokens": 2050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/PerformanceDashboard.tsx": {
            "lines": 236,
            "tokens": 2381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/PasswordChangeModal.tsx": {
            "lines": 312,
            "tokens": 2727,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 93,
            "duplicatedTokens": 887,
            "percentage": 29.81,
            "percentageTokens": 32.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/OptimizedImage.tsx": {
            "lines": 94,
            "tokens": 790,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 168,
            "percentage": 22.34,
            "percentageTokens": 21.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/NotificationPreferences.tsx": {
            "lines": 257,
            "tokens": 2413,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/NotificationDemo.tsx": {
            "lines": 52,
            "tokens": 300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LogoIcon.tsx": {
            "lines": 210,
            "tokens": 344,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/Logo.tsx": {
            "lines": 33,
            "tokens": 243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LoadingStates.tsx": {
            "lines": 237,
            "tokens": 1936,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LoadingState.tsx": {
            "lines": 113,
            "tokens": 765,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LoadingSpinner.tsx": {
            "lines": 67,
            "tokens": 566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/Loading.tsx": {
            "lines": 237,
            "tokens": 1915,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LazyLoader.tsx": {
            "lines": 32,
            "tokens": 303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LazyImage.tsx": {
            "lines": 110,
            "tokens": 853,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 89,
            "percentage": 10.91,
            "percentageTokens": 10.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/FontOptimizer.tsx": {
            "lines": 69,
            "tokens": 501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/FontLoader.tsx": {
            "lines": 42,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/ErrorBoundary.tsx": {
            "lines": 302,
            "tokens": 2407,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 286,
            "percentage": 10.6,
            "percentageTokens": 11.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/CssLoader.tsx": {
            "lines": 65,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/ConfirmModal.tsx": {
            "lines": 100,
            "tokens": 734,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 31,
            "duplicatedTokens": 239,
            "percentage": 31,
            "percentageTokens": 32.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/AnalyticsDashboard.tsx": {
            "lines": 274,
            "tokens": 2893,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/specials/SpecialsCard.tsx": {
            "lines": 89,
            "tokens": 800,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/SmartSearchRefactored.tsx": {
            "lines": 251,
            "tokens": 1840,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 197,
            "percentage": 7.17,
            "percentageTokens": 10.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/SmartSearch.tsx": {
            "lines": 618,
            "tokens": 7339,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 197,
            "percentage": 2.91,
            "percentageTokens": 2.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/SearchSuggestions.tsx": {
            "lines": 81,
            "tokens": 663,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/SearchBar.tsx": {
            "lines": 369,
            "tokens": 3505,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 152,
            "percentage": 3.79,
            "percentageTokens": 4.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/RecentSearches.tsx": {
            "lines": 59,
            "tokens": 457,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/QuickFilters.tsx": {
            "lines": 68,
            "tokens": 554,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 25,
            "duplicatedTokens": 332,
            "percentage": 36.76,
            "percentageTokens": 59.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/FilterBase.tsx": {
            "lines": 166,
            "tokens": 1275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/DietaryFilters.tsx": {
            "lines": 43,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/CategoryFilters.tsx": {
            "lines": 47,
            "tokens": 603,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/AgencyFilters.tsx": {
            "lines": 74,
            "tokens": 645,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/AdvancedSearchBox.tsx": {
            "lines": 306,
            "tokens": 2575,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/AdvancedFiltersRefactored.tsx": {
            "lines": 74,
            "tokens": 669,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 19,
            "duplicatedTokens": 258,
            "percentage": 25.68,
            "percentageTokens": 38.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/search/AdvancedFilters.tsx": {
            "lines": 495,
            "tokens": 4389,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 150,
            "duplicatedTokens": 1525,
            "percentage": 30.3,
            "percentageTokens": 34.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewsSection.tsx": {
            "lines": 558,
            "tokens": 4784,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 155,
            "duplicatedTokens": 1327,
            "percentage": 27.78,
            "percentageTokens": 27.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewSnippets.tsx": {
            "lines": 164,
            "tokens": 1261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewModeration.tsx": {
            "lines": 455,
            "tokens": 3928,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewForm.tsx": {
            "lines": 394,
            "tokens": 3140,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 216,
            "percentage": 7.11,
            "percentageTokens": 6.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/reviews/ReviewCard.tsx": {
            "lines": 349,
            "tokens": 2733,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 216,
            "percentage": 8.02,
            "percentageTokens": 7.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/SpecialsSection.tsx": {
            "lines": 117,
            "tokens": 953,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/ReviewsModal.tsx": {
            "lines": 593,
            "tokens": 5123,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 138,
            "duplicatedTokens": 1196,
            "percentage": 23.27,
            "percentageTokens": 23.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/Reviews.tsx": {
            "lines": 160,
            "tokens": 1265,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 294,
            "percentage": 23.75,
            "percentageTokens": 23.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/RestaurantGrid.tsx": {
            "lines": 89,
            "tokens": 778,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/RestaurantClaimForm.tsx": {
            "lines": 642,
            "tokens": 5385,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 83,
            "duplicatedTokens": 789,
            "percentage": 12.93,
            "percentageTokens": 14.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/RestaurantCardSkeleton.tsx": {
            "lines": 35,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/RestaurantCard.tsx": {
            "lines": 174,
            "tokens": 1339,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/OrderForm.tsx": {
            "lines": 478,
            "tokens": 4191,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 82,
            "percentage": 2.09,
            "percentageTokens": 1.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/ImageCarousel.tsx": {
            "lines": 247,
            "tokens": 1897,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 79,
            "percentage": 3.64,
            "percentageTokens": 4.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/HoursStatusBadge.tsx": {
            "lines": 112,
            "tokens": 880,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/HoursDisplay.tsx": {
            "lines": 44,
            "tokens": 403,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/EnhancedHoursDisplay.tsx": {
            "lines": 290,
            "tokens": 2473,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/products/ProductResults.tsx": {
            "lines": 144,
            "tokens": 1244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/pages/SpecialsPageClient.tsx": {
            "lines": 77,
            "tokens": 577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/newsletter/NewsletterSignup.tsx": {
            "lines": 504,
            "tokens": 4009,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 51,
            "duplicatedTokens": 433,
            "percentage": 10.12,
            "percentageTokens": 10.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/monitoring/MapPerformanceMonitor.tsx": {
            "lines": 63,
            "tokens": 580,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/monitoring/ApiHealthIndicator.tsx": {
            "lines": 134,
            "tokens": 957,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/ProductDetailPage.tsx": {
            "lines": 366,
            "tokens": 2470,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 35,
            "duplicatedTokens": 271,
            "percentage": 9.56,
            "percentageTokens": 10.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/ProductCard.tsx": {
            "lines": 50,
            "tokens": 426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplaceSearch.tsx": {
            "lines": 135,
            "tokens": 1075,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplacePageClient.tsx": {
            "lines": 422,
            "tokens": 3487,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 104,
            "percentage": 2.84,
            "percentageTokens": 2.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplaceListingCard.tsx": {
            "lines": 208,
            "tokens": 1730,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplaceHeader.tsx": {
            "lines": 136,
            "tokens": 1160,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 56,
            "duplicatedTokens": 554,
            "percentage": 41.18,
            "percentageTokens": 47.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/MarketplaceFilters.tsx": {
            "lines": 239,
            "tokens": 1842,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/CategoryCard.tsx": {
            "lines": 202,
            "tokens": 1626,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 84,
            "duplicatedTokens": 716,
            "percentage": 41.58,
            "percentageTokens": 44.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/UnifiedLiveMapClient.tsx": {
            "lines": 743,
            "tokens": 6282,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 74,
            "percentage": 1.08,
            "percentageTokens": 1.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/MapWhenVisible.tsx": {
            "lines": 58,
            "tokens": 488,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/MapNotification.tsx": {
            "lines": 31,
            "tokens": 183,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/MapLegend.tsx": {
            "lines": 51,
            "tokens": 431,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/map/MapControls.tsx": {
            "lines": 55,
            "tokens": 453,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/location/LocationPermissionPrompt.tsx": {
            "lines": 155,
            "tokens": 1202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/location/LocationCard.tsx": {
            "lines": 128,
            "tokens": 981,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/layout/SearchHeader.tsx": {
            "lines": 75,
            "tokens": 594,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 167,
            "percentage": 21.33,
            "percentageTokens": 28.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/layout/MobileSearchHeader.tsx": {
            "lines": 75,
            "tokens": 594,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 17,
            "duplicatedTokens": 164,
            "percentage": 22.67,
            "percentageTokens": 27.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/layout/MobileActionButtons.tsx": {
            "lines": 77,
            "tokens": 514,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/layout/Header.tsx": {
            "lines": 122,
            "tokens": 854,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/layout/ActionButtons.tsx": {
            "lines": 94,
            "tokens": 648,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/forms/ImageUpload.tsx": {
            "lines": 157,
            "tokens": 1183,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/filters/BusinessTypeFilter.tsx": {
            "lines": 170,
            "tokens": 1227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/filters/AdvancedFilterSheet.tsx": {
            "lines": 323,
            "tokens": 2761,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 76,
            "duplicatedTokens": 667,
            "percentage": 23.53,
            "percentageTokens": 24.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/feedback/FeedbackForm.tsx": {
            "lines": 453,
            "tokens": 3510,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 38,
            "duplicatedTokens": 332,
            "percentage": 8.39,
            "percentageTokens": 9.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/feedback/FeedbackButton.tsx": {
            "lines": 99,
            "tokens": 631,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/AuthStatus.tsx": {
            "lines": 141,
            "tokens": 1065,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 346,
            "percentage": 25.53,
            "percentageTokens": 32.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/analytics/Analytics.tsx": {
            "lines": 313,
            "tokens": 2824,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/FeatureFlagManager.tsx": {
            "lines": 421,
            "tokens": 3635,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 402,
            "percentage": 10.45,
            "percentageTokens": 11.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/marketplace/product/[id]/page.tsx": {
            "lines": 9,
            "tokens": 48,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/marketplace/category/[id]/page.tsx": {
            "lines": 284,
            "tokens": 2256,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 47,
            "duplicatedTokens": 375,
            "percentage": 16.55,
            "percentageTokens": 16.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/restaurant/[id]/page.tsx": {
            "lines": 672,
            "tokens": 5413,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 158,
            "percentage": 1.49,
            "percentageTokens": 2.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/restaurant/[id]/layout.tsx": {
            "lines": 105,
            "tokens": 791,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/marketplace/sell/page.tsx": {
            "lines": 45,
            "tokens": 402,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 54,
            "duplicatedTokens": 302,
            "percentage": 120,
            "percentageTokens": 75.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/marketplace/search/page.tsx": {
            "lines": 85,
            "tokens": 744,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 119,
            "percentage": 28.24,
            "percentageTokens": 15.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/marketplace/messages/page.tsx": {
            "lines": 45,
            "tokens": 404,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 183,
            "percentage": 66.67,
            "percentageTokens": 45.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/supabase-signup/page.tsx": {
            "lines": 256,
            "tokens": 1843,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 191,
            "duplicatedTokens": 1285,
            "percentage": 74.61,
            "percentageTokens": 69.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/supabase-signin/page.tsx": {
            "lines": 265,
            "tokens": 1893,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 192,
            "duplicatedTokens": 1316,
            "percentage": 72.45,
            "percentageTokens": 69.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/signup/page.tsx": {
            "lines": 228,
            "tokens": 1653,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 115,
            "duplicatedTokens": 765,
            "percentage": 50.44,
            "percentageTokens": 46.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/signin/page.tsx": {
            "lines": 236,
            "tokens": 1814,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 112,
            "duplicatedTokens": 766,
            "percentage": 47.46,
            "percentageTokens": 42.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/oauth-success/page.tsx": {
            "lines": 178,
            "tokens": 1369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/callback/page.tsx": {
            "lines": 112,
            "tokens": 872,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth/auth-code-error/page.tsx": {
            "lines": 126,
            "tokens": 837,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/admin/migration-complete/page.tsx": {
            "lines": 348,
            "tokens": 2993,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 29,
            "duplicatedTokens": 200,
            "percentage": 8.33,
            "percentageTokens": 6.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/admin/migration/page.tsx": {
            "lines": 262,
            "tokens": 2206,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 29,
            "duplicatedTokens": 200,
            "percentage": 11.07,
            "percentageTokens": 9.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/shuls/page.tsx": {
            "lines": 62,
            "tokens": 561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/restaurant/layout.tsx": {
            "lines": 10,
            "tokens": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/profile/page.tsx": {
            "lines": 142,
            "tokens": 1149,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 150,
            "percentage": 12.68,
            "percentageTokens": 13.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/notifications/page.tsx": {
            "lines": 221,
            "tokens": 2017,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/marketplace/page.tsx": {
            "lines": 258,
            "tokens": 2122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/logout/page.tsx": {
            "lines": 34,
            "tokens": 258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/live-map/page.tsx": {
            "lines": 24,
            "tokens": 233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/healthz/page.tsx": {
            "lines": 8,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/favorites/page.tsx": {
            "lines": 265,
            "tokens": 2079,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 20,
            "duplicatedTokens": 220,
            "percentage": 7.55,
            "percentageTokens": 10.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/eatery/page.tsx": {
            "lines": 695,
            "tokens": 5568,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 79,
            "percentage": 1.01,
            "percentageTokens": 1.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/add-eatery/page.tsx": {
            "lines": 830,
            "tokens": 6549,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 102,
            "duplicatedTokens": 870,
            "percentage": 12.29,
            "percentageTokens": 13.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/page.tsx": {
            "lines": 194,
            "tokens": 1339,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/not-found.tsx": {
            "lines": 18,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/layout.tsx": {
            "lines": 178,
            "tokens": 839,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/head.tsx": {
            "lines": 32,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/global-error.tsx": {
            "lines": 22,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/error.tsx": {
            "lines": 40,
            "tokens": 287,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 26288,
          "tokens": 215296,
          "sources": 138,
          "clones": 85,
          "duplicatedLines": 1307,
          "duplicatedTokens": 11023,
          "percentage": 4.97,
          "percentageTokens": 5.12,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "components/search/AdvancedFilters.tsx": {
            "lines": 31,
            "tokens": 136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/restaurant/ImageCarousel.module.css": {
            "lines": 123,
            "tokens": 704,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/leaflet.css": {
            "lines": 84,
            "tokens": 406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 238,
          "tokens": 1246,
          "sources": 3,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 63816,
      "tokens": 514713,
      "sources": 440,
      "clones": 183,
      "duplicatedLines": 3142,
      "duplicatedTokens": 27588,
      "percentage": 4.92,
      "percentageTokens": 5.36,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "javascript",
      "lines": 8,
      "fragment": "userLocation.latitude * Math.PI / 180) * Math.cos(restaurant.latitude * Math.PI / 180) *\n                Math.sin(dLon/2) * Math.sin(dLon/2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n      const distance = R * c;\n      \n      return distance <= maxDistance;\n    }\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/test-filter-performance.js",
        "start": 156,
        "end": 163,
        "startLoc": {
          "line": 156,
          "column": 2,
          "position": 1672
        },
        "endLoc": {
          "line": 163,
          "column": 2,
          "position": 1796
        }
      },
      "secondFile": {
        "name": "scripts/test-filter-performance.js",
        "start": 100,
        "end": 106,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 1033
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 1155
        }
      }
    },
    {
      "format": "javascript",
      "lines": 9,
      "fragment": ") {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// Mapping of original images to optimized versions",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/replace-original-images.js",
        "start": 48,
        "end": 56,
        "startLoc": {
          "line": 48,
          "column": 7,
          "position": 338
        },
        "endLoc": {
          "line": 56,
          "column": 52,
          "position": 460
        }
      },
      "secondFile": {
        "name": "scripts/utils/scriptUtils.js",
        "start": 65,
        "end": 75,
        "startLoc": {
          "line": 65,
          "column": 6,
          "position": 349
        },
        "endLoc": {
          "line": 75,
          "column": 4,
          "position": 471
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n    \n  } catch (error) {\n    log(`❌ Error during analysis: ${error.message}`, 'red');\n    process.exit(1);\n  }\n}\n\n// Run the script\nif (require.main === module) {\n  main();\n}\n\nmodule.exports = {\n  analyzeBundleSizes",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/optimize-bundles.js",
        "start": 238,
        "end": 252,
        "startLoc": {
          "line": 238,
          "column": 63,
          "position": 2022
        },
        "endLoc": {
          "line": 252,
          "column": 19,
          "position": 2103
        }
      },
      "secondFile": {
        "name": "scripts/optimize-images.js",
        "start": 287,
        "end": 301,
        "startLoc": {
          "line": 287,
          "column": 45,
          "position": 2716
        },
        "endLoc": {
          "line": 301,
          "column": 14,
          "position": 2797
        }
      }
    },
    {
      "format": "javascript",
      "lines": 9,
      "fragment": "(currentDir) {\n    const items = fs.readdirSync(currentDir);\n    \n    for (const item of items) {\n      const fullPath = path.join(currentDir, item);\n      const stat = fs.statSync(fullPath);\n      \n      if (stat.isDirectory()) {\n        // Skip node_modules and .next",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/fix-warnings-safely.js",
        "start": 83,
        "end": 91,
        "startLoc": {
          "line": 83,
          "column": 9,
          "position": 724
        },
        "endLoc": {
          "line": 91,
          "column": 31,
          "position": 811
        }
      },
      "secondFile": {
        "name": "scripts/utils/scriptUtils.js",
        "start": 79,
        "end": 87,
        "startLoc": {
          "line": 79,
          "column": 14,
          "position": 522
        },
        "endLoc": {
          "line": 87,
          "column": 3,
          "position": 609
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ") {\n    const items = fs.readdirSync(currentDir);\n    \n    for (const item of items) {\n      const fullPath = path.join(currentDir, item);\n      const stat = fs.statSync(fullPath);\n      \n      if (stat.isDirectory()) {\n        // Skip node_modules and .next\n        if (item !== 'node_modules' && item !== '.next' && !item.startsWith('.')) {\n          traverse(fullPath);\n        }\n      } else if (extensions",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/fix-remaining-warnings.js",
        "start": 114,
        "end": 126,
        "startLoc": {
          "line": 114,
          "column": 12,
          "position": 866
        },
        "endLoc": {
          "line": 126,
          "column": 11,
          "position": 1002
        }
      },
      "secondFile": {
        "name": "scripts/utils/scriptUtils.js",
        "start": 79,
        "end": 95,
        "startLoc": {
          "line": 79,
          "column": 11,
          "position": 524
        },
        "endLoc": {
          "line": 95,
          "column": 5,
          "position": 862
        }
      }
    },
    {
      "format": "javascript",
      "lines": 8,
      "fragment": "(_dir) {\n  const files = fs.readdirSync(dir);\n  \n  files.forEach(file => {\n    const filePath = path.join(dir, file);\n    const stat = fs.statSync(filePath);\n    \n    if (stat.isDirectory() &&",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/fix-linting.js",
        "start": 55,
        "end": 62,
        "startLoc": {
          "line": 55,
          "column": 8,
          "position": 350
        },
        "endLoc": {
          "line": 62,
          "column": 3,
          "position": 429
        }
      },
      "secondFile": {
        "name": "scripts/optimize-css.js",
        "start": 19,
        "end": 26,
        "startLoc": {
          "line": 19,
          "column": 13,
          "position": 99
        },
        "endLoc": {
          "line": 26,
          "column": 2,
          "position": 177
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "{\n    regex: /\\(\\s*(\\w+)\\s*\\)\\s*=>\\s*{/g,\n    replacement: (match, param) => {\n      // Only prefix if it's not already prefixed and not a common parameter\n      if (!param.startsWith('_') && !['e', 'event', 'error', 'err'].includes(param)) {\n        return `(_${param}) => {`;\n      }\n      return match;\n    }\n  },\n  \n  // Remove unused function parameters in function declarations",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/final-warning-cleanup.js",
        "start": 15,
        "end": 26,
        "startLoc": {
          "line": 15,
          "column": 3,
          "position": 76
        },
        "endLoc": {
          "line": 26,
          "column": 62,
          "position": 168
        }
      },
      "secondFile": {
        "name": "scripts/fix-warnings-safely.js",
        "start": 14,
        "end": 24,
        "startLoc": {
          "line": 14,
          "column": 3,
          "position": 74
        },
        "endLoc": {
          "line": 24,
          "column": 30,
          "position": 164
        }
      }
    },
    {
      "format": "javascript",
      "lines": 7,
      "fragment": "{\n    regex: /import\\s*{\\s*([^}]*)\\s*}\\s*from\\s*['\"][^'\"]+['\"];?/g,\n    replacement: (match, imports) => {\n      const importList = imports.split(',').map(i => i.trim());\n      const unusedImports = importList.filter(i => \n        i && !i.startsWith('_') && \n        ['useEffect', 'Filter', 'Search']",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/final-warning-cleanup.js",
        "start": 58,
        "end": 64,
        "startLoc": {
          "line": 58,
          "column": 3,
          "position": 482
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 575
        }
      },
      "secondFile": {
        "name": "scripts/fix-warnings-safely.js",
        "start": 25,
        "end": 31,
        "startLoc": {
          "line": 25,
          "column": 3,
          "position": 167
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 258
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "].includes(i)\n      );\n      \n      if (unusedImports.length > 0) {\n        const cleaned = importList.filter(i => !unusedImports.includes(i)).join(', ');\n        return cleaned ? `import { ${cleaned} } from '${match.match(/from\\s+['\"]([^'\"]+)['\"]/)[1]}';` : '';\n      }\n      return match;\n    }\n  }\n];\n\n// Function to process a file\nfunction processFile(_filePath",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/final-warning-cleanup.js",
        "start": 64,
        "end": 77,
        "startLoc": {
          "line": 64,
          "column": 9,
          "position": 575
        },
        "endLoc": {
          "line": 77,
          "column": 10,
          "position": 688
        }
      },
      "secondFile": {
        "name": "scripts/fix-warnings-safely.js",
        "start": 31,
        "end": 44,
        "startLoc": {
          "line": 31,
          "column": 13,
          "position": 261
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 373
        }
      }
    },
    {
      "format": "javascript",
      "lines": 67,
      "fragment": ";\n      }\n      return match;\n    }\n  }\n];\n\n// Function to process a file\nfunction processFile(_filePath) {\n  try {\n    let content = fs.readFileSync(filePath, 'utf8');\n    let originalContent = content;\n    let changes = 0;\n    \n    patterns.forEach(pattern => {\n      const matches = content.match(pattern.regex);\n      if (matches) {\n        if (typeof pattern.replacement === 'function') {\n          content = content.replace(pattern.regex, pattern.replacement);\n        } else {\n          content = content.replace(pattern.regex, pattern.replacement);\n        }\n        changes += matches.length;\n      }\n    });\n    \n    if (content !== originalContent) {\n      fs.writeFileSync(filePath, content, 'utf8');\n      console.log(`✅ Fixed ${changes} issues in ${filePath}`);\n      return changes;\n    }\n    \n    return 0;\n  } catch (error) {\n    console.error(`❌ Error processing ${filePath}:`, error.message);\n    return 0;\n  }\n}\n\n// Function to recursively find TypeScript/JavaScript files\nfunction findFiles(dir, extensions = ['.ts', '.tsx', '.js', '.jsx']) {\n  const files = [];\n  \n  function traverse(_currentDir) {\n    const items = fs.readdirSync(currentDir);\n    \n    for (const item of items) {\n      const fullPath = path.join(currentDir, item);\n      const stat = fs.statSync(fullPath);\n      \n      if (stat.isDirectory()) {\n        // Skip node_modules and .next\n        if (item !== 'node_modules' && item !== '.next' && !item.startsWith('.')) {\n          traverse(fullPath);\n        }\n      } else if (extensions.some(ext => item.endsWith(ext))) {\n        files.push(fullPath);\n      }\n    }\n  }\n  \n  traverse(dir);\n  return files;\n}\n\n// Main execution\nconsole.log('🔧 Starting final warning cleanup...\\n'",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/final-warning-cleanup.js",
        "start": 69,
        "end": 135,
        "startLoc": {
          "line": 69,
          "column": 3,
          "position": 661
        },
        "endLoc": {
          "line": 135,
          "column": 41,
          "position": 1210
        }
      },
      "secondFile": {
        "name": "scripts/fix-remaining-warnings.js",
        "start": 71,
        "end": 137,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 514
        },
        "endLoc": {
          "line": 137,
          "column": 49,
          "position": 1063
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n\nconst files = findFiles('.');\nlet totalChanges = 0;\nlet processedFiles = 0;\n\nfiles.forEach(file => {\n  const changes = processFile(file);\n  if (changes > 0) {\n    totalChanges += changes;\n    processedFiles++;\n  }\n});\n\nconsole.log(`\\n🎉 Final cleanup complete!`",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/final-warning-cleanup.js",
        "start": 135,
        "end": 149,
        "startLoc": {
          "line": 135,
          "column": 41,
          "position": 1211
        },
        "endLoc": {
          "line": 149,
          "column": 31,
          "position": 1307
        }
      },
      "secondFile": {
        "name": "scripts/fix-remaining-warnings.js",
        "start": 137,
        "end": 151,
        "startLoc": {
          "line": 137,
          "column": 49,
          "position": 1064
        },
        "endLoc": {
          "line": 151,
          "column": 25,
          "position": 1160
        }
      }
    },
    {
      "format": "javascript",
      "lines": 47,
      "fragment": ");\n\n// Color codes for console output\nconst colors = {\n  reset: '\\x1b[0m',\n  bright: '\\x1b[1m',\n  red: '\\x1b[31m',\n  green: '\\x1b[32m',\n  yellow: '\\x1b[33m',\n  blue: '\\x1b[34m',\n  magenta: '\\x1b[35m',\n  cyan: '\\x1b[36m'\n};\n\nfunction log(message, color = 'reset') {\n  }\n\nfunction logSection(_title) {\n  log(`\\n${'='.repeat(50)}`, 'bright');\n  log(`  ${title}`, 'bright');\n  log(`${'='.repeat(50)}`, 'bright');\n}\n\nfunction logSubsection(_title) {\n  log(`\\n${'-'.repeat(30)}`, 'blue');\n  log(`  ${title}`, 'blue');\n  log(`${'-'.repeat(30)}`, 'blue');\n}\n\nfunction getFileSize(_filePath) {\n  try {\n    const stats = fs.statSync(filePath);\n    return stats.size;\n  } catch (error) {\n    return 0;\n  }\n}\n\nfunction formatBytes(_bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/enhanced-image-optimizer.js",
        "start": 11,
        "end": 57,
        "startLoc": {
          "line": 11,
          "column": 8,
          "position": 64
        },
        "endLoc": {
          "line": 57,
          "column": 9,
          "position": 472
        }
      },
      "secondFile": {
        "name": "scripts/replace-original-images.js",
        "start": 10,
        "end": 75,
        "startLoc": {
          "line": 10,
          "column": 16,
          "position": 52
        },
        "endLoc": {
          "line": 75,
          "column": 4,
          "position": 471
        }
      }
    },
    {
      "format": "javascript",
      "lines": 9,
      "fragment": "{\n      const items = fs.readdirSync(currentDir);\n      \n      for (const item of items) {\n        const fullPath = path.join(currentDir, item);\n        const stat = fs.statSync(fullPath);\n        \n        if (stat.isDirectory()) {\n          // Skip node_modules, .next, and other build directories",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/enhanced-image-optimizer.js",
        "start": 61,
        "end": 69,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 531
        },
        "endLoc": {
          "line": 69,
          "column": 57,
          "position": 614
        }
      },
      "secondFile": {
        "name": "scripts/utils/scriptUtils.js",
        "start": 79,
        "end": 87,
        "startLoc": {
          "line": 79,
          "column": 2,
          "position": 526
        },
        "endLoc": {
          "line": 87,
          "column": 3,
          "position": 609
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n    return;\n  }\n  \n  // Create optimized directory\n  const optimizedDir = path.join(process.cwd(), 'optimized-images');\n  if (!fs.existsSync(optimizedDir)) {\n    fs.mkdirSync(optimizedDir);\n  }\n  \n  log(`Optimizing ${images.length} images...`, 'blue');\n  \n  let optimizedCount = 0;\n  let totalSaved = 0;\n  // const results = [];",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/enhanced-image-optimizer.js",
        "start": 202,
        "end": 216,
        "startLoc": {
          "line": 202,
          "column": 9,
          "position": 1763
        },
        "endLoc": {
          "line": 216,
          "column": 23,
          "position": 1868
        }
      },
      "secondFile": {
        "name": "scripts/optimize-images.js",
        "start": 174,
        "end": 189,
        "startLoc": {
          "line": 174,
          "column": 6,
          "position": 1628
        },
        "endLoc": {
          "line": 189,
          "column": 7,
          "position": 1735
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "fs.existsSync(outputPath)) {\n        const optimizedSize = getFileSize(outputPath);\n        const saved = originalSize - optimizedSize;\n        const savingsPercent = ((saved / originalSize) * 100).toFixed(1);\n        \n        if (saved > 0) {\n          log(`✅ ${img.name}: ${formatBytes(originalSize)} → ${formatBytes(optimizedSize)} (${savingsPercent}% saved)`, 'green');\n          optimizedCount++;\n          totalSaved += saved;\n          \n          results",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/enhanced-image-optimizer.js",
        "start": 238,
        "end": 248,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 2062
        },
        "endLoc": {
          "line": 248,
          "column": 8,
          "position": 2191
        }
      },
      "secondFile": {
        "name": "scripts/optimize-images.js",
        "start": 201,
        "end": 210,
        "startLoc": {
          "line": 201,
          "column": 2,
          "position": 1882
        },
        "endLoc": {
          "line": 210,
          "column": 2,
          "position": 2009
        }
      }
    },
    {
      "format": "javascript",
      "lines": 10,
      "fragment": "log(`\\n📊 Optimization complete:`, 'blue');\n  log(`  Images optimized: ${optimizedCount}/${images.length}`);\n  log(`  Total space saved: ${formatBytes(totalSaved)}`);\n  \n  if (optimizedCount > 0) {\n    log(`\\nOptimized images saved to: ${optimizedDir}`, 'green');\n    log('Review the optimized images and replace originals if satisfied.', 'blue');\n  }\n  \n  return",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/enhanced-image-optimizer.js",
        "start": 268,
        "end": 277,
        "startLoc": {
          "line": 268,
          "column": 3,
          "position": 2336
        },
        "endLoc": {
          "line": 277,
          "column": 7,
          "position": 2421
        }
      },
      "secondFile": {
        "name": "scripts/optimize-images.js",
        "start": 219,
        "end": 227,
        "startLoc": {
          "line": 219,
          "column": 3,
          "position": 2081
        },
        "endLoc": {
          "line": 227,
          "column": 2,
          "position": 2163
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n    \n  } catch (error) {\n    log(`\\n❌ Error: ${error.message}`, 'red');\n    process.exit(1);\n  }\n}\n\n// Run the script\nif (require.main === module) {\n  main();\n}\n\nmodule.exports = {\n  findImageFiles",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/enhanced-image-optimizer.js",
        "start": 338,
        "end": 352,
        "startLoc": {
          "line": 338,
          "column": 63,
          "position": 2933
        },
        "endLoc": {
          "line": 352,
          "column": 15,
          "position": 3014
        }
      },
      "secondFile": {
        "name": "scripts/replace-original-images.js",
        "start": 259,
        "end": 273,
        "startLoc": {
          "line": 259,
          "column": 53,
          "position": 2133
        },
        "endLoc": {
          "line": 273,
          "column": 13,
          "position": 2214
        }
      }
    },
    {
      "format": "javascript",
      "lines": 35,
      "fragment": "{\n  // SMTP Configuration\n  SMTP_HOST: 'smtp.gmail.com',\n  SMTP_PORT: '587',\n  SMTP_SECURE: 'false',\n  SMTP_USER: 'Mendy@selleroptimization.net',\n  SMTP_PASS: 'wmkr lmud pxxh iler',\n  SMTP_FROM: 'info@selleroptimization.net',\n  \n  // Application URLs\n  NEXT_PUBLIC_URL: 'https://jewgo-app.vercel.app',\n  NEXTAUTH_URL: 'https://jewgo-app.vercel.app',\n  \n  // Database\n  DATABASE_URL: 'postgresql://username:password@host:5432/database_name?sslmode=require',\n  \n  // NextAuth\n  NEXTAUTH_SECRET: 'your-nextauth-secret',\n  \n  // Google OAuth\n  GOOGLE_CLIENT_ID: 'your-google-client-id',\n  GOOGLE_CLIENT_SECRET: 'your-google-client-secret',\n  \n  // Backend URL\n  NEXT_PUBLIC_BACKEND_URL: 'https://jewgo.onrender.com',\n  \n  // Google Maps\n  NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: 'your-google-maps-api-key',\n  NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID: '5060e374c6d88aacf8fea324',\n  \n  // Environment\n  NODE_ENV: 'production'\n}\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/deploy-setup.js",
        "start": 7,
        "end": 41,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 43
        },
        "endLoc": {
          "line": 41,
          "column": 6,
          "position": 197
        }
      },
      "secondFile": {
        "name": "scripts/utils/buildUtils.js",
        "start": 22,
        "end": 54,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 70
        },
        "endLoc": {
          "line": 54,
          "column": 2,
          "position": 223
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "// Application URLs\n  FRONTEND_URL: 'https://jewgo-app.vercel.app',\n  BACKEND_URL: 'https://jewgo.onrender.com',\n  \n  // Redis Configuration\n  REDIS_URL: 'redis://user:password@host:6379',\n  REDIS_HOST: 'redis-10768.c14.us-east-1-2.ec2.redns.redis-cloud.com',\n  REDIS_PORT: '10768',\n  REDIS_DB: '0',\n  REDIS_USERNAME: 'default',\n  REDIS_PASSWORD: 'your-redis-password',\n  \n  // Google Places API\n  GOOGLE_PLACES_API_KEY: 'your-google-places-api-key',\n  \n  // Sentry\n  SENTRY_DSN: 'your-sentry-dsn',\n  \n  // Environment\n  ENVIRONMENT: 'production',\n  FLASK_ENV: 'production'\n}\n\nfunction",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/deploy-setup.js",
        "start": 57,
        "end": 80,
        "startLoc": {
          "line": 57,
          "column": 3,
          "position": 286
        },
        "endLoc": {
          "line": 80,
          "column": 9,
          "position": 394
        }
      },
      "secondFile": {
        "name": "scripts/utils/buildUtils.js",
        "start": 72,
        "end": 94,
        "startLoc": {
          "line": 72,
          "column": 5,
          "position": 312
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 420
        }
      }
    },
    {
      "format": "javascript",
      "lines": 10,
      "fragment": "function processFile(_filePath) {\n  try {\n    let content = fs.readFileSync(filePath, 'utf8');\n    let originalContent = content;\n    let changes = 0;\n    \n    patterns.forEach(pattern => {\n      const matches = content.match(pattern.regex);\n      if (matches) {\n        content",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/cleanup-remaining-vars.js",
        "start": 110,
        "end": 119,
        "startLoc": {
          "line": 110,
          "column": 1,
          "position": 898
        },
        "endLoc": {
          "line": 119,
          "column": 8,
          "position": 990
        }
      },
      "secondFile": {
        "name": "scripts/fix-remaining-warnings.js",
        "start": 79,
        "end": 88,
        "startLoc": {
          "line": 79,
          "column": 1,
          "position": 537
        },
        "endLoc": {
          "line": 88,
          "column": 3,
          "position": 629
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "changes += matches.length;\n      }\n    });\n    \n    if (content !== originalContent) {\n      fs.writeFileSync(filePath, content, 'utf8');\n      console.log(`✅ Fixed ${changes} issues in ${filePath}`);\n      return changes;\n    }\n    \n    return 0;\n  } catch (error) {\n    console.error(`❌ Error processing ${filePath}:`, error.message);\n    return 0;\n  }\n}\n\nfunction",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/cleanup-remaining-vars.js",
        "start": 120,
        "end": 137,
        "startLoc": {
          "line": 120,
          "column": 9,
          "position": 1010
        },
        "endLoc": {
          "line": 137,
          "column": 9,
          "position": 1132
        }
      },
      "secondFile": {
        "name": "scripts/fix-remaining-warnings.js",
        "start": 93,
        "end": 110,
        "startLoc": {
          "line": 93,
          "column": 9,
          "position": 696
        },
        "endLoc": {
          "line": 110,
          "column": 60,
          "position": 818
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ") {\n  const files = [];\n  \n  function traverse(_currentDir) {\n    const items = fs.readdirSync(currentDir);\n    \n    for (const item of items) {\n      const fullPath = path.join(currentDir, item);\n      const stat = fs.statSync(fullPath);\n      \n      if (stat.isDirectory()) {\n        // Skip node_modules, .next, and other build directories\n        if (!['node_modules', '.next', '.git'",
      "tokens": 0,
      "firstFile": {
        "name": "scripts/cleanup-remaining-vars.js",
        "start": 137,
        "end": 149,
        "startLoc": {
          "line": 137,
          "column": 5,
          "position": 1137
        },
        "endLoc": {
          "line": 149,
          "column": 7,
          "position": 1259
        }
      },
      "secondFile": {
        "name": "scripts/fix-remaining-warnings.js",
        "start": 111,
        "end": 70,
        "startLoc": {
          "line": 111,
          "column": 2,
          "position": 843
        },
        "endLoc": {
          "line": 70,
          "column": 6,
          "position": 628
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  user_email: z.string().email().optional(),\n  rating: z.number().min(1).max(5),\n  title: z.string().optional(),\n  content: z.string().min(1),\n  images",
      "tokens": 0,
      "firstFile": {
        "name": "lib/validators/review.ts",
        "start": 59,
        "end": 64,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 803
        },
        "endLoc": {
          "line": 64,
          "column": 7,
          "position": 878
        }
      },
      "secondFile": {
        "name": "lib/validators/review.ts",
        "start": 8,
        "end": 13,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 84
        },
        "endLoc": {
          "line": 13,
          "column": 8,
          "position": 159
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "): (event: Event) => void {\n  let lastCall = 0;\n  let timeoutId: NodeJS.Timeout | null = null;\n\n  return (event: Event) => {\n    const now = Date.now();\n    \n    if (now - lastCall >= delay) {\n      lastCall = now;\n      // Use requestAnimationFrame to batch layout reads\n      requestAnimationFrame(() => {\n        callback(window",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/scrollUtils.ts",
        "start": 100,
        "end": 111,
        "startLoc": {
          "line": 100,
          "column": 1,
          "position": 574
        },
        "endLoc": {
          "line": 111,
          "column": 7,
          "position": 691
        }
      },
      "secondFile": {
        "name": "lib/utils/scrollUtils.ts",
        "start": 66,
        "end": 77,
        "startLoc": {
          "line": 66,
          "column": 1,
          "position": 314
        },
        "endLoc": {
          "line": 77,
          "column": 18,
          "position": 431
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";}\n  \n  try {\n    // Handle various time formats\n    const patterns = [\n      // Format: \"11:00 AM\" or \"11:00AM\"\n      /(\\d{1,2}):?(\\d{2})?\\s*(AM|PM)/i,\n      // Format: \"11am\" or \"11:30am\"\n      /(\\d{1,2}):?(\\d{2})?(am|pm)/i,\n      // Format: \"11 AM\" or \"11AM\"\n      /(\\d{1,2})\\s*(AM|PM)/i,\n      // Format: \"11am\" (without colon)\n      /(\\d{1,2})(am|pm)/i\n    ];\n    \n    for (const pattern of patterns) {\n      const match = timeStr.trim().match(pattern);\n      if (match && match[1]) {\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/hours.ts",
        "start": 69,
        "end": 87,
        "startLoc": {
          "line": 69,
          "column": 10,
          "position": 670
        },
        "endLoc": {
          "line": 87,
          "column": 6,
          "position": 858
        }
      },
      "secondFile": {
        "name": "lib/utils/hours.ts",
        "start": 33,
        "end": 51,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 256
        },
        "endLoc": {
          "line": 51,
          "column": 4,
          "position": 444
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ";\n  }\n  \n  const dayNames = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  \n  return days.map((day, index) => {\n    const dayHours = parsedHours.find(h => h.day === day);\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/hours.ts",
        "start": 268,
        "end": 276,
        "startLoc": {
          "line": 268,
          "column": 5,
          "position": 2631
        },
        "endLoc": {
          "line": 276,
          "column": 6,
          "position": 2744
        }
      },
      "secondFile": {
        "name": "lib/utils/hours.ts",
        "start": 248,
        "end": 256,
        "startLoc": {
          "line": 248,
          "column": 22,
          "position": 2378
        },
        "endLoc": {
          "line": 256,
          "column": 3,
          "position": 2491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n    return {\n      success: true,\n      data: validatedData,\n    };\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const errors: ValidationError[] = error.issues.map((err) => ({\n        field: fieldName",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/formValidation.ts",
        "start": 129,
        "end": 137,
        "startLoc": {
          "line": 129,
          "column": 6,
          "position": 970
        },
        "endLoc": {
          "line": 137,
          "column": 10,
          "position": 1053
        }
      },
      "secondFile": {
        "name": "lib/utils/formValidation.ts",
        "start": 97,
        "end": 105,
        "startLoc": {
          "line": 97,
          "column": 5,
          "position": 725
        },
        "endLoc": {
          "line": 105,
          "column": 4,
          "position": 808
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(restaurantId: number, tags: string[]): boolean {\n    try {\n      const favorite = this.favorites.get(restaurantId);\n      if (favorite) {\n        const existingTags = new Set(favorite.tags || []);\n        tags.forEach(tag => existingTags.delete",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/favorites.ts",
        "start": 186,
        "end": 191,
        "startLoc": {
          "line": 186,
          "column": 11,
          "position": 1397
        },
        "endLoc": {
          "line": 191,
          "column": 7,
          "position": 1481
        }
      },
      "secondFile": {
        "name": "lib/utils/favorites.ts",
        "start": 167,
        "end": 172,
        "startLoc": {
          "line": 167,
          "column": 8,
          "position": 1232
        },
        "endLoc": {
          "line": 172,
          "column": 4,
          "position": 1316
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "= async (\n  endpoint: string,\n  serviceName: string,\n  request: NextRequest,\n  validateBody?: (body: any) => { isValid: boolean; errors: string[] }\n): Promise<NextResponse> => {\n  try {\n    // Parse request body\n    const body = await request.json().catch(() => ({}));\n\n    // Validate body if validator is provided\n    if (validateBody) {\n      const validation = validateBody(body);\n      if (!validation.isValid) {\n        return NextResponse.json(\n          {\n            error: 'Validation error',\n            message: 'Invalid request data',\n            details: validation.errors\n          },\n          { status: 400 }\n        );\n      }\n    }\n\n    const backendUrl = getBackendUrl();\n    const backendResponse = await fetch(`${backendUrl}${endpoint}`, {\n      method: 'PUT'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/apiRouteUtils.ts",
        "start": 155,
        "end": 182,
        "startLoc": {
          "line": 155,
          "column": 2,
          "position": 1028
        },
        "endLoc": {
          "line": 182,
          "column": 6,
          "position": 1270
        }
      },
      "secondFile": {
        "name": "lib/utils/apiRouteUtils.ts",
        "start": 107,
        "end": 134,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 644
        },
        "endLoc": {
          "line": 134,
          "column": 7,
          "position": 886
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n      headers: getDefaultHeaders(),\n      body: JSON.stringify(body),\n    });\n\n    const data = await backendResponse.json();\n    return NextResponse.json(data, { status: backendResponse.status });\n\n  } catch (error) {\n    // console.error(`Error in ${serviceName} API route:`, error);\n    return createErrorResponse(\n      `Failed to update ",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/apiRouteUtils.ts",
        "start": 182,
        "end": 193,
        "startLoc": {
          "line": 182,
          "column": 6,
          "position": 1271
        },
        "endLoc": {
          "line": 193,
          "column": 19,
          "position": 1361
        }
      },
      "secondFile": {
        "name": "lib/utils/apiRouteUtils.ts",
        "start": 134,
        "end": 145,
        "startLoc": {
          "line": 134,
          "column": 7,
          "position": 887
        },
        "endLoc": {
          "line": 145,
          "column": 20,
          "position": 977
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "= async (\n  endpoint: string,\n  serviceName: string,\n  request?: NextRequest\n): Promise<NextResponse> => {\n  try {\n    const backendUrl = getBackendUrl();\n    const url = new URL(`${backendUrl}${endpoint}`);\n    \n    // Add query parameters if request is provided\n    if (request) {\n      const searchParams = request.nextUrl.searchParams;\n      searchParams.forEach((value, key) => {\n        url.searchParams.append(key, value);\n      });\n    }\n\n    const backendResponse = await fetch(url.toString(), {\n      method: 'DELETE'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/apiRouteUtils.ts",
        "start": 203,
        "end": 221,
        "startLoc": {
          "line": 203,
          "column": 2,
          "position": 1412
        },
        "endLoc": {
          "line": 221,
          "column": 9,
          "position": 1581
        }
      },
      "secondFile": {
        "name": "lib/utils/apiRouteUtils.ts",
        "start": 63,
        "end": 81,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 292
        },
        "endLoc": {
          "line": 81,
          "column": 6,
          "position": 461
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "{\n      constructor(attrContainer: HTMLDivElement | Map);\n      getDetails(request: PlaceDetailsRequest, callback: (result: PlaceResult | null, status: PlacesServiceStatus) => void): void;\n      findPlaceFromQuery(request: FindPlaceFromQueryRequest, callback: (results: PlaceResult[], status: PlacesServiceStatus) => void): void;\n      nearbySearch(request: PlaceSearchRequest, callback: (results: PlaceResult[] | null, status: PlacesServiceStatus, pagination: PlaceSearchPagination) => void): void;\n      textSearch(request: TextSearchRequest, callback: (results: PlaceResult[] | null, status: PlacesServiceStatus, pagination: PlaceSearchPagination) => void): void;\n    }\n\n    interface",
      "tokens": 0,
      "firstFile": {
        "name": "lib/types/google-maps.d.ts",
        "start": 488,
        "end": 496,
        "startLoc": {
          "line": 488,
          "column": 2,
          "position": 3667
        },
        "endLoc": {
          "line": 496,
          "column": 10,
          "position": 3854
        }
      },
      "secondFile": {
        "name": "lib/types/google-maps.d.ts",
        "start": 479,
        "end": 487,
        "startLoc": {
          "line": 479,
          "column": 2,
          "position": 3473
        },
        "endLoc": {
          "line": 487,
          "column": 53,
          "position": 3660
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "class Autocomplete {\n    constructor(input: HTMLInputElement, opts?: AutocompleteOptions);\n    addListener(eventName: string, handler: (...args: unknown[]) => void): MapsEventListener;\n    getPlace(): PlaceResult;\n    setBounds(bounds: LatLngBounds): void;\n    setComponentRestrictions(restrictions: ComponentRestrictions): void;\n    setFields(fields: string[]): void;\n    setOptions(options: AutocompleteOptions): void;\n    setTypes(types: string[]): void;\n  }\n\n  interface",
      "tokens": 0,
      "firstFile": {
        "name": "lib/types/google-maps.d.ts",
        "start": 605,
        "end": 616,
        "startLoc": {
          "line": 605,
          "column": 3,
          "position": 4533
        },
        "endLoc": {
          "line": 616,
          "column": 10,
          "position": 4670
        }
      },
      "secondFile": {
        "name": "lib/types/google-maps.d.ts",
        "start": 458,
        "end": 469,
        "startLoc": {
          "line": 458,
          "column": 5,
          "position": 3233
        },
        "endLoc": {
          "line": 469,
          "column": 6,
          "position": 3370
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n\n// Validate environment variables\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// Check if the URL is valid (should be a Supabase project URL, not a database connection string)\nconst isValidSupabaseUrl = (url: string | undefined): boolean => {\n  if (!url) {\n    return false;\n  }\n  // Should be a valid HTTPS URL ending with .supabase.co\n  try {\n    const urlObj = new URL(url);\n    return urlObj.protocol === 'https:' && urlObj.hostname.endsWith('.supabase.co');\n  } catch {\n    return false;\n  }\n};\n\nif",
      "tokens": 0,
      "firstFile": {
        "name": "lib/supabase/middleware.ts",
        "start": 3,
        "end": 23,
        "startLoc": {
          "line": 3,
          "column": 14,
          "position": 29
        },
        "endLoc": {
          "line": 23,
          "column": 3,
          "position": 172
        }
      },
      "secondFile": {
        "name": "lib/supabase/server.ts",
        "start": 3,
        "end": 23,
        "startLoc": {
          "line": 3,
          "column": 15,
          "position": 26
        },
        "endLoc": {
          "line": 23,
          "column": 7,
          "position": 169
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n\n// Validate environment variables\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// Check if the URL is valid (should be a Supabase project URL, not a database connection string)\nconst isValidSupabaseUrl = (url: string | undefined): boolean => {\n  if (!url) {\n    return false;\n  }\n  // Should be a valid HTTPS URL ending with .supabase.co\n  try {\n    const urlObj = new URL(url);\n    return urlObj.protocol === 'https:' && urlObj.hostname.endsWith('.supabase.co');\n  } catch {\n    return false;\n  }\n};\n\n// Create a fallback client for development when env vars are missing",
      "tokens": 0,
      "firstFile": {
        "name": "lib/supabase/client.ts",
        "start": 2,
        "end": 22,
        "startLoc": {
          "line": 2,
          "column": 24,
          "position": 16
        },
        "endLoc": {
          "line": 22,
          "column": 70,
          "position": 159
        }
      },
      "secondFile": {
        "name": "lib/supabase/server.ts",
        "start": 3,
        "end": 23,
        "startLoc": {
          "line": 3,
          "column": 15,
          "position": 26
        },
        "endLoc": {
          "line": 23,
          "column": 7,
          "position": 169
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= useCallback((e: React.PointerEvent) => {\n    if (!scrollContainerRef.current) {\n      return;\n    }\n    \n    setIsDragging(false);\n    setIsHorizontalDrag(false);\n    \n    // Release pointer capture\n    e.currentTarget.releasePointerCapture(e.pointerId);\n  }, []);\n\n  // Navigation functions",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useScrollSnapCarousel.ts",
        "start": 125,
        "end": 137,
        "startLoc": {
          "line": 125,
          "column": 2,
          "position": 1137
        },
        "endLoc": {
          "line": 137,
          "column": 24,
          "position": 1218
        }
      },
      "secondFile": {
        "name": "lib/hooks/useScrollSnapCarousel.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 1052
        },
        "endLoc": {
          "line": 125,
          "column": 6,
          "position": 1133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "* Math.PI / 180) *\n              Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const distance = R * c;\n    \n    return",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 84,
        "end": 89,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 1033
        },
        "endLoc": {
          "line": 89,
          "column": 7,
          "position": 1119
        }
      },
      "secondFile": {
        "name": "lib/utils/distance.ts",
        "start": 21,
        "end": 24,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 224
        },
        "endLoc": {
          "line": 24,
          "column": 26,
          "position": 308
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "{\n  const time = timeStr.toLowerCase().trim();\n  const match = time.match(/(\\d+):?(\\d*)\\s*(am|pm)/);\n  \n  if (!match || !match[1] || !match[3]) {\n    return -1;\n  }\n  \n  let hours = parseInt(match[1]);\n  const minutes = match[2] ? parseInt(match[2]) : 0;\n  const period = match[3];\n  \n  if (period === 'pm' && hours !== 12) {",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 135,
        "end": 147,
        "startLoc": {
          "line": 135,
          "column": 2,
          "position": 1534
        },
        "endLoc": {
          "line": 147,
          "column": 2,
          "position": 1686
        }
      },
      "secondFile": {
        "name": "lib/workers/mendel-worker.ts",
        "start": 68,
        "end": 77,
        "startLoc": {
          "line": 68,
          "column": 2,
          "position": 648
        },
        "endLoc": {
          "line": 77,
          "column": 6,
          "position": 794
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ".userLocation) {\n        filtered.sort((a, b) => {\n          if (!a.latitude || !a.longitude) {\n            return 1;\n          }\n          if (!b.latitude || !b.longitude) {\n            return -1;\n          }\n\n          const distanceA = FILTER_FUNCTIONS.nearMe(a, previewFilters",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 430,
        "end": 439,
        "startLoc": {
          "line": 430,
          "column": 15,
          "position": 4118
        },
        "endLoc": {
          "line": 439,
          "column": 15,
          "position": 4212
        }
      },
      "secondFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 337,
        "end": 346,
        "startLoc": {
          "line": 337,
          "column": 14,
          "position": 3347
        },
        "endLoc": {
          "line": 346,
          "column": 14,
          "position": 3441
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "} = options;\n\n    return (e: React.MouseEvent | React.TouchEvent) => {\n      if (preventDefault) {\n        e.preventDefault();\n      }\n      if (stopPropagation) {\n        e.stopPropagation();\n      }\n\n      // Execute immediately for better responsiveness\n      if (immediate) {\n        handler();\n        return;\n      }\n\n      // Only add delay for touch events on mobile if not immediate\n      if ('touches' in e && typeof",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useMobileTouch.ts",
        "start": 20,
        "end": 37,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 154
        },
        "endLoc": {
          "line": 37,
          "column": 7,
          "position": 266
        }
      },
      "secondFile": {
        "name": "lib/hooks/useTouchFeedback.ts",
        "start": 111,
        "end": 128,
        "startLoc": {
          "line": 111,
          "column": 5,
          "position": 903
        },
        "endLoc": {
          "line": 128,
          "column": 9,
          "position": 1015
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "(prev => ({\n      ...prev,\n      [filterType]: value,\n    }));\n  }, []);\n\n  const toggleFilter = useCallback((filterType: keyof FilterState) => {\n    setActiveFilters(prev => ({\n      ...prev,\n      [filterType]: !prev[filterType],\n    }));\n  }, []);\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useAdvancedFilters.ts",
        "start": 25,
        "end": 38,
        "startLoc": {
          "line": 25,
          "column": 17,
          "position": 296
        },
        "endLoc": {
          "line": 38,
          "column": 6,
          "position": 401
        }
      },
      "secondFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 211,
        "end": 224,
        "startLoc": {
          "line": 211,
          "column": 16,
          "position": 2291
        },
        "endLoc": {
          "line": 224,
          "column": 28,
          "position": 2396
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(prev => ({\n      ...prev,\n      [filterType]: !prev[filterType],\n    }));\n  }, []);\n\n  const clearFilter = useCallback((filterType: keyof FilterState) => {\n    setActiveFilters(prev => {\n      const newFilters = { ...prev };\n      delete newFilters[filterType];\n      return newFilters;\n    });\n  }, []);\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useAdvancedFilters.ts",
        "start": 32,
        "end": 46,
        "startLoc": {
          "line": 32,
          "column": 17,
          "position": 358
        },
        "endLoc": {
          "line": 46,
          "column": 6,
          "position": 477
        }
      },
      "secondFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 226,
        "end": 240,
        "startLoc": {
          "line": 226,
          "column": 16,
          "position": 2422
        },
        "endLoc": {
          "line": 240,
          "column": 27,
          "position": 2541
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(prev => {\n      const newFilters = { ...prev };\n      delete newFilters[filterType];\n      return newFilters;\n    });\n  }, []);\n\n  const clearAllFilters = useCallback(() => {\n    setActiveFilters({});\n  }, []);\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useAdvancedFilters.ts",
        "start": 39,
        "end": 50,
        "startLoc": {
          "line": 39,
          "column": 17,
          "position": 424
        },
        "endLoc": {
          "line": 50,
          "column": 6,
          "position": 511
        }
      },
      "secondFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 242,
        "end": 253,
        "startLoc": {
          "line": 242,
          "column": 16,
          "position": 2567
        },
        "endLoc": {
          "line": 253,
          "column": 32,
          "position": 2654
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "({});\n  }, []);\n\n  const getFilterCount = useCallback(() => {\n    return Object.values(activeFilters).filter(filter => \n      filter !== undefined && filter !== false && filter !== ''\n    ).length;\n  }, [activeFilters]);\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useAdvancedFilters.ts",
        "start": 47,
        "end": 56,
        "startLoc": {
          "line": 47,
          "column": 17,
          "position": 494
        },
        "endLoc": {
          "line": 56,
          "column": 7,
          "position": 584
        }
      },
      "secondFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 269,
        "end": 278,
        "startLoc": {
          "line": 269,
          "column": 16,
          "position": 2776
        },
        "endLoc": {
          "line": 278,
          "column": 35,
          "position": 2866
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ".textSearch(request, (results, status) => {\n            if (status === window.google.maps.places.PlacesServiceStatus.OK && results) {\n              const convertedResults: GooglePlacesResult[] = results\n                .filter(result => result.place_id) // Filter out results without place_id\n                .map(result => ({\n                  place_id: result.place_id!,\n                  name: result.name || '',\n                  formatted_address: result.formatted_address || '',\n                  geometry: result.geometry?.location ? {\n                    location: {\n                      lat: result.geometry.location.lat(),\n                      lng: result.geometry.location.lng()\n                    }\n                  } : { location: { lat: 0, lng: 0 } },\n                  rating: undefined, // PlaceResult doesn't have rating\n                  user_ratings_total: undefined, // PlaceResult doesn't have user_ratings_total\n                  photos: result.photos,\n                  opening_hours: undefined, // PlaceResult doesn't have opening_hours\n                  website: result.website,\n                  formatted_phone_number: undefined, // PlaceResult doesn't have formatted_phone_number\n                  price_level: undefined, // PlaceResult doesn't have price_level\n                  types: result.types || []\n                }));\n              resolve(convertedResults.slice(0, options.limit || 20));\n            } else {\n              resolve([]);\n            }\n          });\n        }\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "lib/google/places.ts",
        "start": 269,
        "end": 298,
        "startLoc": {
          "line": 269,
          "column": 14,
          "position": 2301
        },
        "endLoc": {
          "line": 298,
          "column": 2,
          "position": 2632
        }
      },
      "secondFile": {
        "name": "lib/google/places.ts",
        "start": 238,
        "end": 266,
        "startLoc": {
          "line": 238,
          "column": 13,
          "position": 1939
        },
        "endLoc": {
          "line": 266,
          "column": 5,
          "position": 2269
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(query: string, options: {\n  location?: { lat: number; lng: number };\n  radius?: number;\n  types?: string[];\n  limit?: number;\n} = {}): Promise<GooglePlacesResult[]> {\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "lib/google/places.ts",
        "start": 412,
        "end": 418,
        "startLoc": {
          "line": 412,
          "column": 19,
          "position": 3740
        },
        "endLoc": {
          "line": 418,
          "column": 7,
          "position": 3818
        }
      },
      "secondFile": {
        "name": "lib/google/places.ts",
        "start": 200,
        "end": 206,
        "startLoc": {
          "line": 200,
          "column": 13,
          "position": 1548
        },
        "endLoc": {
          "line": 206,
          "column": 6,
          "position": 1627
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "q?: string;\n  agency?: string;\n  dietary?: string;\n  category?: string;\n  businessTypes?: string[];\n  openNow?: boolean;\n  nearMe?: boolean;\n  maxDistance?: number;\n  ratingMin?: number;\n  priceRange?: [number, number];\n  lat?: number;\n  lng?: number;\n  radius?: number;\n  page?: number;\n  limit?: number;\n}\n\nexport interface DraftFilters",
      "tokens": 0,
      "firstFile": {
        "name": "lib/filters/filters.types.ts",
        "start": 42,
        "end": 59,
        "startLoc": {
          "line": 42,
          "column": 3,
          "position": 330
        },
        "endLoc": {
          "line": 59,
          "column": 13,
          "position": 463
        }
      },
      "secondFile": {
        "name": "lib/filters/filters.types.ts",
        "start": 2,
        "end": 19,
        "startLoc": {
          "line": 2,
          "column": 3,
          "position": 9
        },
        "endLoc": {
          "line": 19,
          "column": 12,
          "position": 142
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "q?: string;\n  agency?: string;\n  dietary?: string;\n  category?: string;\n  businessTypes?: string[];\n  openNow?: boolean;\n  nearMe?: boolean;\n  maxDistance?: number;\n  ratingMin?: number;\n  priceRange?: [number, number];\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/filters/filters.types.ts",
        "start": 61,
        "end": 71,
        "startLoc": {
          "line": 61,
          "column": 3,
          "position": 475
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 561
        }
      },
      "secondFile": {
        "name": "lib/filters/filters.types.ts",
        "start": 2,
        "end": 12,
        "startLoc": {
          "line": 2,
          "column": 3,
          "position": 9
        },
        "endLoc": {
          "line": 12,
          "column": 4,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ limit }),\n    });\n\n    const data = await response.json();\n\n    if (response.ok) {\n      return {\n        success: true,\n        message: data.message,\n        updated: data.updated,\n        total_checked: data.total_checked,\n        limit_used: data.limit_used,\n      };\n    } else {\n      return {\n        success: false,\n        message: data.message",
      "tokens": 0,
      "firstFile": {
        "name": "lib/backups/hoursBackup.ts",
        "start": 73,
        "end": 94,
        "startLoc": {
          "line": 73,
          "column": 39,
          "position": 447
        },
        "endLoc": {
          "line": 94,
          "column": 8,
          "position": 602
        }
      },
      "secondFile": {
        "name": "lib/backups/websiteBackup.ts",
        "start": 69,
        "end": 90,
        "startLoc": {
          "line": 69,
          "column": 42,
          "position": 394
        },
        "endLoc": {
          "line": 90,
          "column": 6,
          "position": 549
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "}\n    });\n\n    return {\n      id: updatedUser.id,\n      email: updatedUser.email,\n      name: updatedUser.name,\n      avatar_url: updatedUser.image,\n      isSuperAdmin: updatedUser.isSuperAdmin,\n      createdAt: updatedUser.createdAt,\n      updatedAt: updatedUser.updatedAt,\n    };\n  } catch",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/user-sync.ts",
        "start": 148,
        "end": 160,
        "startLoc": {
          "line": 148,
          "column": 7,
          "position": 1109
        },
        "endLoc": {
          "line": 160,
          "column": 6,
          "position": 1192
        }
      },
      "secondFile": {
        "name": "lib/auth/user-sync.ts",
        "start": 31,
        "end": 43,
        "startLoc": {
          "line": 31,
          "column": 9,
          "position": 255
        },
        "endLoc": {
          "line": 43,
          "column": 5,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching marketplace categories:'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/api/marketplace.ts",
        "start": 125,
        "end": 139,
        "startLoc": {
          "line": 125,
          "column": 32,
          "position": 887
        },
        "endLoc": {
          "line": 139,
          "column": 41,
          "position": 992
        }
      },
      "secondFile": {
        "name": "lib/api/marketplace.ts",
        "start": 32,
        "end": 46,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 225
        },
        "endLoc": {
          "line": 46,
          "column": 39,
          "position": 330
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n    }\n    if (filters.search) {\n      params.append('search', filters.search);\n    }\n    if (filters.page) {\n      params.append('page', filters.page.toString());\n    }\n    if (filters.limit) {\n      params.append('limit', filters.limit.toString());\n    }\n\n    return this.request",
      "tokens": 0,
      "firstFile": {
        "name": "lib/api/adminClient.ts",
        "start": 78,
        "end": 90,
        "startLoc": {
          "line": 78,
          "column": 7,
          "position": 781
        },
        "endLoc": {
          "line": 90,
          "column": 8,
          "position": 885
        }
      },
      "secondFile": {
        "name": "lib/api/adminClient.ts",
        "start": 36,
        "end": 48,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 333
        },
        "endLoc": {
          "line": 48,
          "column": 8,
          "position": 437
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "if (filters.search) {\n      params.append('search', filters.search);\n    }\n    if (filters.page) {\n      params.append('page', filters.page.toString());\n    }\n    if (filters.limit) {\n      params.append('limit', filters.limit.toString());\n    }\n\n    return this.request(`/users?",
      "tokens": 0,
      "firstFile": {
        "name": "lib/api/adminClient.ts",
        "start": 110,
        "end": 120,
        "startLoc": {
          "line": 110,
          "column": 5,
          "position": 1105
        },
        "endLoc": {
          "line": 120,
          "column": 9,
          "position": 1204
        }
      },
      "secondFile": {
        "name": "lib/api/adminClient.ts",
        "start": 38,
        "end": 90,
        "startLoc": {
          "line": 38,
          "column": 5,
          "position": 340
        },
        "endLoc": {
          "line": 90,
          "column": 15,
          "position": 887
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ">\n            <Plus size={12} className=\"sm:w-4 sm:h-4 group-hover:scale-110 transition-transform duration-200\" />\n            <span className=\"truncate\">Add</span>\n          </button>\n          \n          <button\n            onClick={onShowFilters || (() => {\n              if (process.env.NODE_ENV === 'development') {\n                }\n            })}\n            className=\"flex items-center space-x-1 sm:space-x-2 px-3 py-2 sm:px-4 sm:py-2.5 bg-transparent text-gray-600 rounded-full border border-gray-200 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-800 hover:shadow-sm transition-all duration-200 flex-1 justify-center text-xs sm:text-sm font-medium group\"\n          >\n            <Filter size={12} className=\"sm:w-4 sm:h-4 group-hover:scale-110 transition-transform duration-200\" />\n            <span className=\"truncate\">Filters</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};",
      "tokens": 0,
      "firstFile": {
        "name": "components/navigation/ui/SubNav.tsx",
        "start": 125,
        "end": 144,
        "startLoc": {
          "line": 125,
          "column": 11,
          "position": 980
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 1133
        }
      },
      "secondFile": {
        "name": "components/navigation/ui/SubNav.tsx",
        "start": 38,
        "end": 59,
        "startLoc": {
          "line": 38,
          "column": 13,
          "position": 344
        },
        "endLoc": {
          "line": 59,
          "column": 62,
          "position": 501
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ": React.FC<{ size?: number; className?: string }> = ({ size = 18, className = '' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={className}\n  >\n    {",
      "tokens": 0,
      "firstFile": {
        "name": "components/navigation/ui/MobileCategoryTabs.tsx",
        "start": 25,
        "end": 37,
        "startLoc": {
          "line": 25,
          "column": 10,
          "position": 186
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 296
        }
      },
      "secondFile": {
        "name": "components/navigation/ui/MobileCategoryTabs.tsx",
        "start": 8,
        "end": 20,
        "startLoc": {
          "line": 8,
          "column": 13,
          "position": 51
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 161
        }
      }
    },
    {
      "format": "tsx",
      "lines": 46,
      "fragment": "} from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport React from 'react';\n\n// Custom kitchen tools icon component\nconst KitchenTools: React.FC<{ size?: number; className?: string }> = ({ size = 18, className = '' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={className}\n  >\n    <path d=\"M19 3v12h-5c-.023 -3.681 .184 -7.406 5 -12zm0 12v6h-1v-3m-10 -14v17m-3 -17v3a3 3 0 1 0 6 0v-3\" />\n  </svg>\n);\n\n// Custom synagogue with Star of David icon component\nconst Synagogue: React.FC<{ size?: number; className?: string }> = ({ size = 18, className = '' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={className}\n  >\n    {/* Synagogue building */}\n    <path d=\"M3 21h18\" />\n    <path d=\"M5 21V7l7-4 7 4v14\" />\n    <path d=\"M9 21v-8h6v8\" />\n    <path d=\"M7 7v14\" />\n    <path d=\"M17 7v14\" />\n    {/* Star of David on top */}\n    <path d=\"M12 3l1.5 2.5L16 6l-2.5 1.5L12 10l-1.5-2.5L8 6l2.5-1.5z\" />\n  </svg>\n);\n\ninterface CategoryTabsProps",
      "tokens": 0,
      "firstFile": {
        "name": "components/navigation/ui/CategoryTabs.tsx",
        "start": 3,
        "end": 48,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 16
        },
        "endLoc": {
          "line": 48,
          "column": 18,
          "position": 388
        }
      },
      "secondFile": {
        "name": "components/navigation/ui/MobileCategoryTabs.tsx",
        "start": 3,
        "end": 48,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 16
        },
        "endLoc": {
          "line": 48,
          "column": 24,
          "position": 388
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ", () => {\n    render(<MapLegend showRatingBubbles={false} />);\n    \n    expect(screen.getByText('Kosher Types:')).toBeInTheDocument();\n    expect(screen.getByText('Meat')).toBeInTheDocument();\n    expect(screen.getByText('Dairy')).toBeInTheDocument();\n    expect(screen.getByText('Pareve')).toBeInTheDocument();\n  });\n\n  it('has proper accessibility attributes'",
      "tokens": 0,
      "firstFile": {
        "name": "components/map/__tests__/MapLegend.test.tsx",
        "start": 17,
        "end": 26,
        "startLoc": {
          "line": 17,
          "column": 72,
          "position": 158
        },
        "endLoc": {
          "line": 26,
          "column": 38,
          "position": 258
        }
      },
      "secondFile": {
        "name": "components/map/__tests__/MapLegend.test.tsx",
        "start": 8,
        "end": 17,
        "startLoc": {
          "line": 8,
          "column": 68,
          "position": 57
        },
        "endLoc": {
          "line": 17,
          "column": 72,
          "position": 157
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/SharePopup.tsx",
        "start": 149,
        "end": 155,
        "startLoc": {
          "line": 149,
          "column": 22,
          "position": 1108
        },
        "endLoc": {
          "line": 155,
          "column": 2,
          "position": 1176
        }
      },
      "secondFile": {
        "name": "components/ui/Toast.tsx",
        "start": 63,
        "end": 104,
        "startLoc": {
          "line": 63,
          "column": 8,
          "position": 537
        },
        "endLoc": {
          "line": 104,
          "column": 2,
          "position": 943
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ") {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  const validateForm",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/PasswordChangeModal.tsx",
        "start": 38,
        "end": 54,
        "startLoc": {
          "line": 38,
          "column": 7,
          "position": 364
        },
        "endLoc": {
          "line": 54,
          "column": 13,
          "position": 478
        }
      },
      "secondFile": {
        "name": "components/ui/SharePopup.tsx",
        "start": 26,
        "end": 42,
        "startLoc": {
          "line": 26,
          "column": 9,
          "position": 241
        },
        "endLoc": {
          "line": 42,
          "column": 15,
          "position": 355
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "? (\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\n                    </svg>\n                  ) : (\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n              \n              {",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/PasswordChangeModal.tsx",
        "start": 205,
        "end": 218,
        "startLoc": {
          "line": 205,
          "column": 2,
          "position": 1792
        },
        "endLoc": {
          "line": 218,
          "column": 2,
          "position": 1978
        }
      },
      "secondFile": {
        "name": "components/ui/SharePopup.tsx",
        "start": 196,
        "end": 183,
        "startLoc": {
          "line": 196,
          "column": 2,
          "position": 1547
        },
        "endLoc": {
          "line": 183,
          "column": 3,
          "position": 1640
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "? (\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\n                    </svg>\n                  ) : (\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n              {confirmPassword",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/PasswordChangeModal.tsx",
        "start": 266,
        "end": 278,
        "startLoc": {
          "line": 266,
          "column": 2,
          "position": 2317
        },
        "endLoc": {
          "line": 278,
          "column": 16,
          "position": 2502
        }
      },
      "secondFile": {
        "name": "components/ui/SharePopup.tsx",
        "start": 196,
        "end": 218,
        "startLoc": {
          "line": 196,
          "column": 2,
          "position": 1547
        },
        "endLoc": {
          "line": 218,
          "column": 34,
          "position": 1979
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "&& (\n        <div className=\"absolute inset-0 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"text-4xl mb-2\">📷</div>\n            <p className=\"text-gray-600 text-sm\">Image unavailable</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LazyImage",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/LazyImage.tsx",
        "start": 99,
        "end": 111,
        "startLoc": {
          "line": 99,
          "column": 2,
          "position": 763
        },
        "endLoc": {
          "line": 111,
          "column": 10,
          "position": 852
        }
      },
      "secondFile": {
        "name": "components/ui/OptimizedImage.tsx",
        "start": 83,
        "end": 95,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 700
        },
        "endLoc": {
          "line": 95,
          "column": 15,
          "position": 789
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ",\n          },\n          sentryError: {\n            message: sentryError instanceof Error ? sentryError.message : String(sentryError),\n            stack: sentryError instanceof Error ? sentryError.stack : undefined,\n          },\n          timestamp: new Date().toISOString(),\n          url: window.location.href,\n          userAgent: navigator.userAgent,\n        });\n      }\n    } else {\n      // Development logging\n      console.error('Development error:', {\n        message: error.message,\n        stack: error.stack,\n        timestamp",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/ErrorBoundary.tsx",
        "start": 200,
        "end": 216,
        "startLoc": {
          "line": 200,
          "column": 6,
          "position": 1619
        },
        "endLoc": {
          "line": 216,
          "column": 10,
          "position": 1762
        }
      },
      "secondFile": {
        "name": "components/ui/ErrorBoundary.tsx",
        "start": 61,
        "end": 77,
        "startLoc": {
          "line": 61,
          "column": 15,
          "position": 494
        },
        "endLoc": {
          "line": 77,
          "column": 15,
          "position": 637
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Handle escape key\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  if",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/ConfirmModal.tsx",
        "start": 20,
        "end": 39,
        "startLoc": {
          "line": 20,
          "column": 3,
          "position": 175
        },
        "endLoc": {
          "line": 39,
          "column": 3,
          "position": 332
        }
      },
      "secondFile": {
        "name": "components/ui/PasswordChangeModal.tsx",
        "start": 35,
        "end": 42,
        "startLoc": {
          "line": 35,
          "column": 3,
          "position": 319
        },
        "endLoc": {
          "line": 42,
          "column": 6,
          "position": 353
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\n      {/* Backdrop */}\n      <div \n        className=\"absolute inset-0 bg-black/50 backdrop-blur-sm\"\n        onClick={onClose}\n      />\n      \n      {/* Modal */}\n      <div className=\"relative bg-white rounded-lg shadow-xl max-w-md w-full mx-4 animate-in slide-in-from-bottom-2 duration-200\">\n        {/* Header */}\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">{",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/ConfirmModal.tsx",
        "start": 54,
        "end": 66,
        "startLoc": {
          "line": 54,
          "column": 3,
          "position": 438
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 520
        }
      },
      "secondFile": {
        "name": "components/ui/PasswordChangeModal.tsx",
        "start": 132,
        "end": 144,
        "startLoc": {
          "line": 132,
          "column": 3,
          "position": 1160
        },
        "endLoc": {
          "line": 144,
          "column": 7,
          "position": 1242
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ";\n\ninterface SmartSearchProps {\n  onSearch: (query: string) => void;\n  onLocationSelect?: (location: { lat: number; lng: number; address: string }) => void;\n  placeholder?: string;\n  className?: string;\n  showAdvancedFilters?: boolean;\n  useGoogleAPI?: boolean; // New prop to determine search type",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/SmartSearch.tsx",
        "start": 7,
        "end": 15,
        "startLoc": {
          "line": 7,
          "column": 14,
          "position": 85
        },
        "endLoc": {
          "line": 15,
          "column": 37,
          "position": 178
        }
      },
      "secondFile": {
        "name": "components/search/SmartSearchRefactored.tsx",
        "start": 11,
        "end": 20,
        "startLoc": {
          "line": 11,
          "column": 22,
          "position": 116
        },
        "endLoc": {
          "line": 20,
          "column": 9,
          "position": 210
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  inputClassName?: string;\n  onVoiceInput?: () => void;\n  suggestions?: Array<{ text: string; icon?: string; color?: string }>;\n  autoFocus?: boolean;\n  debounceMs?: number;\n  onFilterClick?: () => void;\n}\n\ninterface",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/SmartSearch.tsx",
        "start": 17,
        "end": 27,
        "startLoc": {
          "line": 17,
          "column": 3,
          "position": 184
        },
        "endLoc": {
          "line": 27,
          "column": 10,
          "position": 288
        }
      },
      "secondFile": {
        "name": "components/search/SmartSearchRefactored.tsx",
        "start": 20,
        "end": 30,
        "startLoc": {
          "line": 20,
          "column": 3,
          "position": 210
        },
        "endLoc": {
          "line": 30,
          "column": 7,
          "position": 314
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ">\n                    <span className={`w-2 h-2 ${suggestion.color} rounded-full flex-shrink-0`}></span>\n                    <span className=\"text-sm\">{suggestion.icon}</span>\n                    <span className=\"flex-1\">{suggestion.label}</span>\n                  </button>\n                ))}\n              </div>\n            )",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/SearchBar.tsx",
        "start": 357,
        "end": 364,
        "startLoc": {
          "line": 357,
          "column": 19,
          "position": 3403
        },
        "endLoc": {
          "line": 364,
          "column": 2,
          "position": 3479
        }
      },
      "secondFile": {
        "name": "components/search/SearchBar.tsx",
        "start": 331,
        "end": 338,
        "startLoc": {
          "line": 331,
          "column": 21,
          "position": 3129
        },
        "endLoc": {
          "line": 338,
          "column": 3,
          "position": 3205
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "<div className=\"bg-white rounded-xl shadow-lg border border-gray-200 p-6 mb-4\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center\">\n          <svg className=\"w-5 h-5 mr-2 text-jewgo-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\n          </svg>\n          <h3 className=\"text-lg font-semibold text-gray-900\">Filters</h3>\n          {",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 163,
        "end": 171,
        "startLoc": {
          "line": 163,
          "column": 7,
          "position": 1328
        },
        "endLoc": {
          "line": 171,
          "column": 2,
          "position": 1445
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFiltersRefactored.tsx",
        "start": 29,
        "end": 37,
        "startLoc": {
          "line": 29,
          "column": 5,
          "position": 311
        },
        "endLoc": {
          "line": 37,
          "column": 3,
          "position": 428
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "<div>\n          <h4 className=\"text-sm font-medium text-gray-700 mb-3 flex items-center\">\n            <svg className=\"w-4 h-4 mr-2 text-jewgo-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n            </svg>\n            Quick Filters\n          </h4>\n          <div className=\"flex flex-wrap gap-3\">\n            <button\n              ",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 192,
        "end": 201,
        "startLoc": {
          "line": 192,
          "column": 9,
          "position": 1565
        },
        "endLoc": {
          "line": 201,
          "column": 15,
          "position": 1668
        }
      },
      "secondFile": {
        "name": "components/search/QuickFilters.tsx",
        "start": 20,
        "end": 29,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 189
        },
        "endLoc": {
          "line": 29,
          "column": 11,
          "position": 292
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "(\n          <div>\n            <h4 className=\"text-sm font-medium text-gray-700 mb-3 flex items-center\">\n              <svg className=\"w-4 h-4 mr-2 text-jewgo-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n              Distance from My Location\n            </h4>\n            <div className=\"space-y-3\">\n              <div className=\"text-center py-4",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 280,
        "end": 290,
        "startLoc": {
          "line": 280,
          "column": 2,
          "position": 2406
        },
        "endLoc": {
          "line": 290,
          "column": 17,
          "position": 2550
        }
      },
      "secondFile": {
        "name": "components/search/QuickFilters.tsx",
        "start": 19,
        "end": 249,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 186
        },
        "endLoc": {
          "line": 249,
          "column": 34,
          "position": 2127
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "(\n          <div>\n            <h4 className=\"text-sm font-medium text-gray-700 mb-3 flex items-center\">\n              <svg className=\"w-4 h-4 mr-2 text-jewgo-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              Certifying Agency",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 320,
        "end": 326,
        "startLoc": {
          "line": 320,
          "column": 2,
          "position": 2768
        },
        "endLoc": {
          "line": 326,
          "column": 7,
          "position": 2853
        }
      },
      "secondFile": {
        "name": "components/search/QuickFilters.tsx",
        "start": 19,
        "end": 28,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 186
        },
        "endLoc": {
          "line": 28,
          "column": 9,
          "position": 290
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ")}\n              </select>\n              <svg className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400 pointer-events-none\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </div>\n        )}\n\n        {/* Categories Dropdown */",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 385,
        "end": 394,
        "startLoc": {
          "line": 385,
          "column": 2,
          "position": 3419
        },
        "endLoc": {
          "line": 394,
          "column": 26,
          "position": 3508
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 346,
        "end": 355,
        "startLoc": {
          "line": 346,
          "column": 2,
          "position": 3022
        },
        "endLoc": {
          "line": 355,
          "column": 35,
          "position": 3111
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ")}\n                  </option>\n                ))}\n              </select>\n              <svg className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400 pointer-events-none\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </div>\n        )}\n\n        {/* Draft Mode Actions */",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 419,
        "end": 430,
        "startLoc": {
          "line": 419,
          "column": 5,
          "position": 3767
        },
        "endLoc": {
          "line": 430,
          "column": 25,
          "position": 3866
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 344,
        "end": 355,
        "startLoc": {
          "line": 344,
          "column": 7,
          "position": 3012
        },
        "endLoc": {
          "line": 355,
          "column": 35,
          "position": 3111
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ").forEach(f => {\n                    if (f !== undefined && f !== false && f !== '' && (!Array.isArray(f) || f.length > 0)) {\n                      count++;\n                    }\n                  });\n                  return count;\n                })()} active",
      "tokens": 0,
      "firstFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 472,
        "end": 478,
        "startLoc": {
          "line": 472,
          "column": 14,
          "position": 4214
        },
        "endLoc": {
          "line": 478,
          "column": 7,
          "position": 4301
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 437,
        "end": 443,
        "startLoc": {
          "line": 437,
          "column": 13,
          "position": 3940
        },
        "endLoc": {
          "line": 443,
          "column": 6,
          "position": 4027
        }
      }
    },
    {
      "format": "javascript",
      "lines": 50,
      "fragment": "}>\n                {review.status.charAt(0).toUpperCase() + review.status.slice(1)}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Flag Modal */}\n      {showFlagModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg p-6 max-w-md w-full\">\n            <h3 className=\"text-lg font-semibold mb-4\">Report Review</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Reason *\n                </label>\n                <select\n                  value={flagReason}\n                  onChange={(e) => setFlagReason(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"\">Select a reason</option>\n                  {FLAG_REASONS.map((reason) => (\n                    <option key={reason.value} value={reason.value}>\n                      {reason.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Description (Optional)\n                </label>\n                <textarea\n                  value={flagDescription}\n                  onChange={(e) => setFlagDescription(e.target.value)}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Provide additional details...\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex gap-3 mt-6\">\n              <button\n                onClick={handleFlag",
      "tokens": 0,
      "firstFile": {
        "name": "components/reviews/ReviewCard.tsx",
        "start": 271,
        "end": 320,
        "startLoc": {
          "line": 271,
          "column": 2,
          "position": 2202
        },
        "endLoc": {
          "line": 320,
          "column": 11,
          "position": 2571
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewModeration.tsx",
        "start": 365,
        "end": 418,
        "startLoc": {
          "line": 365,
          "column": 7,
          "position": 3313
        },
        "endLoc": {
          "line": 418,
          "column": 16,
          "position": 3698
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": ");\n\n  // Get Supabase session\n  useEffect(() => {\n    const getSession = async () => {\n      try {\n        const { data: { session } } = await supabaseBrowser.auth.getSession();\n        setSession(session);\n      } catch (error) {\n        console.error('Error getting session:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getSession();\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabaseBrowser.auth.onAuthStateChange(\n      async (event, session) => {\n        setSession(session);\n        setLoading(false);\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // Using unified date formatting utility",
      "tokens": 0,
      "firstFile": {
        "name": "components/reviews/ReviewCard.tsx",
        "start": 47,
        "end": 75,
        "startLoc": {
          "line": 47,
          "column": 3,
          "position": 524
        },
        "endLoc": {
          "line": 75,
          "column": 41,
          "position": 740
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewForm.tsx",
        "start": 38,
        "end": 66,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 395
        },
        "endLoc": {
          "line": 66,
          "column": 6,
          "position": 611
        }
      }
    },
    {
      "format": "javascript",
      "lines": 146,
      "fragment": "={review.id} className=\"border-b border-gray-100 last:border-b-0 pb-4 last:pb-0\">\n      <div className=\"flex items-start space-x-3\">\n        {/* Profile Image */}\n        <div className=\"flex-shrink-0\">\n          <img\n            src={review.profile_photo_url || '/default-avatar.svg'}\n            alt={review.author_name}\n            className=\"w-10 h-10 rounded-full object-cover\"\n            onError={(e) => {\n              const target = e.target as HTMLImageElement;\n              target.src = '/default-avatar.svg';\n            }}\n          />\n        </div>\n        \n        {/* Review Content */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center space-x-2 mb-1\">\n            <span className=\"font-medium text-gray-900 truncate\">\n              {review.author_name}\n            </span>\n            <div className=\"flex items-center\">\n              <StarRating rating={review.rating} showHalfStars={true} />\n            </div>\n            {review.type === 'google' && (\n              <div className=\"flex items-center space-x-1\">\n                <span className=\"text-xs text-gray-500\">•</span>\n                <span className=\"text-xs text-blue-600 font-medium\">Google</span>\n                {review.author_url && (\n                  <a\n                    href={review.author_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-blue-600 hover:text-blue-800\"\n                  >\n                    <ExternalLink className=\"w-3 h-3\" />\n                  </a>\n                )}\n              </div>\n            )}\n          </div>\n          \n          {review.relative_time_description && (\n            <p className=\"text-sm text-gray-500 mb-2\">\n              {review.relative_time_description}\n            </p>\n          )}\n          \n          <p className=\"text-gray-700 leading-relaxed\">\n            {review.text}\n          </p>\n\n          {/* Helpful button for user reviews */}\n          {review.type === 'user' && (\n            <div className=\"mt-2\">\n              <button\n                onClick={() => handleHelpful(review.id)}\n                className=\"text-sm text-gray-500 hover:text-gray-700 flex items-center space-x-1\"\n              >\n                <MessageCircle className=\"w-3 h-3\" />\n                <span>Helpful ({review.helpful_count || 0})</span>\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  // Combine, filter, and sort reviews\n  const combinedReviews: CombinedReview[] = React.useMemo(() => {\n    const googleReviewsFormatted: CombinedReview[] = googleReviews.map((review, index) => ({\n      id: `google-${index}`,\n      type: 'google' as const,\n      author_name: review.author_name || 'Anonymous',\n      rating: review.rating || 0,\n      text: review.text,\n      date: new Date(review.time * 1000).toISOString(),\n      profile_photo_url: review.profile_photo_url,\n      author_url: review.author_url,\n      relative_time_description: review.relative_time_description,\n    }));\n\n    const userReviewsFormatted: CombinedReview[] = userReviews.map(review => ({\n      id: review.id,\n      type: 'user' as const,\n      author_name: review.user_name || 'Anonymous',\n      rating: review.rating,\n      text: review.content,\n      date: review.created_at,\n      profile_photo_url: undefined, // User reviews don't have profile photos\n      helpful_count: review.helpful_count,\n      user_id: review.user_id,\n      status: review.status,\n      title: review.title,\n    }));\n\n    // Combine all reviews\n    let combined = [...googleReviewsFormatted, ...userReviewsFormatted];\n\n    // Apply filters\n    if (filterType !== 'all') {\n      combined = combined.filter(review => review.type === filterType);\n    }\n\n    if (filterRating !== null) {\n      combined = combined.filter(review => review.rating === filterRating);\n    }\n\n    // Apply sorting\n    combined.sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'date':\n          comparison = new Date(a.date).getTime() - new Date(b.date).getTime();\n          break;\n        case 'rating':\n          comparison = a.rating - b.rating;\n          break;\n        case 'helpful':\n          const aHelpful = a.helpful_count || 0;\n          const bHelpful = b.helpful_count || 0;\n          comparison = aHelpful - bHelpful;\n          break;\n      }\n\n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n\n    return combined;\n  }, [googleReviews, userReviews, sortBy, sortOrder, filterRating, filterType]);\n\n  const displayedReviews = showAllReviews ? combinedReviews : combinedReviews.slice(0, 6);\n  const hasAnyReviews = combinedReviews.length > 0;\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\n      {/* Backdrop */}\n      <div \n        className=\"absolute inset-0 bg-black/50 backdrop-blur-sm\"\n        onClick={onClose",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/ReviewsModal.tsx",
        "start": 226,
        "end": 371,
        "startLoc": {
          "line": 226,
          "column": 4,
          "position": 2128
        },
        "endLoc": {
          "line": 371,
          "column": 8,
          "position": 3374
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewsSection.tsx",
        "start": 366,
        "end": 438,
        "startLoc": {
          "line": 366,
          "column": 4,
          "position": 3262
        },
        "endLoc": {
          "line": 438,
          "column": 12,
          "position": 3814
        }
      }
    },
    {
      "format": "tsx",
      "lines": 41,
      "fragment": ";\n\n// Google Review interface\ninterface GoogleReview {\n  author_name?: string;\n  author_url?: string;\n  language?: string;\n  profile_photo_url?: string;\n  rating?: number;\n  relative_time_description?: string;\n  text: string;\n  time: number;\n  translated?: boolean;\n  user?: {\n    id: string;\n    profile_url: string;\n    image_url: string;\n    name: string;\n  };\n}\n\n// Combined review interface for unified display\ninterface CombinedReview {\n  id: string;\n  type: 'google' | 'user';\n  author_name: string;\n  rating: number;\n  text: string;\n  date: string;\n  profile_photo_url?: string;\n  helpful_count?: number;\n  user_id?: string;\n  status?: string;\n  // Google-specific fields\n  author_url?: string;\n  relative_time_description?: string;\n  // User-specific fields\n  title?: string;\n}\n\ninterface ReviewsModalProps",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/ReviewsModal.tsx",
        "start": 10,
        "end": 50,
        "startLoc": {
          "line": 10,
          "column": 25,
          "position": 113
        },
        "endLoc": {
          "line": 50,
          "column": 18,
          "position": 357
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewsSection.tsx",
        "start": 11,
        "end": 51,
        "startLoc": {
          "line": 11,
          "column": 15,
          "position": 105
        },
        "endLoc": {
          "line": 51,
          "column": 20,
          "position": 349
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ") {\n  // NextAuth removed - using Supabase only\n  const session = null; // TODO: Replace with Supabase session\n  const [userReviews, setUserReviews] = useState<Review[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [error",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/ReviewsModal.tsx",
        "start": 56,
        "end": 62,
        "startLoc": {
          "line": 56,
          "column": 18,
          "position": 412
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 495
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewsSection.tsx",
        "start": 60,
        "end": 66,
        "startLoc": {
          "line": 60,
          "column": 20,
          "position": 418
        },
        "endLoc": {
          "line": 66,
          "column": 14,
          "position": 501
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ");\n  const [error, setError] = useState<string | null>(null);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(0);\n  const [showAllReviews, setShowAllReviews] = useState(false);\n  \n  // Sort and filter state",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/ReviewsModal.tsx",
        "start": 61,
        "end": 67,
        "startLoc": {
          "line": 61,
          "column": 6,
          "position": 488
        },
        "endLoc": {
          "line": 67,
          "column": 25,
          "position": 573
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewsSection.tsx",
        "start": 66,
        "end": 72,
        "startLoc": {
          "line": 66,
          "column": 5,
          "position": 519
        },
        "endLoc": {
          "line": 72,
          "column": 71,
          "position": 603
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "] = useState(false);\n\n  // Safe JSON parsing for potentially malformed Google reviews payloads\n  const googleReviews: GoogleReview[] = React.useMemo(() => {\n    const source = restaurant?.google_reviews;\n    if (!source) { return []; }\n    try {\n      const parsed = JSON.parse(source);\n      if (Array.isArray(parsed)) { return parsed as GoogleReview[]; }\n      if (parsed && Array.isArray((parsed as any).reviews)) { return (parsed as any).reviews; }\n      return [];\n    } catch {\n      // Attempt to repair common non-JSON formats",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/ReviewsModal.tsx",
        "start": 72,
        "end": 84,
        "startLoc": {
          "line": 72,
          "column": 15,
          "position": 691
        },
        "endLoc": {
          "line": 84,
          "column": 45,
          "position": 862
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewsSection.tsx",
        "start": 70,
        "end": 82,
        "startLoc": {
          "line": 70,
          "column": 18,
          "position": 591
        },
        "endLoc": {
          "line": 82,
          "column": 108,
          "position": 762
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ");\n        if (Array.isArray(parsed)) { return parsed as GoogleReview[]; }\n        if (parsed && Array.isArray((parsed as any).reviews)) { return (parsed as any).reviews; }\n        return [];\n      } catch {\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/ReviewsModal.tsx",
        "start": 101,
        "end": 106,
        "startLoc": {
          "line": 101,
          "column": 9,
          "position": 1010
        },
        "endLoc": {
          "line": 106,
          "column": 7,
          "position": 1096
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewsSection.tsx",
        "start": 77,
        "end": 82,
        "startLoc": {
          "line": 77,
          "column": 7,
          "position": 676
        },
        "endLoc": {
          "line": 82,
          "column": 108,
          "position": 762
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "]);\n\n  // Handle escape key\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  // Handle review submission",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/ReviewsModal.tsx",
        "start": 145,
        "end": 166,
        "startLoc": {
          "line": 145,
          "column": 17,
          "position": 1457
        },
        "endLoc": {
          "line": 166,
          "column": 28,
          "position": 1620
        }
      },
      "secondFile": {
        "name": "components/ui/PasswordChangeModal.tsx",
        "start": 33,
        "end": 42,
        "startLoc": {
          "line": 33,
          "column": 7,
          "position": 313
        },
        "endLoc": {
          "line": 42,
          "column": 6,
          "position": 353
        }
      }
    },
    {
      "format": "tsx",
      "lines": 49,
      "fragment": ";\n\n  // Using unified StarRating component\n\n  // Render a combined review\n  const renderCombinedReview = (review: CombinedReview) => (\n    <div key={review.id} className=\"border-b border-gray-100 last:border-b-0 pb-4 last:pb-0\">\n      <div className=\"flex items-start space-x-3\">\n        {/* Profile Image */}\n        <div className=\"flex-shrink-0\">\n          <img\n            src={review.profile_photo_url || '/default-avatar.svg'}\n            alt={review.author_name}\n            className=\"w-10 h-10 rounded-full object-cover\"\n            onError={(e) => {\n              const target = e.target as HTMLImageElement;\n              target.src = '/default-avatar.svg';\n            }}\n          />\n        </div>\n        \n        {/* Review Content */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center space-x-2 mb-1\">\n            <span className=\"font-medium text-gray-900 truncate\">\n              {review.author_name}\n            </span>\n            <div className=\"flex items-center\">\n              <StarRating rating={review.rating} showHalfStars={true} />\n            </div>\n            {review.type === 'google' && (\n              <div className=\"flex items-center space-x-1\">\n                <span className=\"text-xs text-gray-500\">•</span>\n                <span className=\"text-xs text-blue-600 font-medium\">Google</span>\n                {review.author_url && (\n                  <a\n                    href={review.author_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-blue-600 hover:text-blue-800\"\n                  >\n                    <ExternalLink className=\"w-3 h-3\" />\n                  </a>\n                )}\n              </div>\n            )}\n          </div>\n          \n          {",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/ReviewsModal.tsx",
        "start": 220,
        "end": 268,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 2095
        },
        "endLoc": {
          "line": 268,
          "column": 2,
          "position": 2459
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewsSection.tsx",
        "start": 360,
        "end": 408,
        "startLoc": {
          "line": 360,
          "column": 2,
          "position": 3229
        },
        "endLoc": {
          "line": 408,
          "column": 2,
          "position": 3593
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "{\n  author_name?: string;\n  author_url?: string;\n  language?: string;\n  profile_photo_url?: string;\n  rating?: number;\n  relative_time_description?: string;\n  text: string;\n  time: number;\n  translated?: boolean;\n  user?: {\n    id: string;\n    profile_url: string;\n    image_url: string;\n    name: string;\n  };\n}\n\ninterface",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/Reviews.tsx",
        "start": 8,
        "end": 26,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 52
        },
        "endLoc": {
          "line": 26,
          "column": 10,
          "position": 166
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewsSection.tsx",
        "start": 14,
        "end": 32,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 114
        },
        "endLoc": {
          "line": 32,
          "column": 49,
          "position": 228
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ") => (\n    <div key={index} className=\"border-b border-gray-100 last:border-b-0 pb-4 last:pb-0\">\n      <div className=\"flex items-start space-x-3\">\n        {/* Profile Image */}\n        <div className=\"flex-shrink-0\">\n          <img\n            src={review.profile_photo_url || review.user?.image_url || '/default-avatar.svg'}\n            alt={review.author_name || review.user?.name || 'Reviewer'}\n            className=\"w-10 h-10 rounded-full object-cover\"\n            onError={(e) => {\n              const target = e.target as HTMLImageElement;\n              target.src = '/default-avatar.svg';\n            }}\n          />\n        </div>\n        \n        {/* Review Content */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center space-x-2 mb-1\">\n            <span className=\"font-medium text-gray-900 truncate\">\n              {review.author_name ||",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/Reviews.tsx",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 7,
          "position": 672
        },
        "endLoc": {
          "line": 106,
          "column": 3,
          "position": 852
        }
      },
      "secondFile": {
        "name": "components/reviews/ReviewsSection.tsx",
        "start": 365,
        "end": 385,
        "startLoc": {
          "line": 365,
          "column": 15,
          "position": 3251
        },
        "endLoc": {
          "line": 385,
          "column": 2,
          "position": 3415
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ".map((file, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                      <span className=\"text-sm text-gray-700 truncate\">{file.name}</span>\n                      <button\n                        type=\"button\"\n                        onClick={() => removeFile('additionalDocuments', index)}\n                        className=\"text-red-500 hover:text-red-700\"\n                      >\n                        <X className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/RestaurantClaimForm.tsx",
        "start": 455,
        "end": 470,
        "startLoc": {
          "line": 455,
          "column": 20,
          "position": 3996
        },
        "endLoc": {
          "line": 470,
          "column": 3,
          "position": 4122
        }
      },
      "secondFile": {
        "name": "components/restaurant/RestaurantClaimForm.tsx",
        "start": 421,
        "end": 437,
        "startLoc": {
          "line": 421,
          "column": 17,
          "position": 3727
        },
        "endLoc": {
          "line": 437,
          "column": 2,
          "position": 3854
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "=> {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/OrderForm.tsx",
        "start": 186,
        "end": 196,
        "startLoc": {
          "line": 186,
          "column": 2,
          "position": 1757
        },
        "endLoc": {
          "line": 196,
          "column": 7,
          "position": 1839
        }
      },
      "secondFile": {
        "name": "components/restaurant/RestaurantClaimForm.tsx",
        "start": 75,
        "end": 84,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 712
        },
        "endLoc": {
          "line": 84,
          "column": 6,
          "position": 794
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "&& (\n                <div className=\"absolute inset-0 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <div className=\"text-4xl mb-2\">📷</div>\n                    <p className=\"text-gray-600 text-sm\">Image unavailable</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))",
      "tokens": 0,
      "firstFile": {
        "name": "components/restaurant/ImageCarousel.tsx",
        "start": 184,
        "end": 193,
        "startLoc": {
          "line": 184,
          "column": 2,
          "position": 1471
        },
        "endLoc": {
          "line": 193,
          "column": 2,
          "position": 1550
        }
      },
      "secondFile": {
        "name": "components/ui/OptimizedImage.tsx",
        "start": 83,
        "end": 92,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 700
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 779
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "});\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [showPreferences",
      "tokens": 0,
      "firstFile": {
        "name": "components/newsletter/NewsletterSignup.tsx",
        "start": 69,
        "end": 74,
        "startLoc": {
          "line": 69,
          "column": 3,
          "position": 550
        },
        "endLoc": {
          "line": 74,
          "column": 16,
          "position": 633
        }
      },
      "secondFile": {
        "name": "components/restaurant/RestaurantClaimForm.tsx",
        "start": 67,
        "end": 72,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 578
        },
        "endLoc": {
          "line": 72,
          "column": 12,
          "position": 661
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ", value: string | boolean) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const handlePreferenceChange",
      "tokens": 0,
      "firstFile": {
        "name": "components/newsletter/NewsletterSignup.tsx",
        "start": 76,
        "end": 85,
        "startLoc": {
          "line": 76,
          "column": 15,
          "position": 662
        },
        "endLoc": {
          "line": 85,
          "column": 23,
          "position": 758
        }
      },
      "secondFile": {
        "name": "components/restaurant/RestaurantClaimForm.tsx",
        "start": 75,
        "end": 84,
        "startLoc": {
          "line": 75,
          "column": 10,
          "position": 700
        },
        "endLoc": {
          "line": 84,
          "column": 17,
          "position": 796
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ">\n                    </label>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Submit Status */}\n          {submitStatus === 'error' && (\n            <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n              <div className=\"flex items-center\">\n                <AlertCircle className=\"w-5 h-5 text-red-500 mr-2\" />\n                <p className=\"text-sm text-red-700\">\n                  Failed to subscribe",
      "tokens": 0,
      "firstFile": {
        "name": "components/newsletter/NewsletterSignup.tsx",
        "start": 459,
        "end": 473,
        "startLoc": {
          "line": 459,
          "column": 5,
          "position": 3717
        },
        "endLoc": {
          "line": 473,
          "column": 10,
          "position": 3816
        }
      },
      "secondFile": {
        "name": "components/restaurant/RestaurantClaimForm.tsx",
        "start": 579,
        "end": 593,
        "startLoc": {
          "line": 579,
          "column": 4,
          "position": 5004
        },
        "endLoc": {
          "line": 593,
          "column": 7,
          "position": 5103
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "if (session?.user) {\n          setUser({\n            id: session.user.id,\n            email: session.user.email || \"\",\n            name: session.user.user_metadata?.full_name || session.user.user_metadata?.name,\n            image: session.user.user_metadata?.avatar_url,\n          });\n        } else {\n          setUser(null);\n        }\n        setLoading",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketplace/MarketplaceHeader.tsx",
        "start": 55,
        "end": 65,
        "startLoc": {
          "line": 55,
          "column": 9,
          "position": 500
        },
        "endLoc": {
          "line": 65,
          "column": 11,
          "position": 604
        }
      },
      "secondFile": {
        "name": "components/marketplace/MarketplaceHeader.tsx",
        "start": 32,
        "end": 42,
        "startLoc": {
          "line": 32,
          "column": 9,
          "position": 295
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 399
        }
      }
    },
    {
      "format": "tsx",
      "lines": 43,
      "fragment": ") {\n    return (\n      <CardContainer\n        onClick={handleClick}\n        className={`w-full text-left bg-transparent border-0 p-0 m-0 transition-all duration-300 cursor-pointer touch-manipulation category-card ${className}`}\n        data-clickable=\"true\"\n        {...(isMobileDevice ? {} : {\n          initial: { opacity: 0, scale: 0.95 },\n          animate: { opacity: 1, scale: 1 },\n          transition: { duration: 0.3, ease: \"easeOut\" },\n          whileHover: { \n            scale: 1.02,\n            transition: { duration: 0.2 }\n          },\n          whileTap: { \n            scale: 0.98,\n            transition: { duration: 0.1 }\n          }\n        })}\n        role=\"button\"\n        tabIndex={0}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            handleClick(e as any);\n          }\n        }}\n        aria-label={`Browse ${category.name} products`}\n        style={{\n          WebkitTapHighlightColor: 'transparent',\n          WebkitTouchCallout: 'none',\n          WebkitUserSelect: 'none',\n          userSelect: 'none',\n          touchAction: 'manipulation',\n          position: 'relative',\n          zIndex: 1,\n          ...(isMobileDevice && {\n            opacity: 1,\n            transform: 'scale(1)'\n          })\n        }}\n      >\n        <",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketplace/CategoryCard.tsx",
        "start": 141,
        "end": 183,
        "startLoc": {
          "line": 141,
          "column": 11,
          "position": 1120
        },
        "endLoc": {
          "line": 183,
          "column": 2,
          "position": 1478
        }
      },
      "secondFile": {
        "name": "components/marketplace/CategoryCard.tsx",
        "start": 50,
        "end": 92,
        "startLoc": {
          "line": 50,
          "column": 10,
          "position": 419
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 777
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ">\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              )",
      "tokens": 0,
      "firstFile": {
        "name": "components/layout/SearchHeader.tsx",
        "start": 52,
        "end": 57,
        "startLoc": {
          "line": 52,
          "column": 17,
          "position": 420
        },
        "endLoc": {
          "line": 57,
          "column": 2,
          "position": 492
        }
      },
      "secondFile": {
        "name": "components/ui/Toast.tsx",
        "start": 98,
        "end": 103,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 866
        },
        "endLoc": {
          "line": 103,
          "column": 3,
          "position": 938
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ") {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (query.trim()) {\n      onSearch(query.trim());\n    }\n  };\n\n  return (\n    <div className=\"bg-white border-b border-gray-100 px-4 py-3",
      "tokens": 0,
      "firstFile": {
        "name": "components/layout/MobileSearchHeader.tsx",
        "start": 14,
        "end": 25,
        "startLoc": {
          "line": 14,
          "column": 24,
          "position": 126
        },
        "endLoc": {
          "line": 25,
          "column": 44,
          "position": 221
        }
      },
      "secondFile": {
        "name": "components/layout/SearchHeader.tsx",
        "start": 14,
        "end": 25,
        "startLoc": {
          "line": 14,
          "column": 18,
          "position": 126
        },
        "endLoc": {
          "line": 25,
          "column": 43,
          "position": 221
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              )}\n              \n              {/* Filters Icon */",
      "tokens": 0,
      "firstFile": {
        "name": "components/layout/MobileSearchHeader.tsx",
        "start": 53,
        "end": 59,
        "startLoc": {
          "line": 53,
          "column": 8,
          "position": 430
        },
        "endLoc": {
          "line": 59,
          "column": 19,
          "position": 499
        }
      },
      "secondFile": {
        "name": "components/ui/Toast.tsx",
        "start": 63,
        "end": 59,
        "startLoc": {
          "line": 63,
          "column": 8,
          "position": 537
        },
        "endLoc": {
          "line": 59,
          "column": 57,
          "position": 499
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ";\n\n  // Fetch filter options from API\n  useEffect(() => {\n    const fetchFilterOptions = async () => {\n      try {\n        const response = await fetch('/api/restaurants/filter-options');\n        const data = await response.json();\n        \n        if (data.success && data.data) {\n          setFilterOptions({\n            agencies: data.data.agencies || [],\n            kosherCategories: data.data.kosherCategories || [],\n            listingTypes: data.data.listingTypes || [],",
      "tokens": 0,
      "firstFile": {
        "name": "components/filters/AdvancedFilterSheet.tsx",
        "start": 44,
        "end": 57,
        "startLoc": {
          "line": 44,
          "column": 2,
          "position": 370
        },
        "endLoc": {
          "line": 57,
          "column": 2,
          "position": 508
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 52,
        "end": 66,
        "startLoc": {
          "line": 52,
          "column": 14,
          "position": 536
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 676
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ";\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg border border-gray-200 p-6 mb-4\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 bg-gray-200 rounded mb-4\"></div>\n          <div className=\"space-y-4\">\n            <div className=\"h-4 bg-gray-200 rounded\"></div>\n            <div className=\"h-4 bg-gray-200 rounded\"></div>\n            <div className=\"h-4 bg-gray-200 rounded\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n      <",
      "tokens": 0,
      "firstFile": {
        "name": "components/filters/AdvancedFilterSheet.tsx",
        "start": 93,
        "end": 112,
        "startLoc": {
          "line": 93,
          "column": 11,
          "position": 797
        },
        "endLoc": {
          "line": 112,
          "column": 2,
          "position": 936
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 111,
        "end": 130,
        "startLoc": {
          "line": 111,
          "column": 5,
          "position": 1038
        },
        "endLoc": {
          "line": 130,
          "column": 2,
          "position": 1177
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "return (\n      <div className=\"bg-white rounded-xl shadow-lg border border-gray-200 p-6 mb-4\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center\">\n          <svg className=\"w-5 h-5 mr-2 text-jewgo-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\n          </svg>\n          <h3 className=\"text-lg font-semibold text-gray-900\">Filters</h3>\n            {hasDraftFilters && (\n              <span className=\"ml-2 px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full\">\n                Draft",
      "tokens": 0,
      "firstFile": {
        "name": "components/filters/AdvancedFilterSheet.tsx",
        "start": 111,
        "end": 122,
        "startLoc": {
          "line": 111,
          "column": 3,
          "position": 931
        },
        "endLoc": {
          "line": 122,
          "column": 6,
          "position": 1072
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFiltersRefactored.tsx",
        "start": 28,
        "end": 173,
        "startLoc": {
          "line": 28,
          "column": 3,
          "position": 306
        },
        "endLoc": {
          "line": 173,
          "column": 6,
          "position": 1464
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "&& (\n            <button\n              type=\"button\"\n              onClick={handleClearAll}\n              className=\"text-sm text-jewgo-primary hover:text-jewgo-primary-dark transition-colors font-medium\"\n            >\n              Clear All\n            </button>\n          )}\n        </div>\n      </div>\n\n      <div className=\"space-y-6\">\n        {/* Quick Filters */}\n        <div>\n          <h4 className=\"text-sm font-medium text-gray-700 mb-3",
      "tokens": 0,
      "firstFile": {
        "name": "components/filters/AdvancedFilterSheet.tsx",
        "start": 127,
        "end": 142,
        "startLoc": {
          "line": 127,
          "column": 2,
          "position": 1116
        },
        "endLoc": {
          "line": 142,
          "column": 39,
          "position": 1197
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 178,
        "end": 193,
        "startLoc": {
          "line": 178,
          "column": 2,
          "position": 1495
        },
        "endLoc": {
          "line": 193,
          "column": 57,
          "position": 1576
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ">Distance from My Location</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Distance</span>\n                  <span className=\"text-sm font-medium text-jewgo-primary\">\n                    {draftFilters",
      "tokens": 0,
      "firstFile": {
        "name": "components/filters/AdvancedFilterSheet.tsx",
        "start": 176,
        "end": 181,
        "startLoc": {
          "line": 176,
          "column": 2,
          "position": 1399
        },
        "endLoc": {
          "line": 181,
          "column": 13,
          "position": 1463
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 245,
        "end": 252,
        "startLoc": {
          "line": 245,
          "column": 4,
          "position": 2093
        },
        "endLoc": {
          "line": 252,
          "column": 15,
          "position": 2161
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ") / 50) * 100}%, #E5E7EB 100%)`\n                    }}\n                  />\n                  <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                    <span>1 mile</span>\n                    <span>25 miles</span>\n                    <span>50 miles</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-700 mb-3",
      "tokens": 0,
      "firstFile": {
        "name": "components/filters/AdvancedFilterSheet.tsx",
        "start": 198,
        "end": 211,
        "startLoc": {
          "line": 198,
          "column": 2,
          "position": 1625
        },
        "endLoc": {
          "line": 211,
          "column": 39,
          "position": 1729
        }
      },
      "secondFile": {
        "name": "components/search/AdvancedFilters.tsx",
        "start": 269,
        "end": 282,
        "startLoc": {
          "line": 269,
          "column": 3,
          "position": 2316
        },
        "endLoc": {
          "line": 282,
          "column": 57,
          "position": 2420
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "});\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const handleInputChange",
      "tokens": 0,
      "firstFile": {
        "name": "components/feedback/FeedbackForm.tsx",
        "start": 96,
        "end": 102,
        "startLoc": {
          "line": 96,
          "column": 3,
          "position": 596
        },
        "endLoc": {
          "line": 102,
          "column": 18,
          "position": 679
        }
      },
      "secondFile": {
        "name": "components/restaurant/RestaurantClaimForm.tsx",
        "start": 67,
        "end": 72,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 578
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 660
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "| boolean) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const handleFileChange = (event",
      "tokens": 0,
      "firstFile": {
        "name": "components/feedback/FeedbackForm.tsx",
        "start": 102,
        "end": 111,
        "startLoc": {
          "line": 102,
          "column": 2,
          "position": 701
        },
        "endLoc": {
          "line": 111,
          "column": 6,
          "position": 795
        }
      },
      "secondFile": {
        "name": "components/restaurant/RestaurantClaimForm.tsx",
        "start": 75,
        "end": 84,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 707
        },
        "endLoc": {
          "line": 84,
          "column": 6,
          "position": 801
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": ";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const isValidEmail = (email: string): boolean => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitStatus('idle');\n\n    try {\n      // Create FormData for file uploads",
      "tokens": 0,
      "firstFile": {
        "name": "components/feedback/FeedbackForm.tsx",
        "start": 140,
        "end": 163,
        "startLoc": {
          "line": 140,
          "column": 37,
          "position": 1118
        },
        "endLoc": {
          "line": 163,
          "column": 36,
          "position": 1273
        }
      },
      "secondFile": {
        "name": "components/newsletter/NewsletterSignup.tsx",
        "start": 116,
        "end": 139,
        "startLoc": {
          "line": 116,
          "column": 51,
          "position": 1084
        },
        "endLoc": {
          "line": 139,
          "column": 6,
          "position": 1239
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "const { data: { session } } = await supabaseBrowser.auth.getSession();\n        \n        if (session?.user) {\n          setUser({\n            id: session.user.id,\n            email: session.user.email || \"\",\n            name: session.user.user_metadata?.full_name || session.user.user_metadata?.name,\n            image: session.user.user_metadata?.avatar_url,\n            provider",
      "tokens": 0,
      "firstFile": {
        "name": "components/auth/AuthStatus.tsx",
        "start": 26,
        "end": 34,
        "startLoc": {
          "line": 26,
          "column": 9,
          "position": 206
        },
        "endLoc": {
          "line": 34,
          "column": 9,
          "position": 319
        }
      },
      "secondFile": {
        "name": "components/marketplace/MarketplaceHeader.tsx",
        "start": 30,
        "end": 38,
        "startLoc": {
          "line": 30,
          "column": 9,
          "position": 264
        },
        "endLoc": {
          "line": 38,
          "column": 2,
          "position": 377
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "});\n        } else {\n          setUser(null);\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuth();\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabaseBrowser.auth.onAuthStateChange(\n      async (event, session) => {\n        // Auth state changed: event, session?.user?.email",
      "tokens": 0,
      "firstFile": {
        "name": "components/auth/AuthStatus.tsx",
        "start": 35,
        "end": 52,
        "startLoc": {
          "line": 35,
          "column": 11,
          "position": 325
        },
        "endLoc": {
          "line": 52,
          "column": 51,
          "position": 448
        }
      },
      "secondFile": {
        "name": "components/marketplace/MarketplaceHeader.tsx",
        "start": 38,
        "end": 55,
        "startLoc": {
          "line": 38,
          "column": 11,
          "position": 377
        },
        "endLoc": {
          "line": 55,
          "column": 3,
          "position": 500
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "if (session?.user) {\n          setUser({\n            id: session.user.id,\n            email: session.user.email || \"\",\n            name: session.user.user_metadata?.full_name || session.user.user_metadata?.name,\n            image: session.user.user_metadata?.avatar_url,\n            provider: \"supabase\"\n          });\n        } else {\n          setUser(null);\n        }\n        setLoading",
      "tokens": 0,
      "firstFile": {
        "name": "components/auth/AuthStatus.tsx",
        "start": 54,
        "end": 65,
        "startLoc": {
          "line": 54,
          "column": 9,
          "position": 453
        },
        "endLoc": {
          "line": 65,
          "column": 11,
          "position": 563
        }
      },
      "secondFile": {
        "name": "components/marketplace/MarketplaceHeader.tsx",
        "start": 32,
        "end": 39,
        "startLoc": {
          "line": 32,
          "column": 9,
          "position": 295
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 347
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ");\n      refreshFlags();\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Unknown error');\n      setMessage({ type: 'error', text: error.message });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleToggleFlag",
      "tokens": 0,
      "firstFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 144,
        "end": 154,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 1275
        },
        "endLoc": {
          "line": 154,
          "column": 17,
          "position": 1369
        }
      },
      "secondFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 106,
        "end": 116,
        "startLoc": {
          "line": 106,
          "column": 2,
          "position": 937
        },
        "endLoc": {
          "line": 116,
          "column": 17,
          "position": 1031
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "setSaving(true);\n    setMessage(null);\n\n    try {\n      const backendUrl = process.env['NEXT_PUBLIC_BACKEND_URL'] || 'https://jewgo.onrender.com';\n      const adminToken = process.env['NEXT_PUBLIC_ADMIN_TOKEN'];\n\n      if (!adminToken) {\n        throw new Error('Admin token not available');\n      }\n\n      const response = await fetch(`${backendUrl}/api/feature-flags/${flagName}`, {\n        method: 'POST'",
      "tokens": 0,
      "firstFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 155,
        "end": 167,
        "startLoc": {
          "line": 155,
          "column": 5,
          "position": 1393
        },
        "endLoc": {
          "line": 167,
          "column": 7,
          "position": 1500
        }
      },
      "secondFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 121,
        "end": 133,
        "startLoc": {
          "line": 121,
          "column": 5,
          "position": 1074
        },
        "endLoc": {
          "line": 133,
          "column": 9,
          "position": 1181
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ": NextRequest, { params }: { params: Promise<{ id: string }> }) {\n  try {\n    const { id } = await params;\n    const restaurantId = parseInt(id);\n\n    if (isNaN(restaurantId)) {\n      return NextResponse.json({ message",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/hours/route.ts",
        "start": 4,
        "end": 10,
        "startLoc": {
          "line": 4,
          "column": 9,
          "position": 28
        },
        "endLoc": {
          "line": 10,
          "column": 8,
          "position": 118
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 4,
        "end": 11,
        "startLoc": {
          "line": 4,
          "column": 8,
          "position": 28
        },
        "endLoc": {
          "line": 11,
          "column": 8,
          "position": 120
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "(\n  _request: NextRequest, { params }: { params: Promise<{ id: string }> }) {\n  try {\n    const { id } = await params;\n    const restaurantId = parseInt(id);\n    \n    if (isNaN(restaurantId)) {\n      return NextResponse.json({\n        success: false,\n        message: 'Invalid restaurant ID'\n      }, { status: 400 });\n    }\n\n    // Fetch website data via backend API",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/fetch-website/route.ts",
        "start": 3,
        "end": 16,
        "startLoc": {
          "line": 3,
          "column": 5,
          "position": 24
        },
        "endLoc": {
          "line": 16,
          "column": 38,
          "position": 152
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/hours/route.ts",
        "start": 3,
        "end": 16,
        "startLoc": {
          "line": 3,
          "column": 4,
          "position": 24
        },
        "endLoc": {
          "line": 16,
          "column": 6,
          "position": 152
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `Backend API error: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    // Log the fetched data for debugging",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/fetch-website/route.ts",
        "start": 29,
        "end": 38,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 284
        },
        "endLoc": {
          "line": 38,
          "column": 38,
          "position": 379
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 36,
        "end": 45,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 347
        },
        "endLoc": {
          "line": 45,
          "column": 71,
          "position": 442
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": NextRequest, { params }: { params: Promise<{ id: string }> }) {\n  try {\n    const { id } = await params;\n    const restaurantId = parseInt(id);\n    \n    if (isNaN(restaurantId)) {\n      return NextResponse.json({\n        success: false,\n        message: 'Invalid restaurant ID'\n      }, { status: 400 });\n    }\n\n    // Fetch hours data via backend API",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/fetch-hours/route.ts",
        "start": 4,
        "end": 16,
        "startLoc": {
          "line": 4,
          "column": 10,
          "position": 28
        },
        "endLoc": {
          "line": 16,
          "column": 36,
          "position": 152
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 4,
        "end": 16,
        "startLoc": {
          "line": 4,
          "column": 8,
          "position": 28
        },
        "endLoc": {
          "line": 16,
          "column": 6,
          "position": 152
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "] || process.env[\"ADMIN_TOKEN\"] || ''}`,\n      },\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `Backend API error: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    // Log the fetched data for debugging\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      }\n\n    return NextResponse.json({\n      success: true,\n      message: 'Hours data fetched successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/fetch-hours/route.ts",
        "start": 28,
        "end": 45,
        "startLoc": {
          "line": 28,
          "column": 16,
          "position": 265
        },
        "endLoc": {
          "line": 45,
          "column": 34,
          "position": 425
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/fetch-website/route.ts",
        "start": 28,
        "end": 45,
        "startLoc": {
          "line": 28,
          "column": 16,
          "position": 265
        },
        "endLoc": {
          "line": 45,
          "column": 36,
          "position": 425
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "import { NextRequest, NextResponse } from 'next/server';\n\nexport async function PUT(\n  request: NextRequest, { params }: { params: Promise<{ id: string }> }) {\n  try {\n    const { id } = await params;\n    const restaurantId = parseInt(id);\n    \n    if (isNaN(restaurantId)) {\n      return NextResponse.json({\n        success: false,\n        message: 'Invalid restaurant ID'\n      }, { status: 400 });\n    }\n\n    const body = await request.json();\n    const { status }",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/approve/route.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 174
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 173
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n    \n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      }\n    \n    const response = await fetch(apiUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${process.env[\"ADMIN_TOKEN\"] || ''}`,\n      },\n      body: JSON.stringify({ status: status || 'approved'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/approve/route.ts",
        "start": 21,
        "end": 33,
        "startLoc": {
          "line": 21,
          "column": 10,
          "position": 220
        },
        "endLoc": {
          "line": 33,
          "column": 11,
          "position": 326
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 21,
        "end": 34,
        "startLoc": {
          "line": 21,
          "column": 9,
          "position": 223
        },
        "endLoc": {
          "line": 34,
          "column": 11,
          "position": 331
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "}),\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `Backend API error: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    // Send notification email to restaurant owner (if email is available)\n    if (process.env.NODE_ENV === 'production' && result.data?.owner_email) {\n      try {\n        await fetch('/api/notifications/restaurant-approved'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/approve/route.ts",
        "start": 33,
        "end": 45,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 328
        },
        "endLoc": {
          "line": 45,
          "column": 41,
          "position": 463
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 36,
        "end": 48,
        "startLoc": {
          "line": 36,
          "column": 7,
          "position": 345
        },
        "endLoc": {
          "line": 48,
          "column": 41,
          "position": 480
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ");\n  const [filters, setFilters] = useState<MarketplaceFiltersType>({\n    category: '',\n    subcategory: '',\n    listingType: '',\n    condition: '',\n    minPrice: '',\n    maxPrice: '',\n    city: '',\n    region: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [viewMode",
      "tokens": 0,
      "firstFile": {
        "name": "app/marketplace/category/[id]/page.tsx",
        "start": 24,
        "end": 36,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 284
        },
        "endLoc": {
          "line": 36,
          "column": 9,
          "position": 388
        }
      },
      "secondFile": {
        "name": "components/marketplace/MarketplacePageClient.tsx",
        "start": 278,
        "end": 290,
        "startLoc": {
          "line": 278,
          "column": 5,
          "position": 2322
        },
        "endLoc": {
          "line": 290,
          "column": 5,
          "position": 2426
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ";\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#f4f4f4]\">\n        <Header />\n        <div className=\"flex items-center justify-center min-h-[60vh]\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <p className=\"text-gray-600\">Loading category",
      "tokens": 0,
      "firstFile": {
        "name": "app/marketplace/category/[id]/page.tsx",
        "start": 96,
        "end": 106,
        "startLoc": {
          "line": 96,
          "column": 2,
          "position": 872
        },
        "endLoc": {
          "line": 106,
          "column": 9,
          "position": 958
        }
      },
      "secondFile": {
        "name": "components/marketplace/ProductDetailPage.tsx",
        "start": 95,
        "end": 105,
        "startLoc": {
          "line": 95,
          "column": 6,
          "position": 911
        },
        "endLoc": {
          "line": 105,
          "column": 8,
          "position": 997
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ") {\n    return (\n      <div className=\"min-h-screen bg-[#f4f4f4]\">\n        <Header />\n        <div className=\"flex items-center justify-center min-h-[60vh]\">\n          <div className=\"text-center\">\n            <div className=\"text-6xl mb-4\">❌</div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Category",
      "tokens": 0,
      "firstFile": {
        "name": "app/marketplace/category/[id]/page.tsx",
        "start": 114,
        "end": 121,
        "startLoc": {
          "line": 114,
          "column": 9,
          "position": 999
        },
        "endLoc": {
          "line": 121,
          "column": 9,
          "position": 1072
        }
      },
      "secondFile": {
        "name": "components/marketplace/ProductDetailPage.tsx",
        "start": 113,
        "end": 120,
        "startLoc": {
          "line": 113,
          "column": 8,
          "position": 1038
        },
        "endLoc": {
          "line": 120,
          "column": 8,
          "position": 1111
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "you&apos;re looking for doesn&apos;t exist.</p>\n            <button\n              onClick={() => router.push('/marketplace')}\n              className=\"text-blue-600 hover:text-blue-700 font-medium\"\n            >\n              Back to Marketplace\n            </button>\n          </div>\n        </div>\n        <BottomNavigation />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#f4f4f4]\">\n      <Header />\n      \n      {/* Back Button and Category Header */",
      "tokens": 0,
      "firstFile": {
        "name": "app/marketplace/category/[id]/page.tsx",
        "start": 122,
        "end": 140,
        "startLoc": {
          "line": 122,
          "column": 2,
          "position": 1095
        },
        "endLoc": {
          "line": 140,
          "column": 38,
          "position": 1207
        }
      },
      "secondFile": {
        "name": "components/marketplace/ProductDetailPage.tsx",
        "start": 121,
        "end": 139,
        "startLoc": {
          "line": 121,
          "column": 2,
          "position": 1134
        },
        "endLoc": {
          "line": 139,
          "column": 18,
          "position": 1246
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "const timeToMinutes = (timeStr: string): number => {\n              const time = timeStr.toLowerCase().trim();\n              const match = time.match(/(\\d+):?(\\d*)\\s*(am|pm)/);\n              if (!match || !match[1] || !match[3]) {\n                return -1;\n              }\n              \n              let hours = parseInt(match[1]);\n              const minutes = match[2] ? parseInt(match[2]) : 0;\n              const period = match[3];\n              \n              if (period === 'pm' && hours !== 12) {\n                hours += 12;\n              }\n              if (period === 'am' && hours === 12) {\n                hours = 0;\n              }\n              \n              return hours * 60 + minutes;\n          }\n          \n          const",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/search/route.ts",
        "start": 174,
        "end": 195,
        "startLoc": {
          "line": 174,
          "column": 23,
          "position": 1807
        },
        "endLoc": {
          "line": 195,
          "column": 6,
          "position": 2042
        }
      },
      "secondFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 135,
        "end": 155,
        "startLoc": {
          "line": 135,
          "column": 1,
          "position": 1516
        },
        "endLoc": {
          "line": 155,
          "column": 2,
          "position": 1748
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n        const R = 3959; // miles\n        const dLat = ((lat2 - lat1) * Math.PI) / 180;\n        const dLon = ((lon2 - lon1) * Math.PI) / 180;\n        const a =\n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.cos((lat1 * Math.PI) / 180) *\n            Math.cos((lat2 * Math.PI) / 180) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        return R * c;\n      };",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/search/route.ts",
        "start": 213,
        "end": 224,
        "startLoc": {
          "line": 213,
          "column": 2,
          "position": 2256
        },
        "endLoc": {
          "line": 224,
          "column": 2,
          "position": 2478
        }
      },
      "secondFile": {
        "name": "lib/workers/mendel-worker.ts",
        "start": 57,
        "end": 68,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 414
        },
        "endLoc": {
          "line": 68,
          "column": 9,
          "position": 635
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".has('open_now')) {\n      const now = new Date();\n      const currentDay = now.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const currentTime = now.getHours() * 60 + now.getMinutes();\n\n      filteredRestaurants",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/filtered/route.ts",
        "start": 92,
        "end": 97,
        "startLoc": {
          "line": 92,
          "column": 14,
          "position": 975
        },
        "endLoc": {
          "line": 97,
          "column": 20,
          "position": 1055
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/search/route.ts",
        "start": 152,
        "end": 157,
        "startLoc": {
          "line": 152,
          "column": 12,
          "position": 1548
        },
        "endLoc": {
          "line": 157,
          "column": 9,
          "position": 1629
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "const hours = typeof restaurant.hours_of_operation === 'string'\n            ? JSON.parse(restaurant.hours_of_operation)\n            : restaurant.hours_of_operation;\n\n          if (!Array.isArray(hours)) {\n            return false;\n          }\n\n          const todayHours = hours.find((h: any) => h.day === currentDay);\n          if (!todayHours) {\n            return false;\n          }\n\n          const openTime = timeToMinutes(todayHours.open);\n          const closeTime = timeToMinutes(todayHours.close);\n\n          if (openTime === -1 || closeTime === -1) {\n            return false;\n          }\n\n          // Handle past midnight\n          if (closeTime < openTime) {\n            return currentTime >= openTime || currentTime <= closeTime;\n          } else {\n            return currentTime >= openTime && currentTime <= closeTime;\n          }\n        } catch {\n          return false;\n        }\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/filtered/route.ts",
        "start": 103,
        "end": 132,
        "startLoc": {
          "line": 103,
          "column": 11,
          "position": 1102
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 1358
        }
      },
      "secondFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 102,
        "end": 132,
        "startLoc": {
          "line": 102,
          "column": 7,
          "position": 1248
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 1510
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "function timeToMinutes(timeStr: string): number {\n  const time = timeStr.toLowerCase().trim();\n  const match = time.match(/(\\d+):?(\\d*)\\s*(am|pm)/);\n  \n  if (!match || !match[1] || !match[3]) {\n    return -1;\n  }\n  \n  let hours = parseInt(match[1]);\n  const minutes = match[2] ? parseInt(match[2]) : 0;\n  const period = match[3];\n  \n  if (period === 'pm' && hours !== 12) {\n    hours += 12;\n  }\n  if (period === 'am' && hours === 12) {\n    hours = 0;\n  }\n  \n  return hours * 60 + minutes;\n}\n\n// Helper function to calculate distance between two points",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/filtered/route.ts",
        "start": 172,
        "end": 194,
        "startLoc": {
          "line": 172,
          "column": 1,
          "position": 1703
        },
        "endLoc": {
          "line": 194,
          "column": 60,
          "position": 1932
        }
      },
      "secondFile": {
        "name": "lib/workers/mendel-worker.ts",
        "start": 68,
        "end": 155,
        "startLoc": {
          "line": 68,
          "column": 1,
          "position": 635
        },
        "endLoc": {
          "line": 155,
          "column": 2,
          "position": 1748
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\n            Math.sin(dLon/2) * Math.sin(dLon/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/filtered/route.ts",
        "start": 201,
        "end": 207,
        "startLoc": {
          "line": 201,
          "column": 3,
          "position": 2006
        },
        "endLoc": {
          "line": 207,
          "column": 7,
          "position": 2182
        }
      },
      "secondFile": {
        "name": "lib/utils/distance.ts",
        "start": 17,
        "end": 24,
        "startLoc": {
          "line": 17,
          "column": 3,
          "position": 116
        },
        "endLoc": {
          "line": 24,
          "column": 6,
          "position": 295
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "export async function POST(request: NextRequest) {\n  try {\n    // Parse the request body to get the limit\n    const body = await request.json().catch(() => ({}));\n    const limit = body.limit || 10;\n\n    // Validate limit\n    if (limit < 1 || limit > 100) {\n      return NextResponse.json(\n        { error: 'Limit must be between 1 and 100' },\n        { status: 400 }\n      );\n    }\n\n    // Get backend URL from environment\n    const backendUrl = process.env[\"NEXT_PUBLIC_BACKEND_URL\"] || 'https://jewgo.onrender.com';\n    \n    // Forward the request to the backend\n    const backendResponse = await fetch(\n      `${backendUrl}/api/restaurants/fetch-missing-hours`",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/fetch-missing-hours/route.ts",
        "start": 12,
        "end": 31,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 31,
          "column": 38,
          "position": 194
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/fetch-missing-websites/route.ts",
        "start": 12,
        "end": 31,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 31,
          "column": 41,
          "position": 194
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ limit }),\n      }\n    );\n\n    const data = await backendResponse.json();\n\n    // Return the same status and data from the backend\n    return NextResponse.json(data, { status: backendResponse.status });\n\n  } catch {\n    // // console.error('Error in fetch-missing-hours API route:', error);",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/fetch-missing-hours/route.ts",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 38,
          "position": 195
        },
        "endLoc": {
          "line": 47,
          "column": 71,
          "position": 300
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/fetch-missing-websites/route.ts",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 41,
          "position": 195
        },
        "endLoc": {
          "line": 47,
          "column": 74,
          "position": 300
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "}`,\n      address: '123 Main St',\n      city: 'New York',\n      state: 'NY',\n      zip_code: '10001',\n      phone_number: '(555) 123-4567',\n      website: 'https://example.com',\n      certificate_link: 'https://example.com/cert',\n      image_url: '/images/default-restaurant.webp',\n      kosher_category: 'dairy',\n      certifying_agency: 'ORB',\n      listing_type: 'restaurant',\n      latitude: 40.7128,\n      longitude: -74.0060,\n      status",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/route.ts",
        "start": 164,
        "end": 178,
        "startLoc": {
          "line": 164,
          "column": 3,
          "position": 1280
        },
        "endLoc": {
          "line": 178,
          "column": 7,
          "position": 1377
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/route.ts",
        "start": 65,
        "end": 79,
        "startLoc": {
          "line": 65,
          "column": 13,
          "position": 539
        },
        "endLoc": {
          "line": 79,
          "column": 6,
          "position": 636
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "export async function PUT(\n  request: NextRequest, \n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { id } = await params;\n    const restaurantId = parseInt(id);\n    \n    if (isNaN(restaurantId)) {\n      return NextResponse.json({\n        success: false,\n        message: 'Invalid restaurant ID'\n      }, { status: 400 });\n    }\n\n    const body = await request.json();\n\n    // Validate required fields",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/route.ts",
        "start": 203,
        "end": 220,
        "startLoc": {
          "line": 203,
          "column": 1,
          "position": 1577
        },
        "endLoc": {
          "line": 220,
          "column": 28,
          "position": 1732
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 3,
        "end": 17,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 17,
          "column": 6,
          "position": 168
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "(\n  request: NextRequest, \n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { id } = await params;\n    const restaurantId = parseInt(id);\n    \n    if (isNaN(restaurantId)) {\n      return NextResponse.json({\n        success: false,\n        message: 'Invalid restaurant ID'\n      }, { status: 400 });\n    }\n\n    // Delete restaurant via backend API",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/route.ts",
        "start": 273,
        "end": 288,
        "startLoc": {
          "line": 273,
          "column": 7,
          "position": 2198
        },
        "endLoc": {
          "line": 288,
          "column": 37,
          "position": 2329
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 3,
        "end": 16,
        "startLoc": {
          "line": 3,
          "column": 4,
          "position": 24
        },
        "endLoc": {
          "line": 16,
          "column": 6,
          "position": 152
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      return NextResponse.json({\n        success: false,\n        message: errorData.message || `Backend API error: ${response.status}`\n      }, { status: response.status });\n    }\n\n    const result = await response.json();\n\n    return NextResponse.json({\n      success: true,\n      message: 'Restaurant deleted successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/route.ts",
        "start": 297,
        "end": 312,
        "startLoc": {
          "line": 297,
          "column": 2,
          "position": 2427
        },
        "endLoc": {
          "line": 312,
          "column": 34,
          "position": 2568
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/route.ts",
        "start": 241,
        "end": 256,
        "startLoc": {
          "line": 241,
          "column": 2,
          "position": 1934
        },
        "endLoc": {
          "line": 256,
          "column": 34,
          "position": 2075
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "(\n  request: NextRequest, \n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { id } = await params;\n    const restaurantId = parseInt(id);\n    \n    if (isNaN(restaurantId)) {\n      return NextResponse.json({\n        success: false,\n        message: 'Invalid restaurant ID'\n      }, { status: 400 });\n    }\n\n    const body = await request.json();\n\n    // Validate that at least one field is provided",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/route.ts",
        "start": 328,
        "end": 345,
        "startLoc": {
          "line": 328,
          "column": 6,
          "position": 2686
        },
        "endLoc": {
          "line": 345,
          "column": 48,
          "position": 2834
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 3,
        "end": 17,
        "startLoc": {
          "line": 3,
          "column": 4,
          "position": 24
        },
        "endLoc": {
          "line": 17,
          "column": 6,
          "position": 168
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${process.env[\"ADMIN_TOKEN\"] || ''}`,\n      },\n      body: JSON.stringify({\n        ...body,\n        updated_at: new Date().toISOString()\n      }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      return NextResponse.json({\n        success: false,\n        message: errorData.message || `Backend API error: ${response.status}`\n      }, { status: response.status });\n    }\n\n    const result = await response.json();\n\n    return NextResponse.json({\n      success: true,\n      message: 'Restaurant partially updated successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/[id]/route.ts",
        "start": 358,
        "end": 381,
        "startLoc": {
          "line": 358,
          "column": 8,
          "position": 2959
        },
        "endLoc": {
          "line": 381,
          "column": 44,
          "position": 3171
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/route.ts",
        "start": 233,
        "end": 256,
        "startLoc": {
          "line": 233,
          "column": 6,
          "position": 1863
        },
        "endLoc": {
          "line": 256,
          "column": 34,
          "position": 2075
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": NextRequest) {\n  try {\n    // Get the current Supabase user\n    const supabase = await createSupabaseServerClient();\n    const { data: { user }, error: authError } = await supabase.auth.getUser();\n\n    if (authError || !user) {\n      return NextResponse.json(\n        { error: \"Unauthorized\" },\n        { status: 401 }\n      );\n    }\n\n    // Import the function here to avoid circular dependencies",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/auth.disabled/sync-user/route.ts",
        "start": 56,
        "end": 69,
        "startLoc": {
          "line": 56,
          "column": 9,
          "position": 448
        },
        "endLoc": {
          "line": 69,
          "column": 59,
          "position": 565
        }
      },
      "secondFile": {
        "name": "app/api/auth.disabled/sync-user/route.ts",
        "start": 6,
        "end": 19,
        "startLoc": {
          "line": 6,
          "column": 8,
          "position": 53
        },
        "endLoc": {
          "line": 19,
          "column": 24,
          "position": 170
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ">\n                <svg className=\"w-3.5 h-3.5 sm:w-4 sm:h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\n                </svg>\n                <span>Call</span>\n              </button",
      "tokens": 0,
      "firstFile": {
        "name": "app/restaurant/[id]/page.tsx",
        "start": 620,
        "end": 625,
        "startLoc": {
          "line": 620,
          "column": 2,
          "position": 5100
        },
        "endLoc": {
          "line": 625,
          "column": 7,
          "position": 5179
        }
      },
      "secondFile": {
        "name": "app/restaurant/[id]/page.tsx",
        "start": 602,
        "end": 618,
        "startLoc": {
          "line": 602,
          "column": 13,
          "position": 4887
        },
        "endLoc": {
          "line": 618,
          "column": 2,
          "position": 5081
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": "</li>\n                </ul>\n              </div>\n              \n              <div className=\"flex justify-center space-x-4\">\n                <Link\n                  href=\"/marketplace\"\n                  className=\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700 transition-colors\"\n                >\n                  Back to Marketplace\n                </Link>\n                <Link\n                  href=\"/\"\n                  className=\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700 transition-colors\"\n                >\n                  Go Home\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "app/marketplace/search/page.tsx",
        "start": 47,
        "end": 71,
        "startLoc": {
          "line": 47,
          "column": 6,
          "position": 523
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 642
        }
      },
      "secondFile": {
        "name": "app/marketplace/sell/page.tsx",
        "start": 22,
        "end": 46,
        "startLoc": {
          "line": 22,
          "column": 7,
          "position": 283
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 402
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"bg-white shadow rounded-lg p-6\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Marketplace",
      "tokens": 0,
      "firstFile": {
        "name": "app/marketplace/messages/page.tsx",
        "start": 3,
        "end": 9,
        "startLoc": {
          "line": 3,
          "column": 24,
          "position": 17
        },
        "endLoc": {
          "line": 9,
          "column": 12,
          "position": 81
        }
      },
      "secondFile": {
        "name": "app/marketplace/sell/page.tsx",
        "start": 3,
        "end": 9,
        "startLoc": {
          "line": 3,
          "column": 20,
          "position": 17
        },
        "endLoc": {
          "line": 9,
          "column": 5,
          "position": 81
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": "</li>\n                </ul>\n              </div>\n              \n              <div className=\"flex justify-center space-x-4\">\n                <Link\n                  href=\"/marketplace\"\n                  className=\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700 transition-colors\"\n                >\n                  Back to Marketplace\n                </Link>\n                <Link\n                  href=\"/\"\n                  className=\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700 transition-colors\"\n                >\n                  Go Home\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "app/marketplace/messages/page.tsx",
        "start": 22,
        "end": 46,
        "startLoc": {
          "line": 22,
          "column": 9,
          "position": 285
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 404
        }
      },
      "secondFile": {
        "name": "app/marketplace/sell/page.tsx",
        "start": 22,
        "end": 46,
        "startLoc": {
          "line": 22,
          "column": 7,
          "position": 283
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 402
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "= async (e: FormEvent) => {\n    e.preventDefault();\n    setPending(true);\n    setError(null);\n    \n    try {\n      // First, check if user already exists by attempting to sign in with a dummy password\n      const { error: signInError } = await supabaseBrowser.auth.signInWithPassword({\n        email,\n        password: \"dummy-password-for-check\",\n      });\n      \n      // If we get \"Invalid login credentials\", the user exists but password is wrong\n      if (signInError && signInError.message.includes(\"Invalid login credentials\")) {\n        setError(\"An account with this email already exists. Please use email/password sign-in instead.\"",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/supabase-signin/page.tsx",
        "start": 60,
        "end": 74,
        "startLoc": {
          "line": 60,
          "column": 2,
          "position": 480
        },
        "endLoc": {
          "line": 74,
          "column": 88,
          "position": 595
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signup/page.tsx",
        "start": 15,
        "end": 29,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 168
        },
        "endLoc": {
          "line": 29,
          "column": 69,
          "position": 283
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "(Supabase)\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Testing Supabase authentication\n          </p>\n        </div>\n        \n        <form onSubmit={onEmailSignIn} className=\"mt-8 space-y-6\">\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/supabase-signin/page.tsx",
        "start": 142,
        "end": 152,
        "startLoc": {
          "line": 142,
          "column": 2,
          "position": 1065
        },
        "endLoc": {
          "line": 152,
          "column": 6,
          "position": 1144
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signup/page.tsx",
        "start": 113,
        "end": 123,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 886
        },
        "endLoc": {
          "line": 123,
          "column": 5,
          "position": 965
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": ">\n            <div>\n              <label htmlFor=\"email\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/supabase-signin/page.tsx",
        "start": 150,
        "end": 176,
        "startLoc": {
          "line": 150,
          "column": 2,
          "position": 1130
        },
        "endLoc": {
          "line": 176,
          "column": 17,
          "position": 1295
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signup/page.tsx",
        "start": 137,
        "end": 164,
        "startLoc": {
          "line": 137,
          "column": 4,
          "position": 1057
        },
        "endLoc": {
          "line": 164,
          "column": 13,
          "position": 1224
        }
      }
    },
    {
      "format": "tsx",
      "lines": 40,
      "fragment": "}\n            </button>\n          </div>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-gray-50 text-gray-500\">Or continue with</span>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <button\n                type=\"button\"\n                onClick={onGoogle}\n                disabled={pending}\n                className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\n              >\n                <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                  />\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                  />\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                  />\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                  />\n                </svg>\n                <span className=\"ml-2\">Sign in",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/supabase-signin/page.tsx",
        "start": 205,
        "end": 244,
        "startLoc": {
          "line": 205,
          "column": 18,
          "position": 1475
        },
        "endLoc": {
          "line": 244,
          "column": 3,
          "position": 1726
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signup/page.tsx",
        "start": 196,
        "end": 235,
        "startLoc": {
          "line": 196,
          "column": 17,
          "position": 1427
        },
        "endLoc": {
          "line": 235,
          "column": 3,
          "position": 1678
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "setError(`Unexpected error: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    }\n    \n    setPending(false);\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Create",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/signup/page.tsx",
        "start": 82,
        "end": 93,
        "startLoc": {
          "line": 82,
          "column": 7,
          "position": 645
        },
        "endLoc": {
          "line": 93,
          "column": 7,
          "position": 727
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signin/page.tsx",
        "start": 131,
        "end": 142,
        "startLoc": {
          "line": 131,
          "column": 7,
          "position": 975
        },
        "endLoc": {
          "line": 142,
          "column": 5,
          "position": 1057
        }
      }
    },
    {
      "format": "tsx",
      "lines": 40,
      "fragment": "</p>\n        </div>\n        \n        <form onSubmit={onEmailSignUp} className=\"mt-8 space-y-6\">\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                className=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n\n            <",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/signup/page.tsx",
        "start": 97,
        "end": 136,
        "startLoc": {
          "line": 97,
          "column": 11,
          "position": 769
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1022
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signin/page.tsx",
        "start": 146,
        "end": 172,
        "startLoc": {
          "line": 146,
          "column": 11,
          "position": 1093
        },
        "endLoc": {
          "line": 172,
          "column": 3,
          "position": 1274
        }
      }
    },
    {
      "format": "tsx",
      "lines": 55,
      "fragment": ">\n            <button\n              type=\"submit\"\n              disabled={pending}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n            >\n              {pending ? \"Creating account...\" : \"Create Account\"}\n            </button>\n          </div>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-gray-50 text-gray-500\">Or continue with</span>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <button\n                type=\"button\"\n                onClick={onGoogleSignUp}\n                disabled={pending}\n                className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\n              >\n                <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                  />\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                  />\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                  />\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                  />\n                </svg>\n                <span className=\"ml-2\">Sign up with Google</span>\n              </button>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"text-center\">\n          <p className=\"text-sm text-gray-600\">\n            Already have an account?{' '}\n            <Link",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/signup/page.tsx",
        "start": 162,
        "end": 216,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1202
        },
        "endLoc": {
          "line": 216,
          "column": 5,
          "position": 1557
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signup/page.tsx",
        "start": 190,
        "end": 244,
        "startLoc": {
          "line": 190,
          "column": 4,
          "position": 1390
        },
        "endLoc": {
          "line": 244,
          "column": 2,
          "position": 1745
        }
      }
    },
    {
      "format": "javascript",
      "lines": 67,
      "fragment": "={onEmailSignIn} className=\"mt-8 space-y-6\">\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                className=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"text-red-600 text-sm text-center bg-red-50 border border-red-200 rounded-md p-3\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"space-y-3\">\n            <button\n              type=\"submit\"\n              disabled={pending}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n            >\n              {pending ? \"Signing in...\" : \"Sign In\"}\n            </button>\n          </div>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-gray-50 text-gray-500\">Or continue with</span>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <button\n                type=\"button\"\n                onClick={onGoogleSignIn",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/signin/page.tsx",
        "start": 112,
        "end": 178,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 975
        },
        "endLoc": {
          "line": 178,
          "column": 15,
          "position": 1424
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signin/page.tsx",
        "start": 149,
        "end": 201,
        "startLoc": {
          "line": 149,
          "column": 9,
          "position": 1109
        },
        "endLoc": {
          "line": 201,
          "column": 12,
          "position": 1447
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ");\n\n  const onEmailSignIn = async (e: FormEvent) => {\n    e.preventDefault();\n    setPending(true);\n    setError(null);\n    \n    try {\n      const { data, error } = await supabaseBrowser.auth.signInWithPassword({\n        email,\n        password,\n      });\n      \n      if (error) {\n        setError(error.message);\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/signin/page.tsx",
        "start": 42,
        "end": 57,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 450
        },
        "endLoc": {
          "line": 57,
          "column": 7,
          "position": 561
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signin/page.tsx",
        "start": 11,
        "end": 26,
        "startLoc": {
          "line": 11,
          "column": 5,
          "position": 123
        },
        "endLoc": {
          "line": 26,
          "column": 11,
          "position": 234
        }
      }
    },
    {
      "format": "tsx",
      "lines": 39,
      "fragment": "<form onSubmit={onEmailSignIn} className=\"mt-8 space-y-6\">\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                className=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"text-red-600 text-sm text-center bg-red-50 border border-red-200 rounded-md p-3",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/signin/page.tsx",
        "start": 112,
        "end": 150,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 971
        },
        "endLoc": {
          "line": 150,
          "column": 80,
          "position": 1231
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signin/page.tsx",
        "start": 149,
        "end": 187,
        "startLoc": {
          "line": 149,
          "column": 9,
          "position": 1105
        },
        "endLoc": {
          "line": 187,
          "column": 33,
          "position": 1365
        }
      }
    },
    {
      "format": "tsx",
      "lines": 49,
      "fragment": "}\n            </button>\n          </div>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-gray-50 text-gray-500\">Or continue with</span>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <button\n                type=\"button\"\n                onClick={onGoogleSignIn}\n                disabled={pending}\n                className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\n              >\n                <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                  />\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                  />\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                  />\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                  />\n                </svg>\n                <span className=\"ml-2\">Sign in with Google</span>\n              </button>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"text-center\">\n          <p className=\"text-sm text-gray-600\">\n            Don&apos;t have an account?{' '}\n            <Link",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/signin/page.tsx",
        "start": 161,
        "end": 209,
        "startLoc": {
          "line": 161,
          "column": 10,
          "position": 1296
        },
        "endLoc": {
          "line": 209,
          "column": 5,
          "position": 1616
        }
      },
      "secondFile": {
        "name": "app/auth/supabase-signup/page.tsx",
        "start": 196,
        "end": 253,
        "startLoc": {
          "line": 196,
          "column": 17,
          "position": 1427
        },
        "endLoc": {
          "line": 253,
          "column": 2,
          "position": 1795
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</Link>\n          </p>\n          <p className=\"text-sm text-gray-500 mt-2\">\n            <Link href=\"/\" className=\"font-medium text-gray-600 hover:text-gray-500\">\n              ← Back to home\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/signin/page.tsx",
        "start": 211,
        "end": 222,
        "startLoc": {
          "line": 211,
          "column": 13,
          "position": 1637
        },
        "endLoc": {
          "line": 222,
          "column": 2,
          "position": 1712
        }
      },
      "secondFile": {
        "name": "app/auth/signup/page.tsx",
        "start": 218,
        "end": 229,
        "startLoc": {
          "line": 218,
          "column": 13,
          "position": 1578
        },
        "endLoc": {
          "line": 229,
          "column": 2,
          "position": 1653
        }
      }
    },
    {
      "format": "javascript",
      "lines": 70,
      "fragment": "={2}\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n              />\n            </svg>\n          </div>\n        </div>\n        \n        <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n          Authentication Error\n        </h2>\n        \n        <p className=\"text-gray-600 mb-6\">\n          {getErrorMessage()}\n        </p>\n\n        {error && (\n          <div className=\"mb-6 p-3 bg-gray-100 rounded-md\">\n            <p className=\"text-xs text-gray-600\">\n              <strong>Error Code:</strong> {error}\n            </p>\n            {description && (\n              <p className=\"text-xs text-gray-600 mt-1\">\n                <strong>Details:</strong> {description}\n              </p>\n            )}\n          </div>\n        )}\n        \n        <div className=\"space-y-4\">\n          <Link\n            href=\"/auth/supabase-signin\"\n            className=\"w-full inline-flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Try Signing In Again\n          </Link>\n          \n          <Link\n            href=\"/auth/supabase-signup\"\n            className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Create New Account\n          </Link>\n          \n          <Link\n            href=\"/\"\n            className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Go to Home Page\n          </Link>\n        </div>\n        \n        <div className=\"mt-8 pt-6 border-t border-gray-200\">\n          <p className=\"text-xs text-gray-500\">\n            If you continue to have issues, please contact support.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function AuthCodeErrorPage() {\n  return (\n    <Suspense fallback={\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Loading...</h2>\n        </div>\n      </div>\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth/auth-code-error/page.tsx",
        "start": 54,
        "end": 123,
        "startLoc": {
          "line": 54,
          "column": 12,
          "position": 384
        },
        "endLoc": {
          "line": 123,
          "column": 2,
          "position": 819
        }
      },
      "secondFile": {
        "name": "app/auth/oauth-success/page.tsx",
        "start": 142,
        "end": 175,
        "startLoc": {
          "line": 142,
          "column": 12,
          "position": 1132
        },
        "endLoc": {
          "line": 175,
          "column": 2,
          "position": 1351
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "const response = await fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Backend API error: ${response.status} ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    \n    // First sanitize all restaurant data, then filter out restaurants without images",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants-with-images/route.ts",
        "start": 97,
        "end": 110,
        "startLoc": {
          "line": 97,
          "column": 5,
          "position": 874
        },
        "endLoc": {
          "line": 110,
          "column": 82,
          "position": 979
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/search/route.ts",
        "start": 97,
        "end": 110,
        "startLoc": {
          "line": 97,
          "column": 5,
          "position": 911
        },
        "endLoc": {
          "line": 110,
          "column": 67,
          "position": 1015
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `Backend API error: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    // Send notification email to admin (optional)",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 109,
        "end": 118,
        "startLoc": {
          "line": 109,
          "column": 15,
          "position": 1218
        },
        "endLoc": {
          "line": 118,
          "column": 47,
          "position": 1314
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/[id]/reject/route.ts",
        "start": 36,
        "end": 45,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 346
        },
        "endLoc": {
          "line": 45,
          "column": 71,
          "position": 442
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "const { searchParams } = request.nextUrl;\n    \n    // Pagination\n    const limit = parseInt(searchParams.get('limit') || '50');\n    const offset = parseInt(searchParams.get('offset') || '0');\n    \n    // Filter parameters\n    const search = searchParams.get('search');\n    const city = searchParams.get('city');\n    const state = searchParams.get('state');\n    const certifying_agency = searchParams.get('certifying_agency');\n    const kosher_category = searchParams.get('kosher_category');\n    const is_cholov_yisroel = searchParams.get('is_cholov_yisroel');\n    const cholov_stam",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 166,
        "end": 179,
        "startLoc": {
          "line": 166,
          "column": 5,
          "position": 1698
        },
        "endLoc": {
          "line": 179,
          "column": 12,
          "position": 1860
        }
      },
      "secondFile": {
        "name": "app/api/restaurants-with-images/route.ts",
        "start": 10,
        "end": 23,
        "startLoc": {
          "line": 10,
          "column": 5,
          "position": 66
        },
        "endLoc": {
          "line": 23,
          "column": 13,
          "position": 228
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": ");\n    const price_range = searchParams.get('price_range');\n    const min_rating = searchParams.get('min_rating');\n    const has_reviews = searchParams.get('has_reviews');\n    const open_now = searchParams.get('open_now');\n    const status = searchParams.get('status');\n    \n    // Location-based filtering\n    const lat = searchParams.get('lat');\n    const lng = searchParams.get('lng');\n    const radius = searchParams.get('radius');\n    \n    // Build query parameters for backend API\n    const queryParams = new URLSearchParams();\n    if (limit) {\n      queryParams.append('limit', limit.toString());\n    }\n    if (offset) {\n      queryParams.append('offset', offset.toString());\n    }\n    if (search) {\n      queryParams.append('query', search);\n    }\n    if (city) {\n      queryParams.append('city', city);\n    }\n    if (state) {\n      queryParams.append('state', state);\n    }\n    if (certifying_agency) {\n      queryParams.append('certifying_agency', certifying_agency);\n    }\n    // Map kosher_category to kosher_type for backend API compatibility\n    if (kosher_category) {\n      queryParams.append('kosher_type', kosher_category);\n    }\n    if (is_cholov_yisroel) {\n      queryParams.append('is_cholov_yisroel', is_cholov_yisroel);\n    }\n    if (cholov_stam",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 181,
        "end": 220,
        "startLoc": {
          "line": 181,
          "column": 17,
          "position": 1899
        },
        "endLoc": {
          "line": 220,
          "column": 12,
          "position": 2253
        }
      },
      "secondFile": {
        "name": "app/api/restaurants-with-images/route.ts",
        "start": 23,
        "end": 62,
        "startLoc": {
          "line": 23,
          "column": 15,
          "position": 237
        },
        "endLoc": {
          "line": 62,
          "column": 13,
          "position": 591
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ");\n    }\n    if (price_range) {\n      queryParams.append('price_range', price_range);\n    }\n    if (min_rating) {\n      queryParams.append('min_rating', min_rating);\n    }\n    if (has_reviews) {\n      queryParams.append('has_reviews', has_reviews);\n    }\n    if (open_now) {\n      queryParams.append('open_now', open_now);\n    }\n    if (status) {\n      queryParams.append('status', status);\n    }\n    if (lat) {\n      queryParams.append('lat', lat);\n    }\n    if (lng) {\n      queryParams.append('lng', lng);\n    }\n    if (radius) {\n      queryParams.append('radius', radius);\n    }\n    \n    // Fetch from backend with pagination aggregation to bypass backend's default 50 limit",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 229,
        "end": 256,
        "startLoc": {
          "line": 229,
          "column": 2,
          "position": 2341
        },
        "endLoc": {
          "line": 256,
          "column": 87,
          "position": 2542
        }
      },
      "secondFile": {
        "name": "app/api/restaurants-with-images/route.ts",
        "start": 63,
        "end": 90,
        "startLoc": {
          "line": 63,
          "column": 13,
          "position": 605
        },
        "endLoc": {
          "line": 90,
          "column": 48,
          "position": 806
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "const calculateDistanceMiles = (lat1: number, lon1: number, lat2: number, lon2: number) => {\n      const R = 3959; // miles\n      const dLat = ((lat2 - lat1) * Math.PI) / 180;\n      const dLon = ((lon2 - lon1) * Math.PI) / 180;\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos((lat1 * Math.PI) / 180) *\n          Math.cos((lat2 * Math.PI) / 180) *\n          Math.sin(dLon / 2) * Math.sin(dLon / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      return R * c;\n    };\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 308,
        "end": 320,
        "startLoc": {
          "line": 308,
          "column": 5,
          "position": 3202
        },
        "endLoc": {
          "line": 320,
          "column": 6,
          "position": 3460
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/search/route.ts",
        "start": 213,
        "end": 226,
        "startLoc": {
          "line": 213,
          "column": 7,
          "position": 2223
        },
        "endLoc": {
          "line": 226,
          "column": 9,
          "position": 2482
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "const timeToMinutes = (timeStr: string): number => {\n      const time = timeStr.toLowerCase().trim();\n      const match = time.match(/(\\d+):?(\\d*)\\s*(am|pm)/);\n      if (!match || !match[1] || !match[3]) {return -1;}\n      let hours = parseInt(match[1]);\n      const minutes = match[2] ? parseInt(match[2]) : 0;\n      const period = match[3];\n      if (period === 'pm' && hours !== 12) {hours += 12;}\n      if (period === 'am' && hours === 12) {hours = 0;}\n      return hours * 60 + minutes;\n    }\n\n    let",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 320,
        "end": 332,
        "startLoc": {
          "line": 320,
          "column": 5,
          "position": 3460
        },
        "endLoc": {
          "line": 332,
          "column": 4,
          "position": 3676
        }
      },
      "secondFile": {
        "name": "lib/hooks/useOptimizedFilters.ts",
        "start": 135,
        "end": 155,
        "startLoc": {
          "line": 135,
          "column": 1,
          "position": 1516
        },
        "endLoc": {
          "line": 155,
          "column": 2,
          "position": 1748
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n      const now = new Date();\n      const currentDay = now.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const currentTime = now.getHours() * 60 + now.getMinutes();\n      filtered = filtered.filter((r: any) => {\n        const raw = r.hours_of_operation;\n        if (!raw) {return false;}\n        try {\n          const hours = typeof raw === 'string' ? JSON.parse(raw) : raw;\n          if (!Array.isArray(hours)) {return false;}\n          const today = hours.find((h: any) => h.day === currentDay);\n          if (!today || !today.open || !today.close) {return false;}\n          const openM",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 384,
        "end": 396,
        "startLoc": {
          "line": 384,
          "column": 9,
          "position": 4309
        },
        "endLoc": {
          "line": 396,
          "column": 6,
          "position": 4545
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/search/route.ts",
        "start": 152,
        "end": 174,
        "startLoc": {
          "line": 152,
          "column": 2,
          "position": 1553
        },
        "endLoc": {
          "line": 174,
          "column": 14,
          "position": 1809
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ";}\n          const openM = timeToMinutes(today.open);\n          const closeM = timeToMinutes(today.close);\n          if (openM === -1 || closeM === -1) {return false;}\n          return closeM < openM ? (currentTime >= openM || currentTime <= closeM) : (currentTime >= openM && currentTime <= closeM);\n        } catch {",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 395,
        "end": 400,
        "startLoc": {
          "line": 395,
          "column": 6,
          "position": 4539
        },
        "endLoc": {
          "line": 400,
          "column": 2,
          "position": 4651
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/search/route.ts",
        "start": 192,
        "end": 205,
        "startLoc": {
          "line": 192,
          "column": 8,
          "position": 2034
        },
        "endLoc": {
          "line": 205,
          "column": 2,
          "position": 2162
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "// Return mock data as fallback when backend is unavailable\n    const mockRestaurants = [\n      {\n        id: 1,\n        name: \"Sample Kosher Restaurant\",\n        address: \"123 Kosher Lane, Miami, FL 33139\",\n        phone: \"(305) 555-0101\",\n        certifying_agency: \"ORB\",\n        kosher_category: \"meat\",\n        listing_type: \"restaurant\",\n        image_url: \"/images/default-restaurant.webp\",\n        rating: 4.5,\n        description: \"Authentic kosher dining experience\",\n        website: \"https://example.com\",\n        hours_open: \"Sunday-Thursday: 11:00 AM - 9:00 PM, Friday: 11:00 AM - 2:00 PM, Closed Saturday\",",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 435,
        "end": 449,
        "startLoc": {
          "line": 435,
          "column": 5,
          "position": 5047
        },
        "endLoc": {
          "line": 449,
          "column": 2,
          "position": 5143
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/search/route.ts",
        "start": 262,
        "end": 277,
        "startLoc": {
          "line": 262,
          "column": 5,
          "position": 2864
        },
        "endLoc": {
          "line": 277,
          "column": 2,
          "position": 2962
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "},\n      {\n        id: 2,\n        name: \"Kosher Dairy Cafe\",\n        address: \"456 Dairy Street, Miami Beach, FL 33139\",\n        phone: \"(305) 555-0102\",\n        certifying_agency: \"Kosher Miami\",\n        kosher_category: \"dairy\",\n        listing_type: \"restaurant\",\n        image_url: \"/images/default-restaurant.webp\",\n        rating: 4.2,\n        description: \"Fresh dairy kosher meals\",\n        website: \"https://example.com\",\n        hours_open: \"Sunday-Thursday: 8:00 AM - 8:00 PM, Friday: 8:00 AM - 2:00 PM, Closed Saturday\",",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/restaurants/route.ts",
        "start": 452,
        "end": 465,
        "startLoc": {
          "line": 452,
          "column": 7,
          "position": 5160
        },
        "endLoc": {
          "line": 465,
          "column": 2,
          "position": 5248
        }
      },
      "secondFile": {
        "name": "app/api/restaurants/search/route.ts",
        "start": 277,
        "end": 291,
        "startLoc": {
          "line": 277,
          "column": 7,
          "position": 2962
        },
        "endLoc": {
          "line": 291,
          "column": 2,
          "position": 3052
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      }\n    );\n\n    const data = await backendResponse.json();\n\n    // Return the same status and data from the backend\n    return NextResponse.json(data, { status: backendResponse.status });\n\n  } catch {\n    // // console.error('Error in remove-duplicates API route:', error);",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/remove-duplicates/route.ts",
        "start": 21,
        "end": 37,
        "startLoc": {
          "line": 21,
          "column": 24,
          "position": 105
        },
        "endLoc": {
          "line": 37,
          "column": 69,
          "position": 206
        }
      },
      "secondFile": {
        "name": "app/api/update-database/route.ts",
        "start": 21,
        "end": 37,
        "startLoc": {
          "line": 21,
          "column": 22,
          "position": 105
        },
        "endLoc": {
          "line": 37,
          "column": 67,
          "position": 206
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      }\n    );\n\n    const data = await backendResponse.json();\n\n    // Return the same status and data from the backend\n    return NextResponse.json(data, { status: backendResponse.status });\n\n  } catch {\n    // // console.error('Error in migrate POST API route:', error);",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/migrate/route.ts",
        "start": 62,
        "end": 78,
        "startLoc": {
          "line": 62,
          "column": 14,
          "position": 309
        },
        "endLoc": {
          "line": 78,
          "column": 64,
          "position": 410
        }
      },
      "secondFile": {
        "name": "app/api/update-database/route.ts",
        "start": 21,
        "end": 37,
        "startLoc": {
          "line": 21,
          "column": 22,
          "position": 105
        },
        "endLoc": {
          "line": 37,
          "column": 67,
          "position": 206
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    // Check if response is JSON\n    const contentType = backendResponse.headers.get('content-type');\n    if (!contentType || !contentType.includes('application/json')) {\n      return NextResponse.json(\n        { \n          error: 'Backend service unavailable',\n          message: 'Kosher types service is currently unavailable'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/kosher-types/route.ts",
        "start": 21,
        "end": 36,
        "startLoc": {
          "line": 21,
          "column": 19,
          "position": 91
        },
        "endLoc": {
          "line": 36,
          "column": 48,
          "position": 191
        }
      },
      "secondFile": {
        "name": "app/api/statistics/route.ts",
        "start": 21,
        "end": 36,
        "startLoc": {
          "line": 21,
          "column": 17,
          "position": 91
        },
        "endLoc": {
          "line": 36,
          "column": 46,
          "position": 191
        }
      }
    },
    {
      "format": "tsx",
      "lines": 30,
      "fragment": "\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Migration Actions</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <button\n              onClick={() => performMigrationAction('queue_all_users')}\n              disabled={actionLoading}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {actionLoading ? 'Processing...' : 'Queue All Users'}\n            </button>\n            \n            <button\n              onClick={() => performMigrationAction('process_batch', 10)}\n              disabled={actionLoading}\n              className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50\"\n            >\n              {actionLoading ? 'Processing...' : 'Process Batch (10)'}\n            </button>\n            \n            <button\n              onClick={() => performMigrationAction('retry_failed')}\n              disabled={actionLoading}\n              className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 disabled:opacity-50\"\n            >\n              {actionLoading ? 'Processing...' : 'Retry Failed'}\n            </button>\n          </div>\n        </div>\n\n        {",
      "tokens": 0,
      "firstFile": {
        "name": "app/admin/migration/page.tsx",
        "start": 183,
        "end": 212,
        "startLoc": {
          "line": 183,
          "column": 36,
          "position": 1600
        },
        "endLoc": {
          "line": 212,
          "column": 2,
          "position": 1800
        }
      },
      "secondFile": {
        "name": "app/admin/migration-complete/page.tsx",
        "start": 318,
        "end": 346,
        "startLoc": {
          "line": 318,
          "column": 31,
          "position": 2766
        },
        "endLoc": {
          "line": 346,
          "column": 3,
          "position": 2980
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">0</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center",
      "tokens": 0,
      "firstFile": {
        "name": "app/profile/page.tsx",
        "start": 117,
        "end": 126,
        "startLoc": {
          "line": 117,
          "column": 8,
          "position": 955
        },
        "endLoc": {
          "line": 126,
          "column": 68,
          "position": 1030
        }
      },
      "secondFile": {
        "name": "app/profile/page.tsx",
        "start": 103,
        "end": 112,
        "startLoc": {
          "line": 103,
          "column": 10,
          "position": 829
        },
        "endLoc": {
          "line": 112,
          "column": 67,
          "position": 904
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "{/* Filters Modal */}\n        {showFilters && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 z-[60] flex items-center justify-center p-4\">\n            <div className=\"bg-white rounded-xl max-w-md w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-4 border-b border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-lg font-semibold\">Filters</h3>\n                  <button\n                    ",
      "tokens": 0,
      "firstFile": {
        "name": "app/favorites/page.tsx",
        "start": 149,
        "end": 157,
        "startLoc": {
          "line": 149,
          "column": 9,
          "position": 1190
        },
        "endLoc": {
          "line": 157,
          "column": 21,
          "position": 1264
        }
      },
      "secondFile": {
        "name": "components/map/UnifiedLiveMapClient.tsx",
        "start": 693,
        "end": 701,
        "startLoc": {
          "line": 693,
          "column": 7,
          "position": 5942
        },
        "endLoc": {
          "line": 701,
          "column": 19,
          "position": 6016
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n              </",
      "tokens": 0,
      "firstFile": {
        "name": "app/favorites/page.tsx",
        "start": 166,
        "end": 171,
        "startLoc": {
          "line": 166,
          "column": 8,
          "position": 1314
        },
        "endLoc": {
          "line": 171,
          "column": 3,
          "position": 1381
        }
      },
      "secondFile": {
        "name": "components/ui/Toast.tsx",
        "start": 63,
        "end": 104,
        "startLoc": {
          "line": 63,
          "column": 8,
          "position": 537
        },
        "endLoc": {
          "line": 104,
          "column": 2,
          "position": 943
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ">\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              \n              <",
      "tokens": 0,
      "firstFile": {
        "name": "app/eatery/page.tsx",
        "start": 439,
        "end": 446,
        "startLoc": {
          "line": 439,
          "column": 17,
          "position": 3474
        },
        "endLoc": {
          "line": 446,
          "column": 2,
          "position": 3553
        }
      },
      "secondFile": {
        "name": "app/favorites/page.tsx",
        "start": 165,
        "end": 104,
        "startLoc": {
          "line": 165,
          "column": 19,
          "position": 1304
        },
        "endLoc": {
          "line": 104,
          "column": 2,
          "position": 943
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": "={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n            className=\"min-h-screen flex flex-col px-6 py-8 relative\"\n          >\n            <button\n              onClick={handleCancel}\n              className=\"absolute top-6 right-6 p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900 mb-8 text-center\">\n              Tell us about the Eatery\n            </h1>\n            \n            <div className=\"space-y-4 flex-1\">\n              <div>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData",
      "tokens": 0,
      "firstFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 422,
        "end": 442,
        "startLoc": {
          "line": 422,
          "column": 8,
          "position": 3538
        },
        "endLoc": {
          "line": 442,
          "column": 9,
          "position": 3696
        }
      },
      "secondFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 396,
        "end": 411,
        "startLoc": {
          "line": 396,
          "column": 8,
          "position": 3358
        },
        "endLoc": {
          "line": 411,
          "column": 11,
          "position": 3486
        }
      }
    },
    {
      "format": "javascript",
      "lines": 39,
      "fragment": "}\n                className=\"text-gray-700 underline\"\n              >\n                Back\n              </button>\n              <button\n                onClick={handleNext}\n                className=\"bg-green-400 text-white px-8 py-3 rounded-lg font-medium hover:bg-green-500 transition-colors\"\n              >\n                Next\n              </button>\n            </div>\n          </motion.div>\n        )}\n\n        {currentStep === 3 && (\n          <motion.div\n            key=\"step3\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n            className=\"min-h-screen flex flex-col px-6 py-8 relative\"\n          >\n            <button\n              onClick={handleCancel}\n              className=\"absolute top-6 right-6 p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900 mb-8 text-center\">\n              Tell us about the Eatery\n            </h1>\n            \n            <div className=\"space-y-4 flex-1\">\n              <div>\n                <input\n                  type=\"tel\"\n                  name=\"phone\"\n                  value={formData.phone",
      "tokens": 0,
      "firstFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 555,
        "end": 593,
        "startLoc": {
          "line": 555,
          "column": 11,
          "position": 4534
        },
        "endLoc": {
          "line": 593,
          "column": 6,
          "position": 4776
        }
      },
      "secondFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 402,
        "end": 442,
        "startLoc": {
          "line": 402,
          "column": 13,
          "position": 3425
        },
        "endLoc": {
          "line": 442,
          "column": 5,
          "position": 3698
        }
      }
    },
    {
      "format": "javascript",
      "lines": 53,
      "fragment": "}\n                placeholder=\"Website (optional)\"\n                className=\"w-full px-4 py-3 bg-white border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400\"\n              />\n            </div>\n            \n            <div className=\"flex justify-between items-center mt-8\">\n              <button\n                onClick={handleBack}\n                className=\"text-gray-700 underline\"\n              >\n                Back\n              </button>\n              <button\n                onClick={handleNext}\n                className=\"bg-green-400 text-white px-8 py-3 rounded-lg font-medium hover:bg-green-500 transition-colors\"\n              >\n                Next\n              </button>\n            </div>\n          </motion.div>\n        )}\n\n        {currentStep === 4 && (\n          <motion.div\n            key=\"step4\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n            className=\"min-h-screen flex flex-col px-6 py-8 relative\"\n          >\n            <button\n              onClick={handleCancel}\n              className=\"absolute top-6 right-6 p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <div className=\"flex-1 flex flex-col justify-center items-center\">\n              <div className=\"w-full max-w-sm mx-auto\">\n                <div className=\"bg-gray-100 border-2 border-dashed border-gray-300 rounded-lg p-8 text-center mb-6\">\n                  <Plus className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-lg font-medium text-gray-700\">Add photos</p>\n                </div>\n                \n                <p className=\"text-sm text-gray-500 text-center leading-relaxed\">\n                  Quality photos make your eatery stand out. We recommend adding 2 to 5 clear, engaging images to maximize visibility and performance.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between items-center\">\n              <button\n                onClick={handleBack",
      "tokens": 0,
      "firstFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 712,
        "end": 764,
        "startLoc": {
          "line": 712,
          "column": 18,
          "position": 5657
        },
        "endLoc": {
          "line": 764,
          "column": 11,
          "position": 6036
        }
      },
      "secondFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 548,
        "end": 411,
        "startLoc": {
          "line": 548,
          "column": 2,
          "position": 4498
        },
        "endLoc": {
          "line": 411,
          "column": 11,
          "position": 3486
        }
      }
    },
    {
      "format": "javascript",
      "lines": 76,
      "fragment": "}\n              className=\"absolute top-6 right-6 p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <div className=\"flex-1 flex flex-col justify-center items-center\">\n              <div className=\"w-full max-w-sm mx-auto\">\n                <div className=\"bg-gray-100 border-2 border-dashed border-gray-300 rounded-lg p-8 text-center mb-6\">\n                  <Plus className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-lg font-medium text-gray-700\">Add photos</p>\n                </div>\n                \n                <p className=\"text-sm text-gray-500 text-center leading-relaxed\">\n                  Quality photos make your eatery stand out. We recommend adding 2 to 5 clear, engaging images to maximize visibility and performance.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between items-center\">\n              <button\n                onClick={handleBack}\n                className=\"text-gray-700 underline\"\n              >\n                Back\n              </button>\n              <button\n                onClick={handleNext}\n                className=\"bg-green-400 text-white px-8 py-3 rounded-lg font-medium hover:bg-green-500 transition-colors\"\n              >\n                Review listing\n              </button>\n            </div>\n          </motion.div>\n        )}\n\n        {currentStep === 5 && (\n          <motion.div\n            key=\"step5\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n            className=\"min-h-screen flex flex-col px-6 py-8 relative\"\n          >\n            <button\n              onClick={handleCancel}\n              className=\"absolute top-6 right-6 p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900 mb-8 text-center\">\n              Review your Listing\n            </h1>\n            \n            <div className=\"flex-1\">\n              <div className=\"bg-white border border-gray-200 rounded-lg p-6 mb-6 min-h-64\">\n                <div className=\"text-center text-gray-500\">\n                  <p>Listing preview will appear here</p>\n                </div>\n              </div>\n              \n              <p className=\"text-sm text-gray-600 text-center leading-relaxed mb-8\">\n                By tapping Submit listing, you agree to JewGo&apos;s{' '}\n                <span className=\"text-green-500\">Terms of Service</span>, and{' '}\n                <span className=\"text-green-500\">Privacy Policy</span>. All eatery&apos;s are manually reviewed. If your listing doesn&apos;t meet our guidelines and isn&apos;t approved, we will contact you to adjust.\n              </p>\n            </div>\n            \n            <div className=\"flex justify-between items-center\">\n              <button\n                onClick={handleBack}\n                className=\"text-gray-700 underline\"\n              >\n                Back\n              </button>\n              <button\n                onClick={handleSubmit",
      "tokens": 0,
      "firstFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 744,
        "end": 819,
        "startLoc": {
          "line": 744,
          "column": 13,
          "position": 5848
        },
        "endLoc": {
          "line": 819,
          "column": 13,
          "position": 6486
        }
      },
      "secondFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 548,
        "end": 770,
        "startLoc": {
          "line": 548,
          "column": 2,
          "position": 4498
        },
        "endLoc": {
          "line": 770,
          "column": 11,
          "position": 6062
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "const duplicatePhone = existingRestaurants.find((restaurant: Restaurant) => {\n        const existingPhone = restaurant.phone?.replace(/\\D/g, '') || '';\n        return existingPhone === normalizedPhone && normalizedPhone.length > 0;\n      });\n      if (duplicatePhone) {\n        errors.",
      "tokens": 0,
      "firstFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 293,
        "end": 298,
        "startLoc": {
          "line": 293,
          "column": 7,
          "position": 2474
        },
        "endLoc": {
          "line": 298,
          "column": 2,
          "position": 2556
        }
      },
      "secondFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 141,
        "end": 146,
        "startLoc": {
          "line": 141,
          "column": 11,
          "position": 1176
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1258
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ".toLowerCase().trim().replace(/\\s+/g, ' ');\n      const duplicateAddress = existingRestaurants.find((restaurant: Restaurant) => {\n        const existingAddress = restaurant.address?.toLowerCase().trim().replace(/\\s+/g, ' ') || '';\n        return existingAddress === normalizedAddress && normalizedAddress.length > 0;\n      });\n      if (duplicateAddress) {\n        errors.",
      "tokens": 0,
      "firstFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 302,
        "end": 308,
        "startLoc": {
          "line": 302,
          "column": 8,
          "position": 2587
        },
        "endLoc": {
          "line": 308,
          "column": 2,
          "position": 2696
        }
      },
      "secondFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 151,
        "end": 157,
        "startLoc": {
          "line": 151,
          "column": 6,
          "position": 1290
        },
        "endLoc": {
          "line": 157,
          "column": 2,
          "position": 1399
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n            className=\"min-h-screen flex flex-col px-6 py-8 relative\"\n          >\n            <button\n              onClick={handleCancel}\n              className=\"absolute top-6 right-6 p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900 mb-8 text-center\">\n              Tell us about the Eatery\n            </h1>\n            \n            <div className=\"space-y-4 flex-1\">\n              <div>\n                <input\n                  type=\"tel",
      "tokens": 0,
      "firstFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 572,
        "end": 591,
        "startLoc": {
          "line": 572,
          "column": 6,
          "position": 4613
        },
        "endLoc": {
          "line": 591,
          "column": 4,
          "position": 4762
        }
      },
      "secondFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 421,
        "end": 440,
        "startLoc": {
          "line": 421,
          "column": 6,
          "position": 3535
        },
        "endLoc": {
          "line": 440,
          "column": 5,
          "position": 3684
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "\"\n              />\n            </div>\n            \n            <div className=\"flex justify-between items-center mt-8\">\n              <button\n                onClick={handleBack}\n                className=\"text-gray-700 underline\"\n              >\n                Back\n              </button>\n              <button\n                onClick={handleNext}\n                className=\"bg-green-400 text-white px-8 py-3 rounded-lg font-medium hover:bg-green-500 transition-colors\"\n              >\n                Next\n              </button>\n            </div>\n          </motion.div>\n        )}\n\n        {currentStep === 4",
      "tokens": 0,
      "firstFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 714,
        "end": 735,
        "startLoc": {
          "line": 714,
          "column": 113,
          "position": 5669
        },
        "endLoc": {
          "line": 735,
          "column": 2,
          "position": 5764
        }
      },
      "secondFile": {
        "name": "app/add-eatery/page.tsx",
        "start": 549,
        "end": 570,
        "startLoc": {
          "line": 549,
          "column": 125,
          "position": 4504
        },
        "endLoc": {
          "line": 570,
          "column": 2,
          "position": 4599
        }
      }
    }
  ]
}