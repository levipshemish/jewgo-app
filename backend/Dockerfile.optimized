# Use Python 3.11 Alpine for smaller image size
FROM python:3.11-alpine AS builder

# Set environment variables for non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    postgresql-dev \
    linux-headers \
    curl \
    && rm -rf /var/cache/apk/*

# Copy requirements and install Python dependencies
COPY requirements-optimized.txt .
RUN pip install --no-cache-dir --user -r requirements-optimized.txt

# Runtime stage
FROM python:3.11-alpine AS runtime

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PATH="/home/appuser/.local/bin:${PATH}"
ENV PYTHONPATH="/app"

# Install only essential runtime dependencies
RUN apk add --no-cache \
    curl \
    postgresql-client \
    && rm -rf /var/cache/apk/*

# Create non-root user
RUN adduser -D -u 1000 appuser

# Copy Python packages from builder stage
COPY --from=builder /root/.local /home/appuser/.local

# Set working directory
WORKDIR /app

# Copy application code
COPY --chown=appuser:appuser . .

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 5000

# Enhanced health check with better error handling
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/healthz || exit 1

# Use Gunicorn for production
CMD ["gunicorn", "--config", "config/gunicorn.conf.py", "wsgi:application"]
