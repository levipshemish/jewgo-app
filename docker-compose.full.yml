services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: jewgo
      POSTGRES_USER: jewgo_user
      POSTGRES_PASSWORD: jewgo_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - jewgo-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - jewgo-network
    restart: unless-stopped

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://jewgo_user:jewgo_password@postgres:5432/jewgo
      - REDIS_URL=redis://redis:6379
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - ./config/environment/backend.env.example:/app/.env:ro
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - jewgo-network
    restart: unless-stopped
    command: python -m flask run --host=0.0.0.0 --port=5000

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:5000
      - NEXT_PUBLIC_BACKEND_URL=http://backend:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - ./config/environment/frontend.env.example:/app/.env.local:ro
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - jewgo-network
    restart: unless-stopped
    command: pnpm dev

volumes:
  postgres_data:

networks:
  jewgo-network:
    driver: bridge
