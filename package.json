{
  "name": "jewgo-app",
  "version": "1.0.0",
  "private": true,
  "description": "JewGo - Kosher restaurant finder and marketplace",
  "scripts": {
    "// MCP scripts for local development only": "",
    "mcp:strict": "node ./tools/ts-next-strict-mcp/dist/index.js",
    "mcp:schema": "schema-drift-mcp",
    "mcp:guard": "node ./tools/ci-guard-mcp/dist/index.js",
    "mcp:build": "pnpm -C tools/ts-next-strict-mcp build && pnpm -C tools/ci-guard-mcp build",
    "mcp:install": "pnpm -C tools/ts-next-strict-mcp install --no-frozen-lockfile && pnpm -C tools/ci-guard-mcp install --no-frozen-lockfile && pipx install -e tools/schema-drift-mcp",
    "mcp:setup": "chmod +x scripts/mcp-*.sh && ./scripts/mcp-setup.sh",
    "mcp:pre-commit": "./scripts/mcp-pre-commit.sh",
    "mcp:pre-merge": "./scripts/mcp-pre-merge.sh",
    "mcp:health": "./scripts/mcp-health-check.sh",
    "mcp:schema-check": "./scripts/mcp-schema-check.sh",
    "mcp:update": "pnpm -C tools/ts-next-strict-mcp update --no-frozen-lockfile && pnpm -C tools/ci-guard-mcp update --no-frozen-lockfile && pipx upgrade schema-drift-mcp",
    "mcp:cleanup": "rm -rf tools/*/node_modules tools/*/dist",
    "mcp:reset": "pnpm mcp:cleanup && pnpm mcp:setup",
    "// Docker development scripts": "",
    "docker:dev": "./scripts/auto-docker-dev.sh start",
    "docker:watch": "./scripts/auto-docker-dev.sh watch",
    "docker:rebuild": "./scripts/auto-docker-dev.sh rebuild",
    "docker:logs": "./scripts/auto-docker-dev.sh logs",
    "docker:status": "./scripts/auto-docker-dev.sh status",
    "docker:stop": "./scripts/auto-docker-dev.sh stop",
    "docker:cleanup": "./scripts/auto-docker-dev.sh cleanup",
    "// Docker Hub deployment scripts": "",
    "docker:build": "./scripts/docker-hub-workflow.sh build",
    "docker:push": "./scripts/docker-hub-workflow.sh push",
    "docker:deploy": "./scripts/docker-hub-workflow.sh build-and-push",
    "docker:list": "./scripts/docker-hub-workflow.sh list",
    "docker:clean": "./scripts/docker-hub-workflow.sh clean",
    "docker:hub-status": "./scripts/docker-hub-workflow.sh status",
    "// Docker Hub deployment with .env support": "",
    "docker:deploy-env": "./scripts/docker-hub-deploy-with-env.sh deploy",
    "docker:build-env": "./scripts/docker-hub-deploy-with-env.sh build",
    "docker:push-env": "./scripts/docker-hub-deploy-with-env.sh push",
    "docker:validate-env": "./scripts/docker-hub-deploy-with-env.sh validate-env",
    "docker:list-env": "./scripts/docker-hub-deploy-with-env.sh list-env",
    "docker:env-status": "./scripts/docker-hub-deploy-with-env.sh status",
    "// Build and Deploy System": "",
    "build": "./scripts/build-and-deploy.sh build",
    "deploy": "./scripts/build-and-deploy.sh deploy",
    "update": "./scripts/build-and-deploy.sh update",
    "run": "./scripts/build-and-deploy.sh run",
    "stop": "./scripts/build-and-deploy.sh stop",
    "restart": "./scripts/build-and-deploy.sh restart",
    "status": "./scripts/build-and-deploy.sh status",
    "logs": "./scripts/build-and-deploy.sh logs",
    "clean": "./scripts/build-and-deploy.sh clean",
    "validate": "./scripts/build-and-deploy.sh validate-env",
    "env:check": "node scripts/env-consistency-check.js",
    "env:check:strict": "STRICT=1 node scripts/env-consistency-check.js",
    "// Quick Update Commands": "",
    "quick-update": "./scripts/update.sh",
    "quick-update:dev": "./scripts/update.sh dev",
    "quick-update:staging": "./scripts/update.sh staging",
    "quick-update:prod": "./scripts/update.sh prod",
    "// Sandbox Commands": "",
    "sandbox:start": "./scripts/sandbox.sh start",
    "sandbox:stop": "./scripts/sandbox.sh stop",
    "sandbox:restart": "./scripts/sandbox.sh restart",
    "sandbox:logs": "./scripts/sandbox.sh logs",
    "sandbox:rebuild": "./scripts/sandbox.sh rebuild",
    "sandbox:test": "./scripts/sandbox.sh test",
    "sandbox:visual-test": "./scripts/sandbox.sh visual-test",
    "sandbox:install": "./scripts/sandbox.sh install",
    "sandbox:cleanup": "./scripts/sandbox.sh cleanup",
    "sandbox:status": "./scripts/sandbox.sh status"
  },
  "devDependencies": {
    "pnpm": "^8.0.0"
  }
}
