version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: jewgo
      POSTGRES_USER: jewgo_user
      POSTGRES_PASSWORD: jewgo_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - jewgo-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - jewgo-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./config/environment/backend.production.env
    volumes:
      - ./backend:/app
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - redis
    networks:
      - jewgo-network
    restart: unless-stopped
    command: gunicorn -c config/gunicorn.conf.py app:app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.optimized
    env_file:
      - ./config/environment/frontend.production.env
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - jewgo-network
    restart: unless-stopped

  ngrok-frontend:
    image: ngrok/ngrok:latest
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=31adOo1S7qte2XRrfyp06yW8VvE_5eqRwUNG8gUCxGgM6copE
    command: http frontend:3000 --log=stdout
    depends_on:
      - frontend
    networks:
      - jewgo-network
    restart: unless-stopped

  ngrok-backend:
    image: ngrok/ngrok:latest
    ports:
      - "4041:4040"
    environment:
      - NGROK_AUTHTOKEN=31adOo1S7qte2XRrfyp06yW8VvE_5eqRwUNG8gUCxGgM6copE
    command: http backend:8082 --log=stdout
    depends_on:
      - backend
    networks:
      - jewgo-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  jewgo-network:
    driver: bridge
