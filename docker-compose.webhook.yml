version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.webhook
    container_name: jewgo-backend
    network_mode: host
    depends_on: []
    env_file:
      - ./.env
    volumes:
      # Mount the entire home directory to preserve git repository
      - /home/ubuntu:/home/ubuntu
      # Mount git repository specifically for webhook access
      - /home/ubuntu/.git:/home/ubuntu/.git
    environment:
      # Set working directory to match container working directory
      - APP_WORKDIR=/home/ubuntu
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g

  nginx:
    image: nginx:latest
    container_name: jewgo-nginx
    network_mode: host
    depends_on:
      - backend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: jewgo-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/auth-alerts.yml:/etc/prometheus/auth-alerts.yml:ro
      - ./monitoring/application-alerts.yml:/etc/prometheus/application-alerts.yml:ro
      - ./monitoring/infrastructure-alerts.yml:/etc/prometheus/infrastructure-alerts.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: always
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager:latest
    container_name: jewgo-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    restart: always
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: jewgo-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: always
    networks:
      - monitoring

  # System Metrics Exporters
  node-exporter:
    image: prom/node-exporter:latest
    container_name: jewgo-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    networks:
      - monitoring

  # Database Metrics Exporters
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: jewgo-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://username:password@hostname:5432/database?sslmode=disable
    restart: always
    networks:
      - monitoring

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: jewgo-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    restart: always
    networks:
      - monitoring

  # Nginx Metrics Exporter
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: jewgo-nginx-exporter
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://nginx:80/nginx_status'
    restart: always
    networks:
      - monitoring

  # Blackbox Exporter for Health Checks
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: jewgo-blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./monitoring/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    restart: always
    networks:
      - monitoring

volumes:
  prometheus_data:
  alertmanager_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
