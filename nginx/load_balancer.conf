# Load Balancer Configuration for JewGo Backend
# This configuration provides load balancing, health checks, and failover

# Upstream backend servers
upstream jewgo_backend {
    # Primary backend servers
    server 127.0.0.1:5000 weight=3 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:5001 weight=2 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:5002 weight=1 max_fails=3 fail_timeout=30s;
    
    # Load balancing method
    least_conn;
    
    # Health check configuration
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Health check endpoint
upstream jewgo_health {
    server 127.0.0.1:5000;
    server 127.0.0.1:5001;
    server 127.0.0.1:5002;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=search_limit:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=write_limit:10m rate=10r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn_zone $server_name zone=conn_limit_per_server:10m;

server {
    listen 80;
    server_name api.jewgo.app;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'";
    
    # Connection limits
    limit_conn conn_limit_per_ip 20;
    limit_conn conn_limit_per_server 1000;
    
    # CORS headers
    add_header Access-Control-Allow-Origin "https://jewgo.app" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    add_header Access-Control-Max-Age 86400 always;
    
    # Handle preflight requests
    location / {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://jewgo.app";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        # Rate limiting based on endpoint
        location ~ ^/api/restaurants/search {
            limit_req zone=search_limit burst=10 nodelay;
            proxy_pass http://jewgo_backend;
        }
        
        location ~ ^/api/restaurants$ {
            if ($request_method = POST) {
                limit_req zone=write_limit burst=5 nodelay;
            }
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://jewgo_backend;
        }
        
        # Default rate limiting for all API endpoints
        location ~ ^/api/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://jewgo_backend;
        }
        
        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://jewgo_health;
            access_log off;
        }
        
        # Default proxy configuration
        proxy_pass http://jewgo_backend;
    }
    
    # Proxy configuration
    location / {
        proxy_pass http://jewgo_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # Static file serving (if needed)
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Logging
    access_log /var/log/nginx/jewgo_api_access.log;
    error_log /var/log/nginx/jewgo_api_error.log;
}

# HTTPS configuration (if SSL certificates are available)
server {
    listen 443 ssl http2;
    server_name api.jewgo.app;
    
    # SSL configuration
    ssl_certificate /etc/ssl/certs/jewgo.crt;
    ssl_certificate_key /etc/ssl/private/jewgo.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Same configuration as HTTP server
    include /etc/nginx/conf.d/load_balancer.conf;
}

# Monitoring endpoint for load balancer status
server {
    listen 8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
    
    location /upstream_status {
        access_log off;
        allow 127.0.0.1;
        deny all;
        
        # This would need a custom module for upstream status
        return 200 "Upstream status endpoint\n";
    }
}
